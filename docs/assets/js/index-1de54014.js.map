{"version":3,"file":"index-1de54014.js","sources":["../../../code/src/pages/webgpu/effect/water/methods.ts","../../../code/src/pages/webgpu/effect/water/index.vue"],"sourcesContent":["import * as THREE from 'three/webgpu'\nimport * as ThreeScene from 'three-scene'\n\nimport { gaussianBlur } from 'three/examples/jsm/tsl/display/GaussianBlurNode'\nimport { GUI } from 'dat.gui'\n\nconst TSL = THREE.TSL\nconst {\n  color,\n  vec2,\n  pass,\n  linearDepth,\n  normalWorld,\n  triplanarTexture,\n  texture,\n  objectPosition,\n  screenUV,\n  viewportLinearDepth,\n  viewportDepthTexture,\n  viewportSharedTexture,\n  mx_worley_noise_float,\n  positionWorld,\n  time\n} = TSL\n\nconst base = import.meta.env.VITE_BEFORE_STATIC_PATH\nconst textureLoader = new THREE.TextureLoader()\nconst iceDiffuse = textureLoader.load(`${base}/oss/textures/gpu/water.jpg`)\niceDiffuse.wrapS = THREE.RepeatWrapping\niceDiffuse.wrapT = THREE.RepeatWrapping\niceDiffuse.colorSpace = THREE.NoColorSpace\n\nconst iceColorNode = triplanarTexture(texture(iceDiffuse)).add(color(0x0066ff)).mul(0.8)\n\nconst material = new THREE.MeshStandardNodeMaterial({ colorNode: iceColorNode })\n\nexport class WaterScene extends ThreeScene.Scene {\n  postProcessing?: any\n  group?: InstanceType<typeof THREE.Group>\n  cylinder?: InstanceType<typeof THREE.Mesh>\n  gui: InstanceType<typeof GUI>\n\n  floorPosition = new THREE.Vector3(0, 0.2, 0)\n\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    this.createClock()\n\n    // 背景\n    this.scene.backgroundNode = normalWorld.y.mix(color(0x0487e2), color(0x0066ff))\n\n    this.camera.lookAt(0, 1, 0)\n\n    this.addLight()\n\n    this.group = new THREE.Group()\n    this.addModel()\n\n    this.addWater()\n\n    this.addProcessing()\n\n    this.gui = new GUI()\n    this.addGui()\n  }\n\n  createRender() {\n    return new THREE.WebGPURenderer() as any\n  }\n\n  createDirectionalLight(color: string | number, intensity: number) {\n    return new THREE.DirectionalLight(color, intensity)\n  }\n\n  addLight() {\n    const waterAmbientLight = new THREE.HemisphereLight(0x333366, 0x74ccf4, 5)\n    const skyAmbientLight = new THREE.HemisphereLight(0x74ccf4, 0, 1)\n\n    this.addObject(skyAmbientLight)\n    this.addObject(waterAmbientLight)\n  }\n\n  addModel() {\n    const count = 100\n    const scale = 3.5\n    const column = 10\n\n    const group = new THREE.Group()\n    const geometry = new THREE.IcosahedronGeometry(1, 3)\n\n    for (let i = 0; i < count; i++) {\n      const x = i % column\n      const y = i / column\n\n      const mesh = new THREE.Mesh(geometry, material)\n      mesh.position.set(x * scale, 0, y * scale)\n      mesh.rotation.set(Math.random(), Math.random(), Math.random())\n      group.add(mesh)\n    }\n\n    group.position.set((column - 1) * scale * -0.5, -1, (count / column) * scale * -0.5)\n    this.addObject(group)\n    this.group = group\n  }\n\n  addWater() {\n    const timer = time.mul(0.8)\n    const floorUV = positionWorld.xzy\n\n    const waterLayer0 = mx_worley_noise_float(floorUV.mul(4).add(timer))\n    const waterLayer1 = mx_worley_noise_float(floorUV.mul(2).add(timer))\n\n    const waterIntensity = waterLayer0.mul(waterLayer1)\n    const waterColor = waterIntensity.mul(1.4).mix(color(0x0487e2), color(0x74ccf4))\n\n    // linearDepth() returns the linear depth of the mesh\n    const depth = linearDepth()\n    const depthWater = viewportLinearDepth.sub(depth)\n    const depthEffect = depthWater.remapClamp(-0.002, 0.04)\n\n    const refractionUV = screenUV.add(vec2(0, waterIntensity.mul(0.1)))\n\n    // linearDepth( viewportDepthTexture( uv ) ) return the linear depth of the scene\n    const depthTestForRefraction = linearDepth(viewportDepthTexture(refractionUV)).sub(depth)\n\n    const depthRefraction = depthTestForRefraction.remapClamp(0, 0.1)\n\n    const finalUV = depthTestForRefraction.lessThan(0).select(screenUV, refractionUV)\n\n    const viewportTexture = viewportSharedTexture(finalUV)\n\n    const waterMaterial = new THREE.MeshBasicNodeMaterial()\n    waterMaterial.colorNode = waterColor\n    waterMaterial.backdropNode = depthEffect.mix(\n      viewportSharedTexture(),\n      viewportTexture.mul(depthRefraction.mix(1, waterColor))\n    )\n    waterMaterial.backdropAlphaNode = depthRefraction.oneMinus()\n    waterMaterial.transparent = true\n\n    const water = new THREE.Mesh(new THREE.BoxGeometry(50, 0.001, 50), waterMaterial)\n    water.position.set(0, 0, 0)\n    this.addObject(water)\n\n    // 柱子\n    const cylinder = new THREE.Mesh(\n      new THREE.CylinderGeometry(1.1, 1.1, 10),\n      new THREE.MeshStandardNodeMaterial({ colorNode: iceColorNode })\n    )\n    cylinder.position.set(0, -5, 0)\n    this.addObject(cylinder)\n\n    // 水面反光效果\n    const waterPosY = positionWorld.y.sub(water.position.y)\n    let transition: any = waterPosY.add(0.1).saturate().oneMinus()\n    transition = waterPosY.lessThan(0).select(transition, normalWorld.y.mix(transition, 0)).toVar()\n    // @ts-ignore\n    const colorNode = transition.mix(material.colorNode, material.colorNode?.add(waterLayer0))\n    cylinder.material.colorNode = colorNode\n    this.cylinder = cylinder\n  }\n\n  // 后期处理\n  addProcessing() {\n    this.controls?.target.set(0, 0.2, 0)\n\n    // 后期处理\n    const { camera, scene, renderer } = this\n    const scenePass = pass(scene, camera)\n    const scenePassColor = scenePass.getTextureNode()\n    const scenePassDepth = scenePass.getLinearDepthNode().remapClamp(0.3, 0.5)\n\n    const waterMask = objectPosition(camera).y.greaterThan(screenUV.y.sub(0.5).mul(camera.near))\n\n    const scenePassColorBlurred = gaussianBlur(scenePassColor)\n    scenePassColorBlurred.directionNode = waterMask.select(\n      scenePassDepth,\n      scenePass.getLinearDepthNode().mul(5)\n    )\n\n    const vignette = screenUV.distance(0.5).mul(1.35).clamp().oneMinus()\n\n    const postProcessing = new THREE.PostProcessing(renderer)\n    postProcessing.needsUpdate = true\n\n    postProcessing.outputNode = waterMask.select(\n      scenePassColorBlurred,\n      scenePassColorBlurred.mul(color(0x74ccf4)).mul(vignette)\n    )\n    this.postProcessing = postProcessing\n  }\n\n  addGui() {\n    const gui = this.gui\n\n    gui.add(this.floorPosition, 'y', -1, 1, 0.001).name('移动柱子')\n\n    gui.domElement.className += ' gui-wrap'\n    this.container.parentNode?.appendChild(gui.domElement)\n  }\n\n  animate(): void {\n    if (this.postProcessing) {\n      this.postProcessing.renderAsync()\n    }\n\n    if (this.cylinder) {\n      this.cylinder.position.y = this.floorPosition.y - 5\n    }\n\n    const delta = this.clock?.getDelta() as number\n    // this.controls?.update()\n\n    for (const object of this.group?.children || []) {\n      object.position.y = Math.sin((this.clock?.elapsedTime ?? 0) + object.id) * 0.3\n      object.rotation.y += delta * 0.3\n    }\n  }\n\n  dispose() {\n    this.disposeObj(this.group)\n    this.group = void 0\n    super.dispose()\n  }\n}\n","<template>\n  <div class=\"three-page\">\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { WaterScene } from './methods'\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof WaterScene>[0] = {\n  directionalLight: {\n    position: [0.5, 3, 0.5],\n    color: 0xffe499,\n    intensity: 5,\n    light2: false\n  },\n  ambientLight: {\n    visible: false\n  },\n  render: {\n    logarithmicDepthBuffer: false\n  },\n  camera: {\n    near: 0.25,\n    // 相机最远距离 影响水波纹效果\n    far: 25,\n    position: [3, 2, 4]\n  },\n  controls: {\n    minDistance: 1,\n    maxDistance: 10,\n    maxPolarAngle: Math.PI * 0.9\n  }\n}\nlet scene: InstanceType<typeof WaterScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new WaterScene(options)\n  scene.run()\n\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["TSL","THREE.TSL","color","vec2","pass","linearDepth","normalWorld","triplanarTexture","texture","objectPosition","screenUV","viewportLinearDepth","viewportDepthTexture","viewportSharedTexture","mx_worley_noise_float","positionWorld","time","iceDiffuse","THREE.TextureLoader","load","wrapS","THREE.RepeatWrapping","wrapT","colorSpace","THREE.NoColorSpace","iceColorNode","add","mul","material","THREE.MeshStandardNodeMaterial","colorNode","WaterScene","ThreeScene.Scene","constructor","options","super","__publicField","this","THREE.Vector3","createClock","scene","backgroundNode","y","mix","camera","lookAt","addLight","group","THREE.Group","addModel","addWater","addProcessing","gui","GUI","addGui","createRender","THREE.WebGPURenderer","createDirectionalLight","intensity","THREE.DirectionalLight","waterAmbientLight","THREE.HemisphereLight","skyAmbientLight","addObject","scale","geometry","THREE.IcosahedronGeometry","i","x","mesh","THREE.Mesh","position","set","rotation","Math","random","count","timer","floorUV","xzy","waterLayer0","waterLayer1","waterIntensity","waterColor","depth","depthEffect","sub","remapClamp","refractionUV","depthTestForRefraction","depthRefraction","finalUV","lessThan","select","viewportTexture","waterMaterial","THREE.MeshBasicNodeMaterial","backdropNode","backdropAlphaNode","oneMinus","transparent","water","THREE.BoxGeometry","cylinder","THREE.CylinderGeometry","waterPosY","transition","saturate","toVar","_a","controls","target","renderer","scenePass","scenePassColor","getTextureNode","scenePassDepth","getLinearDepthNode","waterMask","greaterThan","near","scenePassColorBlurred","gaussianBlur","directionNode","vignette","distance","clamp","postProcessing","THREE.PostProcessing","needsUpdate","outputNode","floorPosition","name","domElement","className","container","parentNode","appendChild","animate","renderAsync","delta","clock","getDelta","object","_b","children","sin","_c","elapsedTime","id","dispose","disposeObj","containerRef","ref","directionalLight","light2","ambientLight","visible","render","logarithmicDepthBuffer","far","minDistance","maxDistance","maxPolarAngle","PI","onMounted","value","run","useResize","resize"],"mappings":"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"}