{"version":3,"file":"index-c1e7cb3e.js","sources":["../../../code/src/pages/tools/model-convert/config.ts","../../../code/src/pages/tools/model-convert/methods.ts","../../../code/src/pages/tools/model-convert/data.ts","../../../code/src/pages/tools/model-convert/index.vue"],"sourcesContent":["export default {\n  // 接受阴影网格名称-（需要接受阴影-地面）\n  receiveShadowName: [\n    '楼板',\n    '地面',\n    '底座',\n    '底板',\n    '基础',\n    '基础底座',\n    '冷却塔基础',\n    '草地',\n    'ground',\n    'Ground'\n  ],\n\n  // 动画材质网格名称\n  animatehName: [\n    '动画',\n    '螺杆A',\n    '螺杆B',\n    '螺杆A001',\n    '螺杆B001',\n    '螺杆A002',\n    '螺杆B002',\n    '叶轮A',\n    '叶轮B',\n    '叶轮C',\n    '阀门'\n  ],\n\n  // 透明网格名称\n  transparentName: ['透明', '透明外壳']\n}\n","import * as THREE from 'three'\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls'\nimport { Water } from 'three/examples/jsm/objects/Water'\nimport * as ThreeScene from 'three-scene'\nimport { GUI } from 'dat.gui'\n\nconst Utils = ThreeScene.Utils\nconst Hooks = ThreeScene.Hooks\nimport DefaultConfig from './config'\n\nconst {\n  materialReplace,\n  changeTransparent,\n  exportGlb,\n  getAnimations,\n  setMetalnessMaterial,\n  setGlassMaterial,\n  centerBoxHelper\n} = Hooks.useMaterial()\nconst { backgroundLoad, skys } = Hooks.useBackground()\nconst { raycaster, pointer, update: raycasterUpdate } = Hooks.useRaycaster()\n\nconst _ElMessage = opts => {\n  return ElMessage(opts)\n}\n\nconst Message = new Proxy(\n  {\n    warning: msg => {\n      return _ElMessage({\n        message: msg,\n        type: 'warning',\n        grouping: true\n      })\n    },\n    success: msg => {\n      return _ElMessage({\n        message: msg,\n        type: 'success',\n        grouping: true\n      })\n    }\n  },\n  {\n    get(target, property, _receiver) {\n      return target[property]\n    }\n  }\n)\n\nconst base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nconst createWater = (model?) => {\n  const waterGeometry = model ? model.geometry : new THREE.PlaneGeometry(200, 200)\n  const water = new Water(waterGeometry, {\n    textureWidth: 512,\n    textureHeight: 512,\n    waterNormals: new THREE.TextureLoader().load(\n      base + '/oss/textures/waternormals.jpg',\n      texture => {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      }\n    ),\n    sunDirection: new THREE.Vector3(),\n    sunColor: 0xf00f00,\n    waterColor: 0x01688b,\n    distortionScale: 3.7\n  })\n  water.material.uniforms.size.value = 0.5\n  return water\n}\n\nexport const guiOpts = reactive({\n  dotText: ''\n})\n\n// 创建点位球\nconst createPointSphere = () => {\n  const sphere = new THREE.SphereGeometry(1.75, 10, 10)\n  const material = new THREE.MeshBasicMaterial({ color: Math.random() * 0xffffff, wireframe: true })\n  const mesh = new THREE.Mesh(sphere, material)\n  mesh.name = '点位'\n  mesh.position.set(0, 140, 0)\n  return mesh\n}\n\nexport class ConvertThreeScene extends ThreeScene.Scene {\n  clock: InstanceType<typeof THREE.Clock>\n  gui: InstanceType<typeof GUI>\n\n  modelGroup?: InstanceType<typeof THREE.Group>\n  helperGroup?: InstanceType<typeof THREE.Group>\n\n  groundMesh?: InstanceType<typeof THREE.Mesh>\n\n  transformControls?: InstanceType<typeof TransformControls>\n\n  guiOpts = {\n    // 缩放\n    scale: 1,\n    // 双面\n    side: false,\n    // 入场动画\n    insetAnimate: false,\n    // 转换材质\n    transformMaterial: false,\n    // 地面反光\n    groundReflection: false,\n    // 材质反光\n    glisten: false,\n    // 透明外壳\n    opacitySkin: false,\n    opacity: 0.6\n  }\n\n  // 定位球\n  setPiece: InstanceType<typeof THREE.Mesh>\n\n  // 水面\n  water?: InstanceType<typeof Water>\n\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    this.addControls()\n    this.clock = new THREE.Clock()\n\n    this.gui = new GUI()\n\n    this.addGround()\n    this.addGui()\n    this.addModelGroup()\n\n    this.setPiece = createPointSphere()\n    this.addObject(this.setPiece)\n\n    this.bindEvent()\n  }\n\n  // setEnv(texture) {\n  //   this.scene.background = texture\n  //   this.scene.environment = texture\n  // }\n\n  addControls() {\n    const camera = this.camera as any\n    const controls = new TransformControls(camera, this.renderer.domElement)\n\n    // 监听相机变化\n    controls.addEventListener('dragging-changed', e => {\n      this.controls && (this.controls.enabled = !e.value)\n    })\n\n    this.transformControls = controls\n    this.addObject(controls.getHelper())\n\n    const onKeydown = e => this.onKeydown(e)\n    const onKeyup = e => {\n      console.log(e)\n    }\n\n    window.addEventListener('keydown', onKeydown, false)\n    window.addEventListener('keyup', onKeyup, false)\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('keydown', onKeydown)\n      window.removeEventListener('keyup', onKeyup)\n    })\n  }\n\n  onKeydown(e) {\n    const control = this.transformControls\n    if (!control) return\n    switch (e.key) {\n      case 'w':\n        control.setMode('translate')\n        break\n\n      case 'e':\n        control.setMode('rotate')\n        break\n\n      case 'r':\n        control.setMode('scale')\n        break\n\n      case '+':\n      case '=':\n        control.setSize(control.size + 0.1)\n        break\n\n      case '-':\n      case '_':\n        control.setSize(Math.max(control.size - 0.1, 0.1))\n        break\n\n      case 'x':\n        control.showX = !control.showX\n        break\n\n      case 'y':\n        control.showY = !control.showY\n        break\n\n      case 'z':\n        control.showZ = !control.showZ\n        break\n\n      case ' ':\n        control.enabled = !control.enabled\n        break\n\n      case 'Escape':\n        control.reset()\n        break\n    }\n  }\n\n  addGui() {\n    const gui = this.gui\n\n    // 主功能\n    this.addMainFunction()\n\n    // 材质处理\n    this.addMaterial()\n\n    // 灯光\n    this.addLight()\n\n    // 网格名称处理\n    this.addNameGroupGui()\n\n    // 重置\n    this.addResetGui()\n\n    // 环境\n    this.addEvnGui()\n\n    gui.domElement.className += ' gui-wrap'\n    this.container.parentNode?.appendChild(gui.domElement)\n  }\n\n  addGround() {\n    const geo = new THREE.PlaneGeometry(5000, 5000)\n    const mat = new THREE.MeshStandardMaterial({\n      color: 0xa0adaf\n      // shininess: 10\n    })\n    const mesh = new THREE.Mesh(geo, mat)\n    mesh.name = 'ground'\n    mesh.rotation.x = Math.PI * 1.5\n    // 接收阴影\n    mesh.receiveShadow = true\n    mesh.visible = false\n    this.groundMesh = mesh\n    this.addObject(mesh)\n  }\n\n  // 主功能\n  addMainFunction() {\n    const gui = this.gui\n    if (!this.container) return\n    // @ts-ignore\n    const fileEl = this.container.parentNode.querySelector('input[type=\"file\"]') as HTMLInputElement\n    const option = {\n      importFile: () => {\n        fileEl.click()\n      },\n      exportGltf: () => {\n        this.export(false)\n      },\n      exportGlb: () => {\n        this.export()\n      },\n      exportPoints: () => {\n        const dotText = [this.setPiece].map(el => {\n          let p = <any>el.position\n          return `{ \"x\": ${p.x.toFixed(2) * 1}, \"y\": ${p.y.toFixed(2) * 1}, \"z\": ${\n            p.z.toFixed(2) * 1\n          } }`\n        })\n        guiOpts.dotText = dotText.join(',')\n        this.copyTextarea('坐标复制成功！')\n      },\n      target: () => {\n        if (!this.controls) return\n        const vs = this.controls.target\n        guiOpts.dotText = `{ x: ${vs.x}, y: ${vs.y}, z: ${vs.z} }`\n        this.copyTextarea('中心点复制成功！')\n      },\n      camera: () => {\n        const vs = this.camera.position\n        guiOpts.dotText = `{ x: ${vs.x}, y: ${vs.y}, z: ${vs.z} }`\n        this.copyTextarea('相机坐标复制成功！')\n      },\n      clearScene: () => {\n        this.clearModelGroup()\n      }\n    }\n    const group = gui.addFolder('主功能')\n    group.add(option, 'importFile').name('上传文件')\n    group.add(option, 'exportGltf').name('导出 .gltf')\n    group.add(option, 'exportGlb').name('导出 .glb')\n    group.add(option, 'exportPoints').name('导出坐标')\n    group.add(option, 'target').name('中心点')\n    group.add(option, 'camera').name('相机坐标')\n    group.add(option, 'clearScene').name('清空场景')\n    group.open()\n  }\n\n  // 材质处理\n  addMaterial() {\n    const gui = this.gui\n    if (!this.container) return\n    const group = gui.addFolder('材质')\n\n    group.add(this.guiOpts, 'transformMaterial').name('转换标准材质')\n    group\n      .add(this.guiOpts, 'glisten')\n      .name('材质反光')\n      .onChange(() => this.glistenToggle())\n    group\n      .add(this.guiOpts, 'groundReflection')\n      .name('地面反光')\n      .onChange(() => this.groundGlisten())\n    group\n      .add(this.guiOpts, 'side')\n      .name('双面材质')\n      .onChange(() => this.sideMaterialToggle())\n    group\n      .add(this.guiOpts, 'opacitySkin')\n      .name('材质透明')\n      .onChange(() => this.opacitySkin())\n    group\n      .add(this.guiOpts, 'opacity', 0, 1)\n      .name('透明度')\n      .onChange(() => this.opacitySkin())\n\n    group.open()\n  }\n\n  // 灯光\n  addLight() {\n    const gui = this.gui\n    if (!this.container) return\n    const group = gui.addFolder('灯光')\n    const params = {\n      intensity: 1,\n      color: 0xffffff,\n      castShadow: false,\n      distance: 10,\n      penumbra: 1,\n      decay: 1\n    }\n    group\n      .add(params, 'intensity', 1, 20)\n      .name('聚光灯强度')\n      .onChange(() => {\n        this.spotLight(params)\n      })\n    group\n      .addColor(params, 'color')\n      .name('聚光灯颜色')\n      .onChange(() => {\n        this.spotLight(params)\n      })\n    group\n      .add(params, 'castShadow')\n      .name('聚光灯阴影')\n      .onChange(() => {\n        this.spotLight(params)\n      })\n    group\n      .add(params, 'distance', 0.1, 1000)\n      .name('聚光灯光照距离')\n      .onChange(() => {\n        this.spotLight(params)\n      })\n    group\n      .add(params, 'penumbra', 0, 1)\n      .name('聚光灯半影衰减')\n      .onChange(() => {\n        this.spotLight(params)\n      })\n    group\n      .add(params, 'decay', 0, 1)\n      .name('聚光灯光照衰减')\n      .onChange(() => {\n        this.spotLight(params)\n      })\n    // group.open()\n  }\n\n  // 网格名称处理\n  addNameGroupGui() {\n    const gui = this.gui\n    const params = {\n      check: false,\n      metalness: 0.5,\n      roughness: 0,\n      water: () => {\n        this.addWater('水流')\n      }\n    }\n    const group = gui.addFolder('名称包含处理')\n    group.add(params, 'water').name('水面(水流)')\n\n    group\n      .add(params, 'check')\n      .name('金属材质(金属)')\n      .onChange(e => {\n        params.metalness = e ? 0.5 : 0\n        params.roughness = e ? 0 : 0.5\n        this.metalnessMaterialUpdate(params)\n      })\n    group\n      .add(params, 'metalness', 0, 1)\n      .name('金属权重')\n      .onChange(() => {\n        this.metalnessMaterialUpdate(params)\n      })\n    group\n      .add(params, 'roughness', 0, 1)\n      .name('金属粗糙度')\n      .onChange(() => {\n        this.metalnessMaterialUpdate(params)\n      })\n\n    const params2 = {\n      check: false,\n      roughness: 0, // 玻璃表面光滑\n      envMapIntensity: 1, //环境贴图对Mesh表面影响程度\n      transmission: 1, //透射度(透光率)\n      ior: 2.1 //折射率\n    }\n    group\n      .add(params2, 'check')\n      .name('玻璃材质(玻璃)')\n      .onChange(e => {\n        params2.roughness = e ? 0 : 0.5\n        params2.envMapIntensity = e ? 1 : 0\n        params2.transmission = e ? 1 : 0\n        params2.ior = e ? 2.1 : 1.5\n        this.glassMaterialUpdate(params2)\n      })\n    group\n      .add(params2, 'roughness', 0, 1)\n      .name('玻璃光滑度')\n      .onChange(() => {\n        this.glassMaterialUpdate(params2)\n      })\n    group\n      .add(params2, 'envMapIntensity', 0, 1)\n      .name('玻璃环境贴图影响权重')\n      .onChange(() => {\n        this.glassMaterialUpdate(params2)\n      })\n    group\n      .add(params2, 'transmission', 0, 1)\n      .name('玻璃透射度(透光率)')\n      .onChange(() => {\n        this.glassMaterialUpdate(params2)\n      })\n    group\n      .add(params2, 'ior', 0, 10)\n      .name('玻璃折射率')\n      .onChange(() => {\n        this.glassMaterialUpdate(params2)\n      })\n\n    const params3 = {\n      blurring: false,\n      wireframe: false,\n      color: 0x00e0ff,\n      opacity: 0.5,\n      all: false\n    }\n    group\n      .add(params3, 'blurring')\n      .name('虚化材质(虚化)')\n      .onChange(() => {\n        this.blurringMaterialUpdate(params3)\n      })\n    group\n      .add(params3, 'all')\n      .name('全部虚化')\n      .onChange(() => {\n        this.blurringMaterialUpdate(params3)\n      })\n    group\n      .addColor(params3, 'color')\n      .name('虚化颜色')\n      .onChange(() => {\n        this.blurringMaterialUpdate(params3)\n      })\n    group\n      .add(params3, 'opacity', 0, 1)\n      .name('虚化透明度')\n      .onChange(() => {\n        this.blurringMaterialUpdate(params3)\n      })\n    group\n      .add(params3, 'wireframe', 0, 1)\n      .name('虚化线框')\n      .onChange(() => {\n        this.blurringMaterialUpdate(params3)\n      })\n    group.open()\n  }\n\n  // 重置\n  addResetGui() {\n    const gui = this.gui\n    const option = {\n      viewReset: () => this.cameraViewReset(),\n      rotation: 0,\n      scale: 1,\n      timeScale: 1,\n      center: () => this.modelCenter()\n    }\n    const group = gui.addFolder('重置')\n    group.add(option, 'viewReset').name('视角重置')\n    group.add(this.grid, 'visible').name('网格显示')\n    group.add(this.controls, 'autoRotate').name('自动旋转')\n    group.add(this.guiOpts, 'insetAnimate').name('入场动画')\n    group\n      .add(option, 'rotation', 0, 360)\n      .name('旋转')\n      .onChange(e => {\n        this.modelGroup?.children.forEach(model => {\n          const r = (Math.PI / 180) * e\n          model.rotation.set(0, r, 0)\n        })\n      })\n    group\n      .add(option, 'scale', 0.001, 100)\n      .step(0.01)\n      .name('缩放')\n      .onChange(e => {\n        this.modelGroup?.children.forEach(model => {\n          model.scale.set(e, e, e)\n        })\n      })\n    group\n      .add(option, 'timeScale', 0.1, 10)\n      .name('动画速度')\n      .onChange(e => {\n        this.modelGroup?.children.forEach((model: any) => {\n          if (model.__action__) {\n            Object.keys(model.__action__).forEach(key => {\n              model.__action__[key].timeScale = e\n            })\n          }\n        })\n      })\n    group.add(option, 'center').name('居中')\n    group.open()\n  }\n\n  // 环境\n  addEvnGui() {\n    const gui = this.gui\n    const option = {\n      bgCode: '101',\n      hdr: 'skidpan_2k',\n      color1: 0xffffff,\n      color2: 0xffffff\n    }\n\n    const group = gui.addFolder('环境')\n    const ambientLight = this.scene.getObjectByProperty('isAmbientLight', true)\n    if (ambientLight) {\n      group.add(ambientLight, 'intensity', 0, 10).name('环境光强度')\n    }\n    const directionalLights = this.scene.getObjectsByProperty('isDirectionalLight', true) as any[]\n    if (directionalLights.length) {\n      const [dirLight1, dirLight2] = directionalLights\n\n      const dirLightHelper1 = new THREE.DirectionalLightHelper(dirLight1, 1, dirLight1.color)\n      dirLightHelper1.visible = false\n      this.addObject(dirLightHelper1)\n      option.color1 = dirLight1.color.getHex()\n      group\n        .addColor(option, 'color1')\n        .name('平行光颜色')\n        .onChange(e => {\n          dirLight1.color.set(e)\n          dirLightHelper1.traverse((el: any) => {\n            if (el.color) {\n              el.color.set(e)\n            } else if (el.isLine) {\n              el.material.color.set(e)\n            }\n          })\n        })\n      group.add(dirLight1, 'intensity', 0, 10).name('平行光强度')\n      group.add(dirLight1.position, 'y', 500, 100000).name('平行光高度')\n      group.add(dirLightHelper1, 'visible').name('平行光辅助')\n\n      if (dirLight2) {\n        group.add(dirLight2, 'visible').name('平行光2')\n\n        option.color2 = dirLight2.color.getHex()\n        const dirLightHelper2 = new THREE.DirectionalLightHelper(dirLight2, 1, dirLight2.color)\n        dirLightHelper2.visible = false\n        this.addObject(dirLightHelper2)\n        option.color1 = dirLight2.color.getHex()\n        group\n          .addColor(option, 'color1')\n          .name('平行光颜色')\n          .onChange(e => {\n            dirLight2.color.set(e)\n            dirLightHelper2.traverse((el: any) => {\n              if (el.color) {\n                el.color.set(e)\n              } else if (el.isLine) {\n                el.material.color.set(e)\n              }\n            })\n          })\n        group.add(dirLight2, 'intensity', 0, 10).name('平行光2强度')\n        group.add(dirLight2.position, 'y', 500, 100000).name('平行光高度2')\n        group.add(dirLightHelper2, 'visible').name('平行光2辅助')\n      }\n    }\n\n    if (this.groundMesh) {\n      group.add(this.groundMesh, 'visible').name('地面')\n      group.add(this.renderer.shadowMap, 'enabled').name('开启阴影')\n    }\n\n    group\n      .add(option, 'bgCode', skys)\n      .name('背景')\n      .onChange(e => {\n        backgroundLoad(this, e, e === '601' ? 'png' : void 0)\n      })\n    group\n      .add(\n        option,\n        'hdr',\n        ['skidpan_2k'].concat(new Array(20).fill(0).map((_, index) => String(index + 1)))\n      )\n      .name('Hdr环境')\n      .onChange(e => {\n        this.loadEnvTexture(`/oss/textures/hdr/${e}.hdr`)\n      })\n\n    group.open()\n  }\n\n  // 复制文本框\n  async copyTextarea(msg = '复制成功！') {\n    // @ts-ignore\n    const textareaEl = this.container.parentNode.querySelector(\n      'textarea.gui-text'\n    ) as HTMLInputElement\n\n    await nextTick()\n    textareaEl.select()\n    document.execCommand('copy')\n    Message.success(msg)\n  }\n\n  // 上传模型\n  uploadedModel(obj, filename) {\n    if (!obj) return\n    obj.__upload_model__ = true\n\n    if (this.modelGroup) {\n      const find = this.modelGroup.children.find(it => it.name === filename) as any\n      this.disposeObj(find)\n      this.modelGroup.remove(find)\n    }\n\n    const s = this.guiOpts.scale\n    const group = new THREE.Group()\n    obj.traverse(el => {\n      if (el.isSpotLight || el.isPointLight) {\n        if (el.isSpotLight) {\n          group.add(el.target)\n        }\n      }\n      materialReplace(group, this.guiOpts, el)\n    })\n\n    if (group.children.length) {\n      this.addHelper(group)\n    }\n\n    obj.name = filename\n    let model = Utils.modelDeepClone(obj)\n    const p = model.position\n    guiOpts.dotText = `模型初始坐标: {\n      \"x\": ${p.x},\n      \"y\": ${p.y},\n      \"z\": ${p.z}\n    }`\n\n    const scale = model.scale\n    model.scale.set(s * scale.x, s * scale.y, s * scale.z)\n    model.animations = obj.animations\n    this.addModel(model)\n\n    // 相机动画\n    if (this.guiOpts.insetAnimate) {\n      this.cameraViewReset()\n    }\n\n    // 动画\n    if (obj.animations.length) {\n      let mixer = new THREE.AnimationMixer(model)\n      const action = obj.animations.reduce((ob, cur: any) => {\n        const key = cur.name || ''\n        ob[key] = mixer.clipAction(cur)\n        ob[key].play()\n        ob[key].timeScale = 1\n        return ob\n      }, {})\n\n      model.__action__ = action\n      model.__mixer__ = mixer\n    }\n    console.log(this)\n  }\n\n  // 视角重置\n  cameraViewReset() {\n    Utils.cameraInSceneAnimate(\n      this.camera,\n      {\n        x: 0,\n        y: 100,\n        z: 300\n      },\n      this.controls?.target\n    )\n  }\n\n  // 是否上传过模型\n  judgeUploadModel() {\n    const list = this.modelGroup?.children || []\n    if (list.length == 0) {\n      Message.warning('未上传模型！')\n      return false\n    }\n    return true\n  }\n\n  // 导出\n  export(isGlb?: boolean) {\n    const list = this.modelGroup?.children || []\n    if (!this.judgeUploadModel()) return\n    const isOne = list.length == 1\n    const model: any = isOne ? list[0] : this.modelGroup\n    const animations = getAnimations(model)\n    exportGlb(model, animations, isOne ? model.name : '综合场景', isGlb)\n  }\n\n  // 材质反光\n  glistenToggle() {\n    let roughness = this.guiOpts.glisten ? 0 : 0.9\n    console.log(roughness)\n    this.modelGroup?.traverse((el: any) => {\n      if (el.isMesh) {\n        if (el.material instanceof Array) {\n          el.material.forEach(mat => {\n            mat.roughness = roughness\n          })\n        } else {\n          el.material.roughness = roughness\n        }\n      }\n    })\n  }\n\n  // 地面反光\n  groundGlisten() {\n    let roughness = this.guiOpts.groundReflection ? 0 : 0.9\n    this.modelGroup?.traverse((el: any) => {\n      if (el.isMesh && DefaultConfig.receiveShadowName.find(it => el.name.indexOf(it) > -1)) {\n        if (el.material instanceof Array) {\n          el.material.forEach(mat => {\n            mat.roughness = roughness\n          })\n        } else {\n          el.material.roughness = roughness\n        }\n      }\n    })\n  }\n\n  // 双面材质\n  sideMaterialToggle() {\n    const side = this.guiOpts.side ? THREE.DoubleSide : THREE.FrontSide\n    console.log(side)\n    if (!this.modelGroup) return\n    this.modelGroup.traverse((el: any) => {\n      if (el.isMesh) {\n        if (el.material instanceof Array) {\n          el.material.forEach(mat => {\n            mat.side = side\n          })\n        } else {\n          el.material.side = side\n        }\n      }\n    })\n  }\n\n  // 透明\n  opacitySkin() {\n    const { opacitySkin, opacity } = this.guiOpts\n\n    this.modelGroup?.traverse((el: any) => {\n      if (DefaultConfig.transparentName.find(it => el.name.indexOf(it) > -1)) {\n        changeTransparent(el, opacitySkin ? opacity : 1)\n      }\n    })\n  }\n\n  // 聚光灯\n  spotLight(opts) {\n    this.modelGroup?.traverse((el: any) => {\n      if (el.isSpotLight) {\n        el.intensity = opts.intensity\n        el.castShadow = opts.castShadow\n        el.distance = opts.distance\n        el.penumbra = opts.penumbra\n        el.decay = opts.decay\n        el.color.set(opts.color)\n      }\n    })\n    this.helperGroup?.traverse((el: any) => {\n      if (el.type === 'SpotLightHelper') {\n        el.children[0].material.color.set(opts.color)\n      }\n    })\n  }\n\n  // 金属材质更新\n  metalnessMaterialUpdate = ({ metalness, roughness }) => {\n    this.modelGroup?.children.forEach((model: any) => {\n      model.traverse(el => {\n        // 检索指定名称或者 无子级\n        if (/[金属]/.test(el.name) || model.children.length == 0) {\n          if (Array.isArray(el.material)) {\n            el.material = el.material.map(mat => {\n              return setMetalnessMaterial(mat, metalness, roughness)\n            })\n          } else {\n            const mat = el.material\n            el.material = setMetalnessMaterial(mat, metalness, roughness)\n          }\n        }\n      })\n    })\n  }\n\n  // 玻璃材质更新\n  glassMaterialUpdate = opts => {\n    this.modelGroup?.children.forEach((model: any) => {\n      model.traverse(el => {\n        // 检索指定名称或者 无子级\n        if (/[玻璃]/.test(el.name) || model.children.length == 0) {\n          if (Array.isArray(el.material)) {\n            el.material = el.material.map(mat => {\n              return setGlassMaterial(mat, opts)\n            })\n          } else {\n            const mat = el.material\n            el.material = setGlassMaterial(mat, opts)\n          }\n        }\n      })\n    })\n  }\n\n  // 线框材质更新\n  blurringMaterialUpdate = opts => {\n    this.modelGroup?.children.forEach((model: any) => {\n      model.traverse(el => {\n        // 检索指定名称或者 无子级\n        if (opts.all || model.children.length == 0 || /[线框]/.test(el.name)) {\n          if (el.isMesh) {\n            if (opts.blurring || opts.all) {\n              if (!el.__material__) {\n                el.__material__ = el.material\n              }\n              el.material = new THREE.MeshBasicMaterial({\n                color: opts.color,\n                wireframe: opts.wireframe,\n                transparent: true,\n                opacity: opts.opacity\n              })\n            } else {\n              if (el.__material__) {\n                el.material = el.__material__\n              }\n            }\n          }\n        } else {\n          if (el.isMesh && el.__material__) {\n            el.material = el.__material__\n          }\n        }\n      })\n    })\n  }\n\n  // 模型居中\n  modelCenter() {\n    this.helperGroup?.children.forEach((el: any) => {\n      if (el.type === 'BoxHelper') {\n        this.disposeObj(el)\n        this.helperGroup?.remove(el)\n      }\n    })\n\n    const list: any[] = []\n    this.modelGroup?.children.forEach((el: any) => {\n      const { helper, center } = centerBoxHelper(el, 0xff0000) as any\n      this.addHelper(helper)\n      center.name = el.name\n      const { x, y, z } = el.position\n      // 将模型进行偏移居中\n      el.position.set(x - center.x, y, z - center.z)\n      const group = new THREE.Group()\n      let model = el.clone()\n      group.add(model)\n      group.animations = model.animations\n      list.push(el)\n      this.addModel(model)\n    })\n    list.forEach(el => {\n      this.disposeObj(el)\n      this.modelGroup?.remove(el)\n    })\n    console.log(this)\n  }\n\n  addModelGroup() {\n    const group = new THREE.Group()\n    group.name = '模型组'\n    this.addObject(group)\n    this.modelGroup = group\n\n    const help = new THREE.Group()\n    help.name = '辅助组'\n    this.helperGroup = help\n    this.addObject(help)\n  }\n\n  clearModelGroup() {\n    if (!this.modelGroup) {\n      this.addModelGroup()\n      return\n    }\n    this.disposeObj(this.modelGroup)\n    this.disposeObj(this.helperGroup)\n    this.addModelGroup()\n  }\n\n  addModel(obj) {\n    if (this.modelGroup) {\n      this.modelGroup.add(obj)\n    }\n  }\n\n  addHelper(obj) {\n    if (this.helperGroup) {\n      this.helperGroup.add(obj)\n    }\n  }\n\n  // 添加水面\n  addWater(waterName) {\n    const obj = this.scene.getObjectByName(waterName)\n    if (!obj) return\n    console.log(obj)\n    const water = createWater(obj)\n    // water.rotation.x = -Math.PI / 2\n    // water.position.y += 50\n    // 获取世界坐标\n    const v = obj.getWorldPosition(new THREE.Vector3())\n    water.position.copy(v)\n    obj.position.y -= 0.2\n    if (this.water) {\n      this.scene.remove(this.water)\n    }\n    this.water = water\n    this.addObject(this.water)\n  }\n\n  // 设置\n\n  // 移动\n  onPointerMove(e: PointerEvent) {\n    this.checkIntersectObjects(e)\n  }\n\n  // 弹起\n  onPointerUp(e: PointerEvent) {\n    super.onPointerUp(e)\n\n    const onUpPosition = new THREE.Vector2(e.clientX, e.clientY)\n\n    // 判断指针按下与弹起的距离是否为0 则解除对象\n    if (pointer.distanceTo(onUpPosition) == 0) this.transformControls?.detach()\n\n    let s = e.timeStamp - this.pointer.tsp\n    // 判断是否未点击\n    const isClick = s < 200\n    if (e.button == 2) {\n      // console.log('你点了右键')\n    } else if (e.button == 0) {\n      // console.log('你点了左键')\n      isClick && this.checkIntersectObjects(e)\n    } else if (e.button == 1) {\n      // console.log('你点了滚轮')\n    }\n  }\n\n  // 检查交叉几何体\n  checkIntersectObjects(e: PointerEvent) {\n    const dom = this.container\n    const scale = this.options.scale\n    raycasterUpdate(e, dom, scale)\n\n    let isClick = e.type == 'pointerdown' || e.type == 'pointerup'\n\n    // 计算对象列表\n    const objects = isClick ? this.modelGroup?.children || [] : [this.setPiece]\n    // 设置新的原点和方向向量更新射线, 用照相机的原点和点击的点构成一条直线\n    raycaster.setFromCamera(pointer, this.camera)\n\n    let intersects = raycaster.intersectObjects(objects, isClick /* 是否检查所有后代 */)\n    if (intersects.length > 0) {\n      const intersect = intersects[0]\n      let object = intersect.object\n      if (isClick) {\n        console.log(intersect)\n        this.setPiece.position.copy(intersect.point)\n\n        const dotText = [this.setPiece].map(el => {\n          let p = <any>el.position\n          return `{ \"x\": ${p.x.toFixed(2) * 1}, \"y\": ${p.y.toFixed(2) * 1}, \"z\": ${\n            p.z.toFixed(2) * 1\n          } }`\n        })\n        guiOpts.dotText = dotText.join(',')\n        this.copyTextarea('中心点复制成功！')\n      } else {\n        if (object !== this.transformControls?.object) {\n          // 转换控制器 设置当前对象\n          this.transformControls?.attach(object)\n        }\n      }\n    }\n  }\n\n  modelAnimate() {\n    if (!this.modelGroup) return\n\n    let delta = this.clock.getDelta()\n    for (let i = 0; i < this.modelGroup.children.length; i++) {\n      const model = this.modelGroup.children[i] as any\n      if (model.__mixer__) {\n        model.__mixer__.update(delta)\n      }\n    }\n\n    // 水面波动\n    if (this.water) {\n      this.water.material.uniforms['time'].value += 1 / 60\n    }\n  }\n}\n","const base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nconst devEnv = import.meta.env.VITE_MODE !== 'production'\n\nexport const getPageOpts = () => ({\n  devEnv,\n  baseUrl: base,\n  bgColor: '',\n  skyCode: '221',\n  // env: '/oss/textures/hdr/6.hdr'\n  env: '/oss/textures/exr/piz_compressed.exr'\n})\n\nexport const getUploadOpts = () => ({\n  accept: ['fbx', 'glb', 'gltf', 'ldr', 'mpd'],\n  fileName: ''\n})\n","<template>\n  <div class=\"three-page\" :class=\"$style.page\">\n    <textarea\n      class=\"gui-text\"\n      :class=\"$style['gui-text']\"\n      rows=\"4\"\n      cols=\"30\"\n      v-model=\"guiOpts.dotText\"\n    ></textarea>\n\n    <input :class=\"$style.upload\" type=\"file\" @change=\"onFileChange\" />\n\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { guiOpts, ConvertThreeScene } from './methods'\n\nimport { getPageOpts, getUploadOpts } from './data'\n\nimport { useResize } from '@/hooks/scene-resize'\nimport { Hooks } from 'three-scene/build/three-scene.module'\n\nconst pageOpts = reactive(getPageOpts())\nconst { uploadModel } = Hooks.useUpload({\n  baseUrl: pageOpts.baseUrl\n})\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof ConvertThreeScene>[0] = {\n  baseUrl: pageOpts.baseUrl,\n  env: pageOpts.env,\n  grid: {\n    visible: true\n  },\n  axes: {\n    visible: true\n  }\n}\nlet scene: InstanceType<typeof ConvertThreeScene>\n\nconst uploadOpts = reactive(getUploadOpts())\nconst onFileChange = e => {\n  const files = e.target.files\n  const file = files[0]\n  let filename = file.name\n  const type = filename.split('.').pop().toLowerCase()\n  if (!uploadOpts.accept.includes(type)) {\n    return ElMessage.error({\n      message: `文件格式不正确,转换格式支持 ${uploadOpts.accept.join('、')}！`,\n      grouping: true\n    })\n  }\n\n  filename = file.name.substring(0, file.name.lastIndexOf('.'))\n  uploadOpts.fileName = filename\n  uploadModel(\n    files,\n    model => {\n      console.log(type, ' 模型', model)\n      scene.uploadedModel(model, filename)\n    },\n    ({ progress, size, filename }) => {\n      console.log('Loading', filename, size, progress)\n    }\n  )\n  e.target.value = ''\n}\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new ConvertThreeScene(options)\n  scene.run()\n\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\" module>\n@import './style.scss';\n</style>\n"],"names":["DefaultConfig","receiveShadowName","animatehName","transparentName","Utils","ThreeScene.Utils","Hooks","ThreeScene.Hooks","materialReplace","changeTransparent","exportGlb","getAnimations","setMetalnessMaterial","setGlassMaterial","centerBoxHelper","useMaterial","backgroundLoad","skys","useBackground","raycaster","pointer","update","raycasterUpdate","useRaycaster","_ElMessage","opts","ElMessage","Message","Proxy","warning","msg","message","type","grouping","success","get","target","property","_receiver","guiOpts","reactive","dotText","ConvertThreeScene","ThreeScene.Scene","constructor","options","super","__publicField","this","scale","side","insetAnimate","transformMaterial","groundReflection","glisten","opacitySkin","opacity","metalness","roughness","_a","modelGroup","children","forEach","model","traverse","el","test","name","length","Array","isArray","material","map","mat","all","isMesh","blurring","__material__","THREE.MeshBasicMaterial","color","wireframe","transparent","addControls","clock","THREE.Clock","gui","GUI","addGround","addGui","addModelGroup","setPiece","sphere","THREE.SphereGeometry","Math","random","mesh","THREE.Mesh","position","set","createPointSphere","addObject","bindEvent","camera","controls","TransformControls","renderer","domElement","addEventListener","e","enabled","value","transformControls","getHelper","onKeydown","onKeyup","console","log","window","onBeforeUnmount","removeEventListener","control","key","setMode","setSize","size","max","showX","showY","showZ","reset","addMainFunction","addMaterial","addLight","addNameGroupGui","addResetGui","addEvnGui","className","container","parentNode","appendChild","geo","THREE.PlaneGeometry","THREE.MeshStandardMaterial","rotation","x","PI","receiveShadow","visible","groundMesh","fileEl","querySelector","option","importFile","click","exportGltf","export","exportPoints","p","toFixed","y","z","join","copyTextarea","vs","clearScene","clearModelGroup","group","addFolder","add","open","onChange","glistenToggle","groundGlisten","sideMaterialToggle","params","intensity","castShadow","distance","penumbra","decay","spotLight","addColor","check","water","addWater","metalnessMaterialUpdate","params2","envMapIntensity","transmission","ior","glassMaterialUpdate","params3","blurringMaterialUpdate","viewReset","cameraViewReset","timeScale","center","modelCenter","grid","r","step","__action__","Object","keys","bgCode","hdr","color1","color2","ambientLight","scene","getObjectByProperty","directionalLights","getObjectsByProperty","dirLight1","dirLight2","dirLightHelper1","THREE.DirectionalLightHelper","getHex","isLine","dirLightHelper2","shadowMap","concat","fill","_","index","String","loadEnvTexture","textareaEl","nextTick","select","document","execCommand","uploadedModel","obj","filename","__upload_model__","find","it","disposeObj","remove","s","THREE.Group","isSpotLight","isPointLight","addHelper","modelDeepClone","animations","addModel","mixer","THREE.AnimationMixer","action","reduce","ob","cur","clipAction","play","__mixer__","cameraInSceneAnimate","judgeUploadModel","isGlb","list","isOne","indexOf","THREE.DoubleSide","THREE.FrontSide","_b","helperGroup","helper","clone","push","help","waterName","getObjectByName","waterGeometry","geometry","Water","textureWidth","textureHeight","waterNormals","THREE.TextureLoader","load","texture","wrapS","wrapT","THREE.RepeatWrapping","sunDirection","THREE.Vector3","sunColor","waterColor","distortionScale","uniforms","createWater","v","getWorldPosition","copy","onPointerMove","checkIntersectObjects","onPointerUp","onUpPosition","THREE.Vector2","clientX","clientY","distanceTo","detach","isClick","timeStamp","tsp","button","dom","objects","setFromCamera","intersects","intersectObjects","intersect","object","point","_c","attach","modelAnimate","delta","getDelta","i","pageOpts","devEnv","baseUrl","bgColor","skyCode","env","uploadModel","useUpload","containerRef","ref","axes","uploadOpts","accept","fileName","onFileChange","files","file","split","pop","toLowerCase","includes","error","substring","lastIndexOf","progress","filename2","onMounted","run","useResize","resize"],"mappings":"oiBAAA,MAAeA,EAAA,CAEbC,kBAAmB,CACjB,KACA,KACA,KACA,KACA,KACA,OACA,QACA,KACA,SACA,UAIFC,aAAc,CACZ,KACA,MACA,MACA,SACA,SACA,SACA,SACA,MACA,MACA,MACA,MAIFC,gBAAiB,CAAC,KAAM,SCzBpBC,EAAQC,EACRC,EAAQC,GAGRC,gBACJA,EAAAC,kBACAA,EAAAC,UACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,iBACAA,EAAAC,gBACAA,GACER,EAAMS,eACJC,eAAEA,EAAAC,KAAgBA,GAASX,EAAMY,iBACjCC,UAAEA,EAAWC,QAAAA,EAASC,OAAQC,GAAoBhB,EAAMiB,eAExDC,GAAqBC,GAClBC,EAAUD,GAGbE,GAAU,IAAIC,MAClB,CACEC,QAAgBC,GACPN,GAAW,CAChBO,QAASD,EACTE,KAAM,UACNC,UAAU,IAGdC,QAAgBJ,GACPN,GAAW,CAChBO,QAASD,EACTE,KAAM,UACNC,UAAU,KAIhB,CACEE,IAAA,CAAIC,EAAQC,EAAUC,IACbF,EAAOC,KA2BPE,GAAUC,EAAS,CAC9BC,QAAS,KAaE,MAAAC,WAA0BC,EAmCrC,WAAAC,CAAYC,GACVC,MAAMD,GAnCRE,EAAAC,KAAA,SACAD,EAAAC,KAAA,OAEAD,EAAAC,KAAA,cACAD,EAAAC,KAAA,eAEAD,EAAAC,KAAA,cAEAD,EAAAC,KAAA,qBAEUD,EAAAC,KAAA,UAAA,CAERC,MAAO,EAEPC,MAAM,EAENC,cAAc,EAEdC,mBAAmB,EAEnBC,kBAAkB,EAElBC,SAAS,EAETC,aAAa,EACbC,QAAS,KAIXT,EAAAC,KAAA,YAGAD,EAAAC,KAAA,SAmtBAD,EAAAC,KAAA,2BAA0B,EAAGS,YAAWC,sBACtC,OAAAC,EAAAX,KAAKY,aAALD,EAAiBE,SAASC,SAASC,IAC3BA,EAAAC,UAAeC,IAEf,GAAA,OAAOC,KAAKD,EAAGE,OAAkC,GAAzBJ,EAAMF,SAASO,OACzC,GAAIC,MAAMC,QAAQL,EAAGM,UACnBN,EAAGM,SAAWN,EAAGM,SAASC,KAAWC,GAC5B7D,EAAqB6D,EAAKhB,EAAWC,SAEzC,CACL,MAAMe,EAAMR,EAAGM,SACfN,EAAGM,SAAW3D,EAAqB6D,EAAKhB,EAAWC,EACrD,CACF,GACD,GAAA,IAKLX,EAAAC,KAAA,uBAA8BvB,UAC5B,OAAAkC,EAAAX,KAAKY,aAALD,EAAiBE,SAASC,SAASC,IAC3BA,EAAAC,UAAeC,IAEf,GAAA,OAAOC,KAAKD,EAAGE,OAAkC,GAAzBJ,EAAMF,SAASO,OACzC,GAAIC,MAAMC,QAAQL,EAAGM,UACnBN,EAAGM,SAAWN,EAAGM,SAASC,KAAWC,GAC5B5D,EAAiB4D,EAAKhD,SAE1B,CACL,MAAMgD,EAAMR,EAAGM,SACZN,EAAAM,SAAW1D,EAAiB4D,EAAKhD,EACtC,CACF,GACD,GAAA,IAKLsB,EAAAC,KAAA,0BAAiCvB,UAC/B,OAAAkC,EAAAX,KAAKY,aAALD,EAAiBE,SAASC,SAASC,IAC3BA,EAAAC,UAAeC,IAEfxC,EAAKiD,KAAgC,GAAzBX,EAAMF,SAASO,QAAe,OAAOF,KAAKD,EAAGE,MACvDF,EAAGU,SACDlD,EAAKmD,UAAYnD,EAAKiD,KACnBT,EAAGY,eACNZ,EAAGY,aAAeZ,EAAGM,UAEpBN,EAAAM,SAAW,IAAIO,EAAwB,CACxCC,MAAOtD,EAAKsD,MACZC,UAAWvD,EAAKuD,UAChBC,aAAa,EACbzB,QAAS/B,EAAK+B,WAGZS,EAAGY,eACLZ,EAAGM,SAAWN,EAAGY,eAKnBZ,EAAGU,QAAUV,EAAGY,eAClBZ,EAAGM,SAAWN,EAAGY,aAErB,GACD,GAAA,IA/wBH7B,KAAKkC,cACAlC,KAAAmC,MAAQ,IAAIC,EAEZpC,KAAAqC,IAAM,IAAIC,EAEftC,KAAKuC,YACLvC,KAAKwC,SACLxC,KAAKyC,gBAELzC,KAAK0C,SAxDiB,MACxB,MAAMC,EAAS,IAAIC,EAAqB,KAAM,GAAI,IAC5CrB,EAAW,IAAIO,EAAwB,CAAEC,MAAuB,SAAhBc,KAAKC,SAAqBd,WAAW,IACrFe,EAAO,IAAIC,EAAWL,EAAQpB,GAG7B,OAFPwB,EAAK5B,KAAO,KACZ4B,EAAKE,SAASC,IAAI,EAAG,IAAK,GACnBH,CAAA,EAkDWI,GACXnD,KAAAoD,UAAUpD,KAAK0C,UAEpB1C,KAAKqD,WACP,CAOA,WAAAnB,GACE,MAAMoB,EAAStD,KAAKsD,OACdC,EAAW,IAAIC,EAAkBF,EAAQtD,KAAKyD,SAASC,YAGpDH,EAAAI,iBAAiB,oBAAyBC,IACjD5D,KAAKuD,WAAavD,KAAKuD,SAASM,SAAWD,EAAEE,MAAA,IAG/C9D,KAAK+D,kBAAoBR,EACpBvD,KAAAoD,UAAUG,EAASS,aAExB,MAAMC,EAAYL,GAAK5D,KAAKiE,UAAUL,GAChCM,EAAeN,IACnBO,QAAQC,IAAIR,EAAC,EAGRS,OAAAV,iBAAiB,UAAWM,GAAW,GACvCI,OAAAV,iBAAiB,QAASO,GAAS,GAE1CI,GAAgB,KACPD,OAAAE,oBAAoB,UAAWN,GAC/BI,OAAAE,oBAAoB,QAASL,EAAO,GAE/C,CAEA,SAAAD,CAAUL,GACR,MAAMY,EAAUxE,KAAK+D,kBACrB,GAAKS,EACL,OAAQZ,EAAEa,KACR,IAAK,IACHD,EAAQE,QAAQ,aAChB,MAEF,IAAK,IACHF,EAAQE,QAAQ,UAChB,MAEF,IAAK,IACHF,EAAQE,QAAQ,SAChB,MAEF,IAAK,IACL,IAAK,IACKF,EAAAG,QAAQH,EAAQI,KAAO,IAC/B,MAEF,IAAK,IACL,IAAK,IACHJ,EAAQG,QAAQ9B,KAAKgC,IAAIL,EAAQI,KAAO,GAAK,KAC7C,MAEF,IAAK,IACKJ,EAAAM,OAASN,EAAQM,MACzB,MAEF,IAAK,IACKN,EAAAO,OAASP,EAAQO,MACzB,MAEF,IAAK,IACKP,EAAAQ,OAASR,EAAQQ,MACzB,MAEF,IAAK,IACKR,EAAAX,SAAWW,EAAQX,QAC3B,MAEF,IAAK,SACHW,EAAQS,QAGd,CAEA,MAAAzC,SACE,MAAMH,EAAMrC,KAAKqC,IAGjBrC,KAAKkF,kBAGLlF,KAAKmF,cAGLnF,KAAKoF,WAGLpF,KAAKqF,kBAGLrF,KAAKsF,cAGLtF,KAAKuF,YAELlD,EAAIqB,WAAW8B,WAAa,YAC5B,OAAA7E,EAAAX,KAAKyF,UAAUC,aAAY/E,EAAAgF,YAAYtD,EAAIqB,WAC7C,CAEA,SAAAnB,GACE,MAAMqD,EAAM,IAAIC,EAAoB,IAAM,KACpCpE,EAAM,IAAIqE,EAA2B,CACzC/D,MAAO,WAGHgB,EAAO,IAAIC,EAAW4C,EAAKnE,GACjCsB,EAAK5B,KAAO,SACP4B,EAAAgD,SAASC,EAAc,IAAVnD,KAAKoD,GAEvBlD,EAAKmD,eAAgB,EACrBnD,EAAKoD,SAAU,EACfnG,KAAKoG,WAAarD,EAClB/C,KAAKoD,UAAUL,EACjB,CAGA,eAAAmC,GACE,MAAM7C,EAAMrC,KAAKqC,IACjB,IAAKrC,KAAKyF,UAAW,OAErB,MAAMY,EAASrG,KAAKyF,UAAUC,WAAWY,cAAc,sBACjDC,EAAS,CACbC,WAAY,KACVH,EAAOI,OAAM,EAEfC,WAAY,KACV1G,KAAK2G,QAAO,EAAK,EAEnBjJ,UAAW,KACTsC,KAAK2G,QAAO,EAEdC,aAAc,KACZ,MAAMnH,EAAU,CAACO,KAAK0C,UAAUlB,KAAUP,IACxC,IAAI4F,EAAS5F,EAAGgC,SACT,MAAA,UAA2B,EAAjB4D,EAAEb,EAAEc,QAAQ,YAAiC,EAAjBD,EAAEE,EAAED,QAAQ,YACtC,EAAjBD,EAAEG,EAAEF,QAAQ,MACd,IAEMvH,GAAAE,QAAUA,EAAQwH,KAAK,KAC/BjH,KAAKkH,aAAa,UAAS,EAE7B9H,OAAQ,KACN,IAAKY,KAAKuD,SAAU,OACd,MAAA4D,EAAKnH,KAAKuD,SAASnE,OACjBG,GAAAE,QAAU,QAAQ0H,EAAGnB,SAASmB,EAAGJ,SAASI,EAAGH,MACrDhH,KAAKkH,aAAa,WAAU,EAE9B5D,OAAQ,KACA,MAAA6D,EAAKnH,KAAKsD,OAAOL,SACf1D,GAAAE,QAAU,QAAQ0H,EAAGnB,SAASmB,EAAGJ,SAASI,EAAGH,MACrDhH,KAAKkH,aAAa,YAAW,EAE/BE,WAAY,KACVpH,KAAKqH,iBAAgB,GAGnBC,EAAQjF,EAAIkF,UAAU,OAC5BD,EAAME,IAAIjB,EAAQ,cAAcpF,KAAK,QACrCmG,EAAME,IAAIjB,EAAQ,cAAcpF,KAAK,YACrCmG,EAAME,IAAIjB,EAAQ,aAAapF,KAAK,WACpCmG,EAAME,IAAIjB,EAAQ,gBAAgBpF,KAAK,QACvCmG,EAAME,IAAIjB,EAAQ,UAAUpF,KAAK,OACjCmG,EAAME,IAAIjB,EAAQ,UAAUpF,KAAK,QACjCmG,EAAME,IAAIjB,EAAQ,cAAcpF,KAAK,QACrCmG,EAAMG,MACR,CAGA,WAAAtC,GACE,MAAM9C,EAAMrC,KAAKqC,IACjB,IAAKrC,KAAKyF,UAAW,OACf,MAAA6B,EAAQjF,EAAIkF,UAAU,MAE5BD,EAAME,IAAIxH,KAAKT,QAAS,qBAAqB4B,KAAK,UAClDmG,EACGE,IAAIxH,KAAKT,QAAS,WAClB4B,KAAK,QACLuG,UAAS,IAAM1H,KAAK2H,kBACvBL,EACGE,IAAIxH,KAAKT,QAAS,oBAClB4B,KAAK,QACLuG,UAAS,IAAM1H,KAAK4H,kBACvBN,EACGE,IAAIxH,KAAKT,QAAS,QAClB4B,KAAK,QACLuG,UAAS,IAAM1H,KAAK6H,uBACvBP,EACGE,IAAIxH,KAAKT,QAAS,eAClB4B,KAAK,QACLuG,UAAS,IAAM1H,KAAKO,gBACvB+G,EACGE,IAAIxH,KAAKT,QAAS,UAAW,EAAG,GAChC4B,KAAK,OACLuG,UAAS,IAAM1H,KAAKO,gBAEvB+G,EAAMG,MACR,CAGA,QAAArC,GACE,MAAM/C,EAAMrC,KAAKqC,IACjB,IAAKrC,KAAKyF,UAAW,OACf,MAAA6B,EAAQjF,EAAIkF,UAAU,MACtBO,EAAS,CACbC,UAAW,EACXhG,MAAO,SACPiG,YAAY,EACZC,SAAU,GACVC,SAAU,EACVC,MAAO,GAGNb,EAAAE,IAAIM,EAAQ,YAAa,EAAG,IAC5B3G,KAAK,SACLuG,UAAS,KACR1H,KAAKoI,UAAUN,EAAM,IAGtBR,EAAAe,SAASP,EAAQ,SACjB3G,KAAK,SACLuG,UAAS,KACR1H,KAAKoI,UAAUN,EAAM,IAGtBR,EAAAE,IAAIM,EAAQ,cACZ3G,KAAK,SACLuG,UAAS,KACR1H,KAAKoI,UAAUN,EAAM,IAGtBR,EAAAE,IAAIM,EAAQ,WAAY,GAAK,KAC7B3G,KAAK,WACLuG,UAAS,KACR1H,KAAKoI,UAAUN,EAAM,IAGtBR,EAAAE,IAAIM,EAAQ,WAAY,EAAG,GAC3B3G,KAAK,WACLuG,UAAS,KACR1H,KAAKoI,UAAUN,EAAM,IAGtBR,EAAAE,IAAIM,EAAQ,QAAS,EAAG,GACxB3G,KAAK,WACLuG,UAAS,KACR1H,KAAKoI,UAAUN,EAAM,GAG3B,CAGA,eAAAzC,GACE,MAAMhD,EAAMrC,KAAKqC,IACXyF,EAAS,CACbQ,OAAO,EACP7H,UAAW,GACXC,UAAW,EACX6H,MAAO,KACLvI,KAAKwI,SAAS,KAAI,GAGhBlB,EAAQjF,EAAIkF,UAAU,UAC5BD,EAAME,IAAIM,EAAQ,SAAS3G,KAAK,UAG7BmG,EAAAE,IAAIM,EAAQ,SACZ3G,KAAK,YACLuG,UAAc9D,IACNkE,EAAArH,UAAYmD,EAAI,GAAM,EACtBkE,EAAApH,UAAYkD,EAAI,EAAI,GAC3B5D,KAAKyI,wBAAwBX,EAAM,IAGpCR,EAAAE,IAAIM,EAAQ,YAAa,EAAG,GAC5B3G,KAAK,QACLuG,UAAS,KACR1H,KAAKyI,wBAAwBX,EAAM,IAGpCR,EAAAE,IAAIM,EAAQ,YAAa,EAAG,GAC5B3G,KAAK,SACLuG,UAAS,KACR1H,KAAKyI,wBAAwBX,EAAM,IAGvC,MAAMY,EAAU,CACdJ,OAAO,EACP5H,UAAW,EACXiI,gBAAiB,EACjBC,aAAc,EACdC,IAAK,KAGJvB,EAAAE,IAAIkB,EAAS,SACbvH,KAAK,YACLuG,UAAc9D,IACL8E,EAAAhI,UAAYkD,EAAI,EAAI,GACpB8E,EAAAC,gBAAkB/E,EAAI,EAAI,EAC1B8E,EAAAE,aAAehF,EAAI,EAAI,EACvB8E,EAAAG,IAAMjF,EAAI,IAAM,IACxB5D,KAAK8I,oBAAoBJ,EAAO,IAGjCpB,EAAAE,IAAIkB,EAAS,YAAa,EAAG,GAC7BvH,KAAK,SACLuG,UAAS,KACR1H,KAAK8I,oBAAoBJ,EAAO,IAGjCpB,EAAAE,IAAIkB,EAAS,kBAAmB,EAAG,GACnCvH,KAAK,cACLuG,UAAS,KACR1H,KAAK8I,oBAAoBJ,EAAO,IAGjCpB,EAAAE,IAAIkB,EAAS,eAAgB,EAAG,GAChCvH,KAAK,cACLuG,UAAS,KACR1H,KAAK8I,oBAAoBJ,EAAO,IAGjCpB,EAAAE,IAAIkB,EAAS,MAAO,EAAG,IACvBvH,KAAK,SACLuG,UAAS,KACR1H,KAAK8I,oBAAoBJ,EAAO,IAGpC,MAAMK,EAAU,CACdnH,UAAU,EACVI,WAAW,EACXD,MAAO,MACPvB,QAAS,GACTkB,KAAK,GAGJ4F,EAAAE,IAAIuB,EAAS,YACb5H,KAAK,YACLuG,UAAS,KACR1H,KAAKgJ,uBAAuBD,EAAO,IAGpCzB,EAAAE,IAAIuB,EAAS,OACb5H,KAAK,QACLuG,UAAS,KACR1H,KAAKgJ,uBAAuBD,EAAO,IAGpCzB,EAAAe,SAASU,EAAS,SAClB5H,KAAK,QACLuG,UAAS,KACR1H,KAAKgJ,uBAAuBD,EAAO,IAGpCzB,EAAAE,IAAIuB,EAAS,UAAW,EAAG,GAC3B5H,KAAK,SACLuG,UAAS,KACR1H,KAAKgJ,uBAAuBD,EAAO,IAGpCzB,EAAAE,IAAIuB,EAAS,YAAa,EAAG,GAC7B5H,KAAK,QACLuG,UAAS,KACR1H,KAAKgJ,uBAAuBD,EAAO,IAEvCzB,EAAMG,MACR,CAGA,WAAAnC,GACE,MACMiB,EAAS,CACb0C,UAAW,IAAMjJ,KAAKkJ,kBACtBnD,SAAU,EACV9F,MAAO,EACPkJ,UAAW,EACXC,OAAQ,IAAMpJ,KAAKqJ,eAEf/B,EARMtH,KAAKqC,IAQCkF,UAAU,MAC5BD,EAAME,IAAIjB,EAAQ,aAAapF,KAAK,QACpCmG,EAAME,IAAIxH,KAAKsJ,KAAM,WAAWnI,KAAK,QACrCmG,EAAME,IAAIxH,KAAKuD,SAAU,cAAcpC,KAAK,QAC5CmG,EAAME,IAAIxH,KAAKT,QAAS,gBAAgB4B,KAAK,QAE1CmG,EAAAE,IAAIjB,EAAQ,WAAY,EAAG,KAC3BpF,KAAK,MACLuG,UAAc9D,UACR,OAAAjD,EAAAX,KAAAY,aAAAD,EAAYE,SAASC,SAAiBC,IACnC,MAAAwI,EAAK1G,KAAKoD,GAAK,IAAOrC,EAC5B7C,EAAMgF,SAAS7C,IAAI,EAAGqG,EAAG,EAAC,GAAA,IAGhCjC,EACGE,IAAIjB,EAAQ,QAAS,KAAO,KAC5BiD,KAAK,KACLrI,KAAK,MACLuG,UAAc9D,UACR,OAAAjD,EAAAX,KAAAY,aAAAD,EAAYE,SAASC,SAAiBC,IACzCA,EAAMd,MAAMiD,IAAIU,EAAGA,EAAGA,EAAC,GAAA,IAI1B0D,EAAAE,IAAIjB,EAAQ,YAAa,GAAK,IAC9BpF,KAAK,QACLuG,UAAc9D,UACb,OAAAjD,EAAAX,KAAKY,aAALD,EAAiBE,SAASC,SAASC,IAC7BA,EAAM0I,YACRC,OAAOC,KAAK5I,EAAM0I,YAAY3I,SAAe2D,IACrC1D,EAAA0I,WAAWhF,GAAK0E,UAAYvF,CAAA,GAEtC,GAAA,IAGN0D,EAAME,IAAIjB,EAAQ,UAAUpF,KAAK,MACjCmG,EAAMG,MACR,CAGA,SAAAlC,GACE,MACMgB,EAAS,CACbqD,OAAQ,MACRC,IAAK,aACLC,OAAQ,SACRC,OAAQ,UAGJzC,EARMtH,KAAKqC,IAQCkF,UAAU,MACtByC,EAAehK,KAAKiK,MAAMC,oBAAoB,kBAAkB,GAClEF,GACF1C,EAAME,IAAIwC,EAAc,YAAa,EAAG,IAAI7I,KAAK,SAEnD,MAAMgJ,EAAoBnK,KAAKiK,MAAMG,qBAAqB,sBAAsB,GAChF,GAAID,EAAkB/I,OAAQ,CACtB,MAACiJ,EAAWC,GAAaH,EAEzBI,EAAkB,IAAIC,EAA6BH,EAAW,EAAGA,EAAUtI,OAqBjF,GApBAwI,EAAgBpE,SAAU,EAC1BnG,KAAKoD,UAAUmH,GACRhE,EAAAuD,OAASO,EAAUtI,MAAM0I,SAE7BnD,EAAAe,SAAS9B,EAAQ,UACjBpF,KAAK,SACLuG,UAAc9D,IACHyG,EAAAtI,MAAMmB,IAAIU,GACJ2G,EAAAvJ,UAAUC,IACpBA,EAAGc,MACFd,EAAAc,MAAMmB,IAAIU,GACJ3C,EAAGyJ,QACTzJ,EAAAM,SAASQ,MAAMmB,IAAIU,EACxB,GACD,IAEL0D,EAAME,IAAI6C,EAAW,YAAa,EAAG,IAAIlJ,KAAK,SACxCmG,EAAAE,IAAI6C,EAAUpH,SAAU,IAAK,IAAK,KAAQ9B,KAAK,SACrDmG,EAAME,IAAI+C,EAAiB,WAAWpJ,KAAK,SAEvCmJ,EAAW,CACbhD,EAAME,IAAI8C,EAAW,WAAWnJ,KAAK,QAE9BoF,EAAAwD,OAASO,EAAUvI,MAAM0I,SAChC,MAAME,EAAkB,IAAIH,EAA6BF,EAAW,EAAGA,EAAUvI,OACjF4I,EAAgBxE,SAAU,EAC1BnG,KAAKoD,UAAUuH,GACRpE,EAAAuD,OAASQ,EAAUvI,MAAM0I,SAE7BnD,EAAAe,SAAS9B,EAAQ,UACjBpF,KAAK,SACLuG,UAAc9D,IACH0G,EAAAvI,MAAMmB,IAAIU,GACJ+G,EAAA3J,UAAUC,IACpBA,EAAGc,MACFd,EAAAc,MAAMmB,IAAIU,GACJ3C,EAAGyJ,QACTzJ,EAAAM,SAASQ,MAAMmB,IAAIU,EACxB,GACD,IAEL0D,EAAME,IAAI8C,EAAW,YAAa,EAAG,IAAInJ,KAAK,UACxCmG,EAAAE,IAAI8C,EAAUrH,SAAU,IAAK,IAAK,KAAQ9B,KAAK,UACrDmG,EAAME,IAAImD,EAAiB,WAAWxJ,KAAK,SAC7C,CACF,CAEInB,KAAKoG,aACPkB,EAAME,IAAIxH,KAAKoG,WAAY,WAAWjF,KAAK,MAC3CmG,EAAME,IAAIxH,KAAKyD,SAASmH,UAAW,WAAWzJ,KAAK,SAIlDmG,EAAAE,IAAIjB,EAAQ,SAAUtI,GACtBkD,KAAK,MACLuG,UAAc9D,IACb5F,EAAegC,KAAM4D,EAAS,QAANA,EAAc,WAAQ,EAAM,IAGrD0D,EAAAE,IACCjB,EACA,MACA,CAAC,cAAcsE,OAAO,IAAIxJ,MAAM,IAAIyJ,KAAK,GAAGtJ,KAAI,CAACuJ,EAAGC,IAAUC,OAAOD,EAAQ,OAE9E7J,KAAK,SACLuG,UAAc9D,IACR5D,KAAAkL,eAAe,qBAAqBtH,QAAO,IAGpD0D,EAAMG,MACR,CAGA,kBAAMP,CAAapI,EAAM,SAEjB,MAAAqM,EAAanL,KAAKyF,UAAUC,WAAWY,cAC3C,2BAGI8E,IACND,EAAWE,SACXC,SAASC,YAAY,QACrB5M,GAAQO,QAAQJ,EAClB,CAGA,aAAA0M,CAAcC,EAAKC,GACjB,IAAKD,EAAK,OAGV,GAFAA,EAAIE,kBAAmB,EAEnB3L,KAAKY,WAAY,CACb,MAAAgL,EAAO5L,KAAKY,WAAWC,SAAS+K,MAAWC,GAAAA,EAAG1K,OAASuK,IAC7D1L,KAAK8L,WAAWF,GACX5L,KAAAY,WAAWmL,OAAOH,EACzB,CAEM,MAAAI,EAAIhM,KAAKT,QAAQU,MACjBqH,EAAQ,IAAI2E,EACdR,EAAAzK,UAAeC,KACbA,EAAGiL,aAAejL,EAAGkL,eACnBlL,EAAGiL,aACC5E,EAAAE,IAAIvG,EAAG7B,QAGD5B,EAAA8J,EAAOtH,KAAKT,QAAS0B,EAAE,IAGrCqG,EAAMzG,SAASO,QACjBpB,KAAKoM,UAAU9E,GAGjBmE,EAAItK,KAAOuK,EACP,IAAA3K,EAAQ3D,EAAMiP,eAAeZ,GACjC,MAAM5E,EAAI9F,EAAMkC,SAChB1D,GAAQE,QAAU,yBACToH,EAAEb,kBACFa,EAAEE,kBACFF,EAAEG,WAGX,MAAM/G,EAAQc,EAAMd,MAWhB,GAVEc,EAAAd,MAAMiD,IAAI8I,EAAI/L,EAAM+F,EAAGgG,EAAI/L,EAAM8G,EAAGiF,EAAI/L,EAAM+G,GACpDjG,EAAMuL,WAAab,EAAIa,WACvBtM,KAAKuM,SAASxL,GAGVf,KAAKT,QAAQY,cACfH,KAAKkJ,kBAIHuC,EAAIa,WAAWlL,OAAQ,CACrB,IAAAoL,EAAQ,IAAIC,EAAqB1L,GACrC,MAAM2L,EAASjB,EAAIa,WAAWK,QAAO,CAACC,EAAIC,KAClC,MAAApI,EAAMoI,EAAI1L,MAAQ,GAIjB,OAHPyL,EAAGnI,GAAO+H,EAAMM,WAAWD,GACxBD,EAAAnI,GAAKsI,OACLH,EAAAnI,GAAK0E,UAAY,EACbyD,CAAA,GACN,CAAE,GAEL7L,EAAM0I,WAAaiD,EACnB3L,EAAMiM,UAAYR,CACpB,CACArI,QAAQC,IAAIpE,KACd,CAGA,eAAAkJ,SACQ9L,EAAA6P,qBACJjN,KAAKsD,OACL,CACE0C,EAAG,EACHe,EAAG,IACHC,EAAG,KAEL,OAAArG,EAAAX,KAAKuD,eAAU,EAAA5C,EAAAvB,OAEnB,CAGA,gBAAA8N,SAEM,OAAe,KADN,OAAAvM,EAAAX,KAAKY,iBAAL,EAAAD,EAAiBE,WAAY,IACjCO,SACPzC,GAAQE,QAAQ,WACT,EAGX,CAGA,OAAOsO,SACL,MAAMC,GAAO,OAAAzM,EAAAX,KAAKY,iBAAL,EAAAD,EAAiBE,WAAY,GACtC,IAACb,KAAKkN,mBAAoB,OACxB,MAAAG,EAAuB,GAAfD,EAAKhM,OACbL,EAAasM,EAAQD,EAAK,GAAKpN,KAAKY,WACpC0L,EAAa3O,EAAcoD,GACjCrD,EAAUqD,EAAOuL,EAAYe,EAAQtM,EAAMI,KAAO,OAAQgM,EAC5D,CAGA,aAAAxF,SACE,IAAIjH,EAAYV,KAAKT,QAAQe,QAAU,EAAI,GAC3C6D,QAAQC,IAAI1D,GACP,OAAAC,EAAAX,KAAAY,aAAAD,EAAYK,UAAUC,IACrBA,EAAGU,SACDV,EAAGM,oBAAoBF,MACtBJ,EAAAM,SAAST,SAAeW,IACzBA,EAAIf,UAAYA,CAAA,IAGlBO,EAAGM,SAASb,UAAYA,EAE5B,GAEJ,CAGA,aAAAkH,SACE,IAAIlH,EAAYV,KAAKT,QAAQc,iBAAmB,EAAI,GAC/C,OAAAM,EAAAX,KAAAY,aAAAD,EAAYK,UAAUC,IACrBA,EAAGU,QAAU3E,EAAcC,kBAAkB2O,MAAKC,GAAM5K,EAAGE,KAAKmM,QAAQzB,UACtE5K,EAAGM,oBAAoBF,MACtBJ,EAAAM,SAAST,SAAeW,IACzBA,EAAIf,UAAYA,CAAA,IAGlBO,EAAGM,SAASb,UAAYA,EAE5B,GAEJ,CAGA,kBAAAmH,GACE,MAAM3H,EAAOF,KAAKT,QAAQW,KAAOqN,EAAmBC,EACpDrJ,QAAQC,IAAIlE,GACPF,KAAKY,YACLZ,KAAAY,WAAWI,UAAUC,IACpBA,EAAGU,SACDV,EAAGM,oBAAoBF,MACtBJ,EAAAM,SAAST,SAAeW,IACzBA,EAAIvB,KAAOA,CAAA,IAGbe,EAAGM,SAASrB,KAAOA,EAEvB,GAEJ,CAGA,WAAAK,SACE,MAAMA,YAAEA,EAAAC,QAAaA,GAAYR,KAAKT,QAEjC,OAAAoB,EAAAX,KAAAY,aAAAD,EAAYK,UAAUC,IACrBjE,EAAcG,gBAAgByO,MAAWC,GAAA5K,EAAGE,KAAKmM,QAAQzB,IAAM,KAC/CpO,EAAAwD,EAAIV,EAAcC,EAAU,EAChD,GAEJ,CAGA,SAAA4H,CAAU3J,WACH,OAAAkC,EAAAX,KAAAY,aAAAD,EAAYK,UAAUC,IACrBA,EAAGiL,cACLjL,EAAG8G,UAAYtJ,EAAKsJ,UACpB9G,EAAG+G,WAAavJ,EAAKuJ,WACrB/G,EAAGgH,SAAWxJ,EAAKwJ,SACnBhH,EAAGiH,SAAWzJ,EAAKyJ,SACnBjH,EAAGkH,MAAQ1J,EAAK0J,MACblH,EAAAc,MAAMmB,IAAIzE,EAAKsD,OACpB,IAEG,OAAA0L,EAAAzN,KAAA0N,cAAAD,EAAazM,UAAUC,IACV,oBAAZA,EAAGjC,MACLiC,EAAGJ,SAAS,GAAGU,SAASQ,MAAMmB,IAAIzE,EAAKsD,MACzC,GAEJ,CAyEA,WAAAsH,WACE,OAAA1I,EAAAX,KAAK0N,cAAL/M,EAAkBE,SAASC,SAASG,UAClB,cAAZA,EAAGjC,OACLgB,KAAK8L,WAAW7K,GACX,OAAAN,EAAAX,KAAA0N,cAAA/M,EAAaoL,OAAO9K,GAC3B,IAGF,MAAMmM,EAAc,GACpB,OAAAK,EAAAzN,KAAKY,aAAL6M,EAAiB5M,SAASC,SAASG,IACjC,MAAM0M,OAAEA,EAAQvE,OAAAA,GAAWtL,EAAgBmD,EAAI,UAC/CjB,KAAKoM,UAAUuB,GACfvE,EAAOjI,KAAOF,EAAGE,KACjB,MAAM6E,EAAEA,EAAAe,EAAGA,EAAGC,EAAAA,GAAM/F,EAAGgC,SAEpBhC,EAAAgC,SAASC,IAAI8C,EAAIoD,EAAOpD,EAAGe,EAAGC,EAAIoC,EAAOpC,GACtC,MAAAM,EAAQ,IAAI2E,EACd,IAAAlL,EAAQE,EAAG2M,QACftG,EAAME,IAAIzG,GACVuG,EAAMgF,WAAavL,EAAMuL,WACzBc,EAAKS,KAAK5M,GACVjB,KAAKuM,SAASxL,EAAK,IAEhBqM,EAAAtM,SAAcG,UACjBjB,KAAK8L,WAAW7K,GACX,OAAAN,EAAAX,KAAAY,aAAAD,EAAYoL,OAAO9K,EAAA,IAE1BkD,QAAQC,IAAIpE,KACd,CAEA,aAAAyC,GACQ,MAAA6E,EAAQ,IAAI2E,EAClB3E,EAAMnG,KAAO,MACbnB,KAAKoD,UAAUkE,GACftH,KAAKY,WAAa0G,EAEZ,MAAAwG,EAAO,IAAI7B,EACjB6B,EAAK3M,KAAO,MACZnB,KAAK0N,YAAcI,EACnB9N,KAAKoD,UAAU0K,EACjB,CAEA,eAAAzG,GACOrH,KAAKY,YAILZ,KAAA8L,WAAW9L,KAAKY,YAChBZ,KAAA8L,WAAW9L,KAAK0N,aACrB1N,KAAKyC,iBALHzC,KAAKyC,eAMT,CAEA,QAAA8J,CAASd,GACHzL,KAAKY,YACFZ,KAAAY,WAAW4G,IAAIiE,EAExB,CAEA,SAAAW,CAAUX,GACJzL,KAAK0N,aACF1N,KAAA0N,YAAYlG,IAAIiE,EAEzB,CAGA,QAAAjD,CAASuF,GACP,MAAMtC,EAAMzL,KAAKiK,MAAM+D,gBAAgBD,GACvC,IAAKtC,EAAK,OACVtH,QAAQC,IAAIqH,GACN,MAAAlD,EAj6BU,CAACxH,IACb,MAAAkN,EAAgBlN,EAAQA,EAAMmN,SAAW,IAAIrI,EAAoB,IAAK,KACtE0C,EAAQ,IAAI4F,EAAMF,EAAe,CACrCG,aAAc,IACdC,cAAe,IACfC,cAAc,IAAIC,GAAsBC,KAC/B,kCACIC,IACDA,EAAAC,MAAQD,EAAQE,MAAQC,CAAAA,IAGpCC,aAAc,IAAIC,EAClBC,SAAU,SACVC,WAAY,MACZC,gBAAiB,MAGZ,OADD1G,EAAAhH,SAAS2N,SAAStK,KAAKd,MAAQ,GAC9ByE,CAAA,EAg5BS4G,CAAY1D,GAIpB2D,EAAI3D,EAAI4D,iBAAiB,IAAIP,GAC7BvG,EAAAtF,SAASqM,KAAKF,GACpB3D,EAAIxI,SAAS8D,GAAK,GACd/G,KAAKuI,OACFvI,KAAAiK,MAAM8B,OAAO/L,KAAKuI,OAEzBvI,KAAKuI,MAAQA,EACRvI,KAAAoD,UAAUpD,KAAKuI,MACtB,CAKA,aAAAgH,CAAc3L,GACZ5D,KAAKwP,sBAAsB5L,EAC7B,CAGA,WAAA6L,CAAY7L,SACV9D,MAAM2P,YAAY7L,GAElB,MAAM8L,EAAe,IAAIC,EAAc/L,EAAEgM,QAAShM,EAAEiM,SAGZ,GAApCzR,EAAQ0R,WAAWJ,KAAoB,OAAA/O,EAAAX,KAAK+D,oBAAmBpD,EAAAoP,UAInE,MAAMC,EAFEpM,EAAEqM,UAAYjQ,KAAK5B,QAAQ8R,IAEf,IACJ,GAAZtM,EAAEuM,SAEiB,GAAZvM,EAAEuM,OAEAH,GAAAhQ,KAAKwP,sBAAsB5L,GAC7BA,EAAEuM,OAGf,CAGA,qBAAAX,CAAsB5L,aACpB,MAAMwM,EAAMpQ,KAAKyF,UACXxF,EAAQD,KAAKH,QAAQI,MACX3B,EAAAsF,EAAGwM,EAAKnQ,GAExB,IAAI+P,EAAoB,eAAVpM,EAAE5E,MAAmC,aAAV4E,EAAE5E,KAGrC,MAAAqR,EAAUL,GAAU,OAAArP,EAAAX,KAAKY,iBAAL,EAAAD,EAAiBE,WAAY,GAAK,CAACb,KAAK0C,UAExDvE,EAAAmS,cAAclS,EAAS4B,KAAKsD,QAEtC,IAAIiN,EAAapS,EAAUqS,iBAAiBH,EAASL,GACjD,GAAAO,EAAWnP,OAAS,EAAG,CACnB,MAAAqP,EAAYF,EAAW,GAC7B,IAAIG,EAASD,EAAUC,OACvB,GAAIV,EAAS,CACX7L,QAAQC,IAAIqM,GACZzQ,KAAK0C,SAASO,SAASqM,KAAKmB,EAAUE,OAEtC,MAAMlR,EAAU,CAACO,KAAK0C,UAAUlB,KAAUP,IACxC,IAAI4F,EAAS5F,EAAGgC,SACT,MAAA,UAA2B,EAAjB4D,EAAEb,EAAEc,QAAQ,YAAiC,EAAjBD,EAAEE,EAAED,QAAQ,YACtC,EAAjBD,EAAEG,EAAEF,QAAQ,MACd,IAEMvH,GAAAE,QAAUA,EAAQwH,KAAK,KAC/BjH,KAAKkH,aAAa,WAAU,MAExBwJ,KAAW,OAAAjD,EAAAzN,KAAK+D,wBAAL,EAAA0J,EAAwBiD,UAEhC,OAAAE,EAAA5Q,KAAA+D,sBAAmB8M,OAAOH,GAGrC,CACF,CAEA,YAAAI,GACE,IAAK9Q,KAAKY,WAAY,OAElB,IAAAmQ,EAAQ/Q,KAAKmC,MAAM6O,WACvB,IAAA,IAASC,EAAI,EAAGA,EAAIjR,KAAKY,WAAWC,SAASO,OAAQ6P,IAAK,CACxD,MAAMlQ,EAAQf,KAAKY,WAAWC,SAASoQ,GACnClQ,EAAMiM,WACFjM,EAAAiM,UAAU3O,OAAO0S,EAE3B,CAGI/Q,KAAKuI,QACPvI,KAAKuI,MAAMhH,SAAS2N,SAAe,KAAEpL,OAAS,EAAI,GAEtD,ECrjCF,sCCwBA,MAAAoN,EAAA1R,EDpBkC,CAChC2R,QAHa,EAIbC,QANW,GAOXC,QAAS,GACTC,QAAS,MAETC,IAAK,0CCePC,YAAAA,GAAAlU,EAAAmU,UAAA,CAAwCL,QAAAF,EAAAE,UAIxCM,EAAAC,IACA9R,EAAA,CAAoEuR,QAAAF,EAAAE,QAChDG,IAAAL,EAAAK,IACJjI,KAAA,CACRnD,SAAA,GAENyL,KAAA,CACMzL,SAAA,IAIR,IAAA8D,EAEA,MAAA4H,EAAArS,ED7BoC,CAClCsS,OAAQ,CAAC,MAAO,MAAO,OAAQ,MAAO,OACtCC,SAAU,KC4BZC,EAAApO,IACE,MAAAqO,EAAArO,EAAAxE,OAAA6S,MACAC,EAAAD,EAAA,GACA,IAAAvG,EAAAwG,EAAA/Q,KACA,MAAAnC,EAAA0M,EAAAyG,MAAA,KAAAC,MAAAC,cACA,IAAAR,EAAAC,OAAAQ,SAAAtT,GACE,OAAAN,EAAA6T,MAAA,CAAuBxT,QAAA,kBAAA8S,EAAAC,OAAA7K,KAAA,QACiChI,UAAA,IAK1DyM,EAAAwG,EAAA/Q,KAAAqR,UAAA,EAAAN,EAAA/Q,KAAAsR,YAAA,MACAZ,EAAAE,SAAArG,EACA8F,EAAAS,GACElR,IAEEoD,QAAAC,IAAApF,EAAA,MAAA+B,GACAkJ,EAAAuB,cAAAzK,EAAA2K,EAAA,IACF,EAAAgH,WAAA9N,OAAA8G,SAAAiH,MAEExO,QAAAC,IAAA,UAAAuO,EAAA/N,EAAA8N,EAAA,IAGJ9O,EAAAxE,OAAA0E,MAAA,EAAA,SAGF8O,GAAA,KACE/S,EAAA4F,UAAAiM,EAAA5N,MACAmG,EAAA,IAAAvK,GAAAG,GACAoK,EAAA4I,MAEAC,EAAA7I,GAAA8I"}