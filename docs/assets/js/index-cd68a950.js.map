{"version":3,"file":"index-cd68a950.js","sources":["../../../code/src/pages/webgl/scene/station/first-person.vue","../../../code/src/pages/webgl/scene/station/data.ts","../../../code/src/pages/webgl/scene/station/emitter.ts","../../../code/src/pages/webgl/scene/station/config.ts","../../../code/src/pages/webgl/scene/station/methods.ts","../../../code/src/pages/webgl/scene/station/index.vue","../../../code/src/pages/webgl/scene/station/listen.ts","../../../code/src/pages/webgl/scene/station/request.ts"],"sourcesContent":["<template>\n  <div :class=\"$style.page\" class=\"character-sight\">\n    <div :class=\"$style.tip\">\n      <div :class=\"$style.item\" v-for=\"item in items\">\n        <span>{{ item.code }}</span>\n        <span>{{ item.desc }}</span>\n      </div>\n    </div>\n\n    <div :class=\"$style.center\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nconst items = [\n  { code: 'W', desc: '前进' },\n  { code: 'S', desc: '后退' },\n  { code: 'A', desc: '向左转向' },\n  { code: 'D', desc: '向右转向' },\n  { code: 'X', desc: '加速' },\n  { code: 'Z', desc: '减速' }\n]\n</script>\n\n<style lang=\"scss\" module>\n.page {\n  --bg-color: #0f365f;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: none;\n  position: absolute;\n  transition: all 0.5s;\n  background: radial-gradient(transparent 75%, var(--bg-color));\n  pointer-events: none;\n}\n\n.tip {\n  top: 11.5%;\n  width: 100%;\n  display: flex;\n  position: absolute;\n  justify-content: center;\n\n  .item {\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    span {\n      &:nth-child(1) {\n        padding: 3px 5px;\n        margin-right: 5px;\n        border-radius: 3px;\n        background-color: #000;\n      }\n    }\n  }\n}\n\n.center {\n  --color: #0be10e;\n  $size: 20px;\n  top: 50%;\n  left: 50%;\n  width: $size;\n  height: $size;\n  opacity: 0.5;\n  // border: 1px dashed var(--color);\n  position: absolute;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  &::before,\n  &::after {\n    top: 50%;\n    left: 50%;\n    content: '';\n    position: absolute;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    background-color: var(--color);\n  }\n  &::after {\n    width: $size;\n    height: 1px;\n  }\n  &::before {\n    width: 1px;\n    height: $size;\n  }\n}\n</style>\n","const base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nconst devEnv = import.meta.env.VITE_MODE !== 'production'\n\nexport const ANCHOR_POS = 'ANCHOR_POS' // 定位\nexport const ANCHOR_TARGET = 'ANCHOR_TARGET' // 锚点\nexport const MAIN_SCENE = 'MAIN_SCENE' // 主场景\nexport const MACHINE_ROOM = 'MACHINE_ROOM' // 机房\nexport const ROBOT = 'ROBOT' // 机器人\nexport const CHARACTER = 'CHARACTER' // 人物\nexport const FLOOR = 'floor_common' // 楼层\nexport const OPEN_DOOR = 'OPEN_DOOR' // 开门\nexport const LIGHT_SWITCH = 'LIGHT_SWITCH' // 开关灯\n\nexport const CRUISE_POINT_UP = 27.5 // y 巡航轴向量\nexport const ROAM_POINT_UP = 100 // y 漫游轴向量\nexport const getPageOpts = animateBack => ({\n  devEnv,\n  baseUrl: base,\n  bgColor: '',\n  skyCode: '104',\n  env: '/oss/textures/hdr/6.hdr',\n\n  // dot 点位类型值\n  dotKey: 'DOT',\n  dotShowStrict: false,\n\n  config: {},\n\n  // 锚点类型\n  anchorType: [ANCHOR_POS, ANCHOR_TARGET, OPEN_DOOR, LIGHT_SWITCH],\n  // 动画模型类型\n  animationModelType: [MAIN_SCENE, MACHINE_ROOM],\n  // 楼层类型\n  floorModelType: [FLOOR],\n\n  models: [\n    {\n      key: MAIN_SCENE,\n      name: '场景',\n      size: 65.1,\n      url: '/深圳北站.glb'\n    },\n    {\n      key: MACHINE_ROOM,\n      name: '机房',\n      size: 17.4,\n      url: '/机房.glb'\n    },\n    // {\n    //   key: 'building',\n    //   name: '楼宇',\n    //   size: 0.3,\n    //   url: '/楼宇.glb'\n    // },\n    // {\n    //   key: 'residential',\n    //   name: '居民楼',\n    //   size: 0.08,\n    //   url: '/居民楼.glb'\n    // },\n    // {\n    //   key: 'small_residential',\n    //   name: '小型居民楼',\n    //   size: 0.08,\n    //   url: '/小型居民楼.glb'\n    // },\n\n    {\n      key: FLOOR,\n      name: '楼层',\n      size: 6.3,\n      url: '/楼层.glb'\n    },\n\n    {\n      key: ANCHOR_POS,\n      name: '定位',\n      type: 'sprite',\n      range: { x: 4, y: 4 },\n      mapUrl: '/dw.png'\n    },\n    {\n      key: ANCHOR_TARGET,\n      name: '锚点',\n      type: 'sprite',\n      range: { x: 4, y: 4 },\n      mapUrl: '/dw.png'\n    },\n    {\n      key: OPEN_DOOR,\n      name: '开门',\n      type: 'sprite',\n      range: { x: 2, y: 2 },\n      mapUrl: '/pos.png'\n    },\n\n    {\n      key: ROBOT,\n      name: '机器人',\n      size: 0.3,\n      url: '/oss/model/park/机器人.glb'\n    },\n    {\n      key: CHARACTER,\n      name: '人物',\n      size: 2.2,\n      url: '/oss/model/park/RobotExpressive.glb'\n    },\n\n    {\n      key: 'waiting_room_spot_light',\n      type: 'spotlight',\n      name: '聚光灯',\n      intensity: 2,\n      color: 0xfff8d2,\n      penumbra: 0.5,\n      castShadow: false,\n      angle: Math.PI * 0.4,\n      distance: 40\n    },\n    {\n      key: LIGHT_SWITCH,\n      name: '开关灯',\n      type: 'sprite',\n      mapUrl: '/light.png',\n      range: { x: 2, y: 2 }\n    }\n  ].map(item => {\n    if (item.url && item.url.indexOf('oss') < 0) {\n      item.url = '/oss/model/station' + item.url\n    }\n    if (item.mapUrl) {\n      item.mapUrl = '/oss/textures/station' + item.mapUrl\n    }\n    return item as import('three-scene/types/model').ModelItem\n  }),\n\n  cruise: {\n    visible: true,\n    auto: true,\n    // helper: true,\n    mapUrl: '/oss/textures/cruise/line5.png', // 1-18\n    repeat: [0.1, 1],\n    width: 2,\n    segment: 100,\n    tension: 0,\n    speed: 20,\n    mapSpeed: 0.01,\n    points: [],\n    offset: 1.8,\n    animateBack: animateBack\n  },\n\n  // 漫游坐标\n  roamPoints: []\n})\n\nexport const getTipOpts = () => ({\n  show: false,\n  style: {\n    left: 0,\n    top: 0\n  },\n  msg: ''\n})\n","// 事件\nconst eventNames = [\n  // 漫游\n  'CAMERA:ROAM',\n  // 巡航\n  'CAMERA:CRUISE',\n  // 视角重置\n  'CAMERA:RESET',\n  // 第一人称\n  'CAMERA:FIRST',\n  // 第三人称\n  'CAMERA:THREE',\n  // 机房\n  'CAMERA:MACHINEROOM',\n\n  // 人物加速\n  'PERSON:ADD',\n  // 人物减速\n  'PERSON:SUB',\n  // 人物动作\n  'PERSON:ACTION',\n\n  // 场景坐标\n  'SCENE:POS',\n\n  // 设备更新\n  'DEV:UPDATE'\n] as const\ntype EventNames = (typeof eventNames)[number]\n\nclass EventEmitter {\n  private listteners: Record<string, Set<Function>> = eventNames.reduce((obj, key) => {\n    obj[key] = new Set()\n    return obj\n  }, {})\n\n  on(eventName: EventNames, listtener: Function) {\n    this.listteners[eventName].forEach(it => {\n      if (it.toString() === listtener.toString()) {\n        this.listteners[eventName].delete(it)\n      }\n    })\n    // 将监听器添加到对应事件的监听器集合中\n    this.listteners[eventName].add(listtener)\n  }\n\n  emit(eventName: EventNames, ...args: any[]) {\n    this.listteners[eventName].forEach(listtener => listtener(...args))\n  }\n}\n\nexport default new EventEmitter()\n","//\nexport default {\n  // 判断点击间隔时间\n  clickIntervalTime: 300,\n\n  // 人物视线高度\n  characterSightHeight: 8,\n\n  // 碰撞间距\n  collisionSpace: 1,\n\n  // 默认移动速度\n  moveFactor: 1,\n\n  // 机房名称\n  machineRoomName: '机房'\n}\n","import * as THREE from 'three'\nimport * as TWEEN from 'three/examples/jsm/libs/tween.module.js'\nimport { Water } from 'three/examples/jsm/objects/Water'\n\nimport * as ThreeScene from 'three-scene'\n\nimport type { Config, ExtendOptions } from '.'\nimport type { ObjectItem, XYZ } from 'three-scene/types/model'\n\nimport DEFAULTCONFIG from './config'\nimport { ThreeModelItem } from 'three-scene/types/model'\n\nconst Hooks = ThreeScene.Hooks\nconst Utils = ThreeScene.Utils\n\nconst { raycaster, pointer, update: raycasterUpdate, style } = Hooks.useRaycaster()\nconst { initCSS2DRender, createCSS2DDom } = Hooks.useCSS2D()\nconst { createDiffusion, updateDiffusion } = Hooks.useDiffusion()\nconst { createMove, moveAnimate } = Hooks.useMoveAnimate()\nconst { createFence, fenceAnimate } = Hooks.useFence()\nconst {\n  createRoam,\n  executeRoam,\n  pause: roamPause,\n  play: roamPlay,\n  getStatus: getRoamStatus\n} = Hooks.useRoam()\nconst { floorAnimate } = Hooks.useFloor()\nconst { keyboardPressed, destroyEvent, insertEvent } = Hooks.useKeyboardState()\nconst { checkCollide } = Hooks.useCollide()\nconst { virtualization, closeVirtualization } = Hooks.useModelLoader({})\n\nconst sightMap = {\n  full: 'FULL',\n  npc: 'NPC'\n}\n\nconst base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nconst createWater = (model?) => {\n  const waterGeometry = model ? model.geometry : new THREE.PlaneGeometry(200, 200)\n  const water = new Water(waterGeometry, {\n    textureWidth: 512,\n    textureHeight: 512,\n    waterNormals: new THREE.TextureLoader().load(\n      base + '/oss/textures/waternormals.jpg',\n      texture => {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      }\n    ),\n    sunDirection: new THREE.Vector3(),\n    sunColor: 0xf00f00,\n    waterColor: 0x01688b,\n    distortionScale: 3.7\n  })\n  water.material.uniforms.size.value = 0.5\n  return water\n}\n\nexport class StationThreeScene extends ThreeScene.Scene {\n  // 建筑集合\n  buildingGroup?: InstanceType<typeof THREE.Group>\n  // 锚点集合\n  anchorGroup?: InstanceType<typeof THREE.Group>\n  // 点位集合\n  dotGroup?: InstanceType<typeof THREE.Group>\n  // 灯光组\n  lightGroup?: InstanceType<typeof THREE.Group>\n\n  // 扩展参数\n  extend: Partial<ExtendOptions>\n  // CSS2D 渲染器\n  css2DRender: InstanceType<typeof Hooks.CSS2DRenderer>\n  // 鼠标点击地面扩散波效果\n  mouseClickDiffusion: InstanceType<typeof THREE.Mesh>\n  // 行走的人物\n  character?: InstanceType<typeof THREE.Group> & {\n    __runing__?: boolean\n    extra: {\n      key: string\n      mixer: any\n      actions: any[]\n    }\n  }\n  characterSightHeight = DEFAULTCONFIG.characterSightHeight\n\n  // 楼层集合（分层）\n  floorGroup?: InstanceType<typeof THREE.Group>\n\n  // 当前视角\n  currentSight: string\n  // 历史中心点（视角切换）\n  historyTarget: InstanceType<typeof THREE.Vector3>\n  // 历史相机坐标（视角切换）\n  historyCameraPosition: InstanceType<typeof THREE.Vector3>\n\n  // 动画模型集合\n  animateModels: (InstanceType<typeof THREE.Group> & {\n    data?: any\n    __mixer__: any\n    __action__: any\n  })[]\n\n  // 移动系数\n  moveFactor = DEFAULTCONFIG.moveFactor\n\n  // 碰撞间距\n  collisionSpace = DEFAULTCONFIG.collisionSpace\n\n  // 围栏\n  fence?: InstanceType<typeof THREE.Group>\n\n  // 水面\n  water?: InstanceType<typeof Water>\n\n  constructor(\n    options: ConstructorParameters<typeof ThreeScene.Scene>[0],\n    extend: Partial<ExtendOptions>\n  ) {\n    super(options)\n\n    this.extend = extend\n    this.css2DRender = initCSS2DRender(this.options, this.container)\n    this.css2DRender.domElement.className = 'three-scene__dot-wrap'\n\n    // 鼠标点击地面扩散波效果\n    this.mouseClickDiffusion = createDiffusion(4, void 0, 6)\n    this.mouseClickDiffusion.rotation.x = -Math.PI * 0.5\n    this.mouseClickDiffusion.position.y = 0.5\n    this.mouseClickDiffusion.visible = false\n    this.addObject(this.mouseClickDiffusion)\n\n    this.createClock()\n    this.currentSight = sightMap.full\n    this.historyTarget = new THREE.Vector3()\n    this.historyCameraPosition = new THREE.Vector3()\n    this.animateModels = []\n\n    this.bindEvent()\n    this.addBuildingGroup()\n    this.addFloorGroup()\n    this.addAnchorGroup()\n    this.addDotGroup()\n    this.addLightGroup()\n  }\n\n  // 添加建筑组\n  addBuildingGroup() {\n    const group = new THREE.Group()\n    group.name = '建筑组'\n    this.buildingGroup = group\n    this.addObject(group)\n  }\n\n  // 清除场景建筑\n  clearBuilding() {\n    if (this.buildingGroup) {\n      this.disposeObj(this.buildingGroup)\n    }\n    this.animateModels = []\n    this.addBuildingGroup()\n\n    this.clearAnchor()\n    this.clearDot()\n    this.clearFloor()\n  }\n\n  // 添加建筑\n  addBuilding(...obj) {\n    if (this.buildingGroup) {\n      this.buildingGroup.add(...obj)\n    }\n  }\n\n  // 添加锚点组\n  addAnchorGroup() {\n    const group = new THREE.Group()\n    group.name = '锚点组'\n    this.anchorGroup = group\n    this.addObject(group)\n  }\n\n  // 清除场景锚点\n  clearAnchor() {\n    if (this.anchorGroup) {\n      this.disposeObj(this.anchorGroup)\n    }\n    this.addAnchorGroup()\n  }\n\n  // 添加锚点\n  addAnchor(obj) {\n    if (this.anchorGroup) {\n      this.anchorGroup.add(obj)\n    }\n\n    const { x, y, z } = obj.position\n    // 创建精灵动画\n    Utils.createSpriteAnimate(obj, [x, y, z], 1, 8)\n  }\n\n  // 添加点位组\n  addDotGroup() {\n    const group = new THREE.Group()\n    group.name = '点位组'\n    this.dotGroup = group\n    this.addObject(group)\n  }\n\n  // 清除场景点位\n  clearDot() {\n    if (this.dotGroup) {\n      this.disposeObj(this.dotGroup)\n    }\n    this.addDotGroup()\n  }\n\n  // 添加点位\n  addDot(item: ObjectItem, clickBack) {\n    const pos = item.position\n    const { size, color } = item.font || {}\n    const { x = 0, y = 0, z = 0 } = pos || {}\n    const label = createCSS2DDom({\n      name: `\n        <div class=\"bg\"></div>\n        <span class=\"inner\" style=\"${\n          size != void 0 ? `font-size: ${typeof size === 'string' ? size : size + 'px'};` : ''\n        } ${color != void 0 ? `color: ${color}` : ''}\"></span>\n      `,\n      className: 'dot-2D-label',\n      position: [x, y, z],\n      onClick: clickBack\n    })\n    label.name = item.name\n    label.data = item\n    // 原始点位 备用\n    label._position_ = { x, y, z }\n    this.dotGroup?.add(label)\n    return label\n  }\n\n  // 添加楼层\n  addFloorGroup() {\n    const group = new THREE.Group()\n    group.name = '楼层组'\n    this.floorGroup = group\n    this.addObject(group)\n  }\n\n  // 清除楼层组\n  clearFloor() {\n    if (this.floorGroup) {\n      this.disposeObj(this.floorGroup)\n    }\n    this.addFloorGroup()\n  }\n\n  // 添加楼层\n  addFloor(...obj) {\n    if (this.floorGroup) {\n      this.floorGroup.add(...obj)\n    }\n  }\n\n  // 添加灯组\n  addLightGroup() {\n    const group = new THREE.Group()\n    group.name = '灯光组'\n    this.lightGroup = group\n    this.addObject(group)\n  }\n\n  // 清除灯组\n  clearLightGroup() {\n    if (this.lightGroup) {\n      this.disposeObj(this.lightGroup)\n    }\n    this.addLightGroup()\n  }\n\n  // 关闭灯组\n  closeLightGroup(isOpen: boolean = false) {\n    this.lightGroup?.children.forEach((el: any) => {\n      if (el.isSpotLight) {\n        el.visible = isOpen\n      }\n    })\n  }\n\n  // 添加灯\n  addLight(item: ObjectItem, obj, hasHelper?: boolean) {\n    if (this.lightGroup) {\n      obj.name = item.name\n      const pos = item.position || { x: 0, y: 0, z: 0 }\n      const { to = { x: pos.x, y: pos.y - 2, z: pos.z } } = item\n      obj.target.position.set(to.x, to.y, to.z)\n      // 开灯\n      obj.visible = true\n      this.lightGroup.add(obj)\n      this.lightGroup.add(obj.target)\n      if (hasHelper) {\n        const helper = new THREE.SpotLightHelper(obj, obj.color)\n        this.lightGroup.add(helper)\n      }\n    }\n  }\n\n  // 灯光开关\n  lightSwitch(object) {\n    const light = this.lightGroup?.getObjectsByProperty('name', object.data?.bind)\n    if (!light) return\n    light.forEach(el => {\n      el.visible = !el.visible\n    })\n  }\n\n  // 添加水面\n  addWater(waterName) {\n    const obj = this.scene.getObjectByName(waterName)\n    if (!obj) return\n    console.log(obj)\n    const water = createWater(obj)\n    const v = obj.getWorldPosition(new THREE.Vector3())\n    water.position.copy(v)\n    obj.position.y -= 0.2\n    if (this.water) {\n      this.scene.remove(this.water)\n    }\n    this.water = water\n    this.addBuilding(this.water)\n  }\n\n  // 添加人物\n  addCharacter(model, point) {\n    const { x, y, z } = point\n    model.position.set(x, y, z)\n\n    this.character = model\n\n    // 动画\n    const animations = model.animations\n    const mixer = new THREE.AnimationMixer(model)\n    const actions = {}\n\n    for (let i = 0; i < animations.length; i++) {\n      const clip = animations[i]\n      const action = mixer.clipAction(clip)\n      actions[clip.name] = action\n    }\n\n    // 空闲\n    const key = 'Idle'\n    const dance = actions[key]\n    dance.play()\n\n    // 步行\n    const runging = actions['Walking']\n\n    model.extra = {\n      key,\n      mixer,\n      actions,\n      runging\n    }\n    this.addObject(model)\n\n    const keys = ['W', 'S'].map(key => key.toUpperCase().charCodeAt(0))\n\n    // 插入事件 播放/暂停 动作\n    insertEvent(\n      e => {\n        if (model.__runing__) return\n        if (keys.includes(e.keyCode)) {\n          runging.play()\n        }\n        if (this.isCharacterSight()) {\n          if (keyboardPressed('X')) {\n            this.characterAccelerate(1)\n          }\n          if (keyboardPressed('Z')) {\n            this.characterAccelerate(-1)\n          }\n        }\n      },\n      e => {\n        if (model.__runing__) return\n        if (keys.includes(e.keyCode)) {\n          runging.stop()\n        }\n      }\n    )\n  }\n\n  // 人物动作\n  changeCharacterAction() {\n    if (!this.character) return\n    let { key, actions } = this.character.extra as any\n    // 空闲、步行、跑步、舞蹈、死亡、坐着、站立、弹跳、出拳、点赞、行走跳跃、点头、摇头、打招呼\n    const all = [\n      'Idle',\n      /* 'Walking',  */ 'Running',\n      'Dance',\n      'Death',\n      'Sitting',\n      'Standing',\n      'Jump',\n      'Punch',\n      'ThumbsUp',\n      'WalkJump',\n      'Yes',\n      'No',\n      'Wave'\n    ]\n    const text = [\n      '空闲',\n      '跑步',\n      '舞蹈',\n      '散架',\n      '坐着',\n      '站立',\n      '弹跳',\n      '出拳',\n      '点赞',\n      '行走跳跃',\n      '点头',\n      '摇头',\n      '打招呼'\n    ]\n    let index = all.findIndex(it => it === key) || 0\n    actions[key].stop()\n    index++\n    if (index >= all.length) index = 0\n    key = all[index]\n\n    actions[key].play()\n    ElMessage.success({\n      message: text[index],\n      grouping: true\n    })\n    this.character.extra.key = key\n  }\n\n  // 视角切换（人物/全屏）\n  // 1-第一人称 3-第三人称\n  toggleSight(type?: number) {\n    this.clearCoolMachineRoomFocus()\n    if (this.judgeCruise()) return\n\n    const sight = this.currentSight == sightMap.full ? sightMap.npc : sightMap.full\n    this.currentSight = sight\n\n    // 人物视角\n    const isCharacter = sight === sightMap.npc\n\n    if (!this.controls) return\n    // 控制器操作限制切换\n    this.controls.maxDistance = isCharacter ? (type == 3 ? 20 : 0) : 800\n    // this.controls.screenSpacePanning = !isCharacter\n    this.controls.enablePan = !isCharacter\n    // this.controls.maxPolarAngle = Math.PI * (isCharacter ? 0.8 : 0.48)\n\n    if (!this.character) return\n    const position = this.character.position\n    this.toggleCharacterView()\n\n    // 向量\n    const up = new THREE.Vector3(0, this.characterSightHeight, 0)\n    /// 切换到人物视角，暂存控制参数\n    if (isCharacter) {\n      ElMessage.success({\n        message: '鼠标点击地面移动，或键盘 W、S 前后移动，A、D调整左右方向，X 加速，Z 减速!',\n        grouping: true\n      })\n\n      this.historyTarget = this.controls.target.clone()\n      this.historyCameraPosition = this.camera.position.clone()\n      const pos = position.clone().add(up)\n      this.camera.lookAt(pos)\n    } else {\n      this.camera.position.copy(this.historyCameraPosition)\n      this.camera.lookAt(position)\n    }\n\n    const vect = isCharacter ? position : this.historyTarget\n    const pos = vect.clone().add(up)\n    this.controls.target.copy(pos)\n  }\n\n  // 是否人物视角\n  isCharacterSight() {\n    return this.currentSight == sightMap.npc\n  }\n\n  // 清除人物视角状态\n  clearCharacterSight() {\n    this.currentSight = sightMap.full\n    this.toggleCharacterView()\n  }\n\n  // 切换人物界面效果\n  toggleCharacterView() {\n    const dom = this.container.parentNode?.querySelector('.character-sight') as HTMLDivElement\n    if (!dom) return\n    const isCharacter = this.currentSight === sightMap.npc\n    dom.style.display = isCharacter ? 'block' : 'none'\n  }\n\n  // 人物加速\n  characterAccelerate(speed = 1) {\n    this.moveFactor += speed\n    if (this.moveFactor >= 10) this.moveFactor = 10\n    else if (this.moveFactor <= 1) this.moveFactor = 1\n    ElMessage.success({\n      message: '人物速度：' + this.moveFactor,\n      grouping: true\n    })\n  }\n\n  // 设置控制中心点\n  setControlTarget(point) {\n    if (!this.controls) return\n    const { x, y, z } = point\n    this.controls.target.set(x, y + this.characterSightHeight, z)\n    this.camera.lookAt(this.controls.target)\n  }\n\n  // 鼠标点击地面\n  mouseClickGround(intersct) {\n    if (this.currentSight !== sightMap.npc) return Promise.reject()\n\n    const character = this.character\n    if (!character) return Promise.reject()\n    const { runing } = this.options.cruise\n    // 自动巡航中不操作\n    if (runing) return Promise.reject()\n    const lookAt = intersct.point\n    const obj = this.mouseClickDiffusion\n\n    const { runging } = character.extra as any\n    runging.play()\n\n    const { x, y, z } = lookAt\n    obj.position.set(x, y, z)\n    obj.visible = true\n\n    character.__runing__ = true\n    return new Promise(resolve => {\n      // 创建移动\n      createMove(\n        character,\n        lookAt,\n        (pos, stop) => {\n          this.setControlTarget(pos)\n          if (this.checkCharacterCollide(pos, 2)) {\n            stop()\n            runging.stop()\n            character.__runing__ = false\n            obj.visible = false\n          }\n        },\n        pos => {\n          this.setControlTarget(pos)\n          runging.stop()\n          character.__runing__ = false\n          obj.visible = false\n          resolve(character)\n        }\n      )\n    })\n  }\n\n  // 检测人物碰撞\n  checkCharacterCollide(pos, y = 0.3) {\n    if (!this.character) return\n    // 检测碰撞\n    const intersects = checkCollide(\n      this.character,\n      pos,\n      this.buildingGroup?.children || [],\n      true,\n      new THREE.Vector3(0, y, 0)\n    )\n    if (intersects.length) {\n      const intersect = intersects[0]\n\n      // 于目标距离\n      if (intersect.distance < this.collisionSpace) {\n        ElMessage.warning({\n          message: '撞到了！',\n          grouping: true\n        })\n        return true\n      }\n    }\n  }\n\n  // 获取动画目标点\n  getAnimTargetPos(config: Partial<Config>, _to?: XYZ, _target?: XYZ) {\n    if (!this.controls) return\n    const to = _to || config.to || { x: -104, y: 7, z: 58 }\n    const target = _target || config.target || { x: 0, y: 0, z: 0 }\n    // 中心点位\n    this.controls.target.set(target.x, target.y, target.z)\n    return to\n  }\n\n  // 添加模型动画\n  addModelAnimate(model, animations = [], play: boolean = true, timeScale: number = 1) {\n    if (!animations.length) return\n    const mixer = new THREE.AnimationMixer(model)\n    const obj = animations.reduce((ob, cur: any) => {\n      const key = cur.name || ''\n      ob[key] = mixer.clipAction(cur)\n      if (play) {\n        ob[key].play()\n      }\n      ob[key].timeScale = timeScale\n      return ob\n    }, {})\n\n    model.__action__ = obj\n    model.__mixer__ = mixer\n    this.animateModels.push(model)\n  }\n\n  // 相机转场\n  cameraTransition(object) {\n    this.clearCoolMachineRoomFocus()\n    if (this.judgeCruise()) return\n\n    if (this.mouseClickDiffusion.visible) {\n      ElMessage.warning({\n        message: '人物移动中，不可操作！',\n        grouping: true\n      })\n      return\n    }\n\n    this.clearCharacterSight()\n\n    const { to, target = object.position } = object.data\n\n    if (!to) return\n\n    if (!this.isCameraMove(to) && this.controls) {\n      const dis = new THREE.Vector3(to.x, to.y, to.z).distanceTo(\n        new THREE.Vector3(target.x, target.y, target.z)\n      )\n      this.controls.maxDistance = dis\n      Utils.cameraLinkageControlsAnimate(\n        this.controls,\n        this.camera as InstanceType<typeof THREE.PerspectiveCamera>,\n        to,\n        target\n      )\n    }\n\n    const { bind } = object.data\n    if (!bind) {\n      return\n    }\n\n    const obj = this.buildingGroup?.getObjectByName(bind)\n    this.addFence(obj)\n  }\n\n  // 添加围栏\n  addFence(model?) {\n    // 先删除\n    if (this.fence) {\n      this.disposeObj(this.fence)\n      this.fence = void 0\n    }\n\n    if (model) {\n      // 围栏\n      const fence = createFence(model, 0x52ffae)\n      this.fence = fence\n      this.addObject(fence)\n    }\n  }\n\n  // 相机移动聚焦点\n  cameraLookatMoveTo(pos) {\n    return new Promise((resolve, reject) => {\n      if (this.judgeCruise(true)) return reject(false)\n\n      if (this.isCharacterSight()) {\n        return reject(false)\n      }\n\n      if (!this.controls) return\n\n      this.controls.maxDistance = 100\n      Utils.cameraLookatAnimate(\n        this.camera as InstanceType<typeof THREE.PerspectiveCamera>,\n        pos,\n        this.controls.target\n      ).then(() => {\n        this.controls && (this.controls.maxDistance = 800)\n        resolve(this.camera)\n      })\n    })\n  }\n\n  // 切换巡航\n  toggleCruise(close?: boolean) {\n    if (getRoamStatus()) {\n      ElMessage.warning({\n        message: '请退出漫游！',\n        grouping: true\n      })\n      return\n    }\n    super.toggleCruise(close)\n  }\n\n  // 判断是否巡航中\n  judgeCruise(isSilent?: boolean) {\n    if (this.options.cruise.runing) {\n      if (isSilent) return false\n      ElMessage.warning({\n        message: '请退出巡航！',\n        grouping: true\n      })\n      return true\n    }\n    if (getRoamStatus()) {\n      if (isSilent) return false\n      ElMessage.warning({\n        message: '请退出漫游！',\n        grouping: true\n      })\n      return true\n    }\n    return false\n  }\n\n  // 控制重置视角\n  controlReset() {\n    if (this.judgeCruise()) return\n    this.clearCharacterSight()\n    if (!this.controls) return\n    this.controls.maxDistance = 800\n    super.controlReset()\n\n    this.historyTarget = new THREE.Vector3().copy(this.controls.target)\n    this.historyCameraPosition = new THREE.Vector3().copy(this.camera.position)\n  }\n\n  // 设置漫游点位\n  setRoamPoint(points) {\n    this.extend.roamPoints = points\n  }\n\n  // 场景漫游\n  toggleRoam() {\n    this.clearCoolMachineRoomFocus()\n\n    if (!this.controls) return\n    // 漫游中则暂停\n    if (getRoamStatus()) {\n      roamPause()\n      this.controls.maxDistance = 800\n      return\n    }\n    const points = this.extend.roamPoints || []\n    if (points.length == 0) return\n    this.controls.maxDistance = 20\n    createRoam({\n      points,\n      tension: 0.3\n    })\n    roamPlay()\n  }\n\n  // 楼层展开\n  floorExpand(object) {\n    const data = object.data\n    const list = this.getFloorByGroup(data.group) as any[]\n    if (!list.length) return\n    const index = list.findIndex(el => object.uuid === el.uuid)\n    floorAnimate(list, index, mark => this.getFlowMark(mark))\n  }\n\n  // 获取机房\n  getMachineRoomStatus(name) {\n    const room = this.scene.getObjectByName(name) as ThreeModelItem\n    return {\n      isFocus: room?.__isFocus__,\n      room\n    }\n  }\n\n  // 机房视角-其他虚化\n  toCoolMachineRoom() {\n    if (this.judgeCruise()) return\n    this.clearCharacterSight()\n\n    const { room, isFocus } = this.getMachineRoomStatus(DEFAULTCONFIG.machineRoomName)\n\n    if (!room) {\n      ElMessage.warning({\n        message: '未找到机房模块！',\n        grouping: true\n      })\n      return\n    }\n\n    room.__isFocus__ = !isFocus\n\n    if (isFocus) {\n      closeVirtualization(this.buildingGroup?.children)\n      this.toggleCoolMachineRoomFocus(false)\n      return\n    }\n    this.toggleCoolMachineRoomFocus(true)\n    virtualization(this.buildingGroup?.children || [], room, {\n      wireframe: !false,\n      hidden: true,\n      opacity: 0.1,\n      filter: []\n    })\n  }\n\n  // 机房聚焦\n  toggleCoolMachineRoomFocus(isFocus) {\n    if (!this.controls) return\n    let target = this.historyTarget\n    let to = this.historyCameraPosition as XYZ\n\n    // 聚焦移动 暂存场景参数\n    if (isFocus) {\n      this.historyTarget = new THREE.Vector3().copy(this.controls.target)\n      this.historyCameraPosition = new THREE.Vector3().copy(this.camera.position)\n\n      target = new THREE.Vector3(-78.4, -33, 29.2)\n      to = { x: -143.7, y: -25.8, z: 67 }\n    }\n\n    const dis = target.distanceTo(to)\n    this.controls.maxDistance = dis\n\n    Utils.cameraLinkageControlsAnimate(this.controls, this.camera, to, target)\n  }\n\n  // 清除机房聚焦效果\n  clearCoolMachineRoomFocus() {\n    const { room, isFocus } = this.getMachineRoomStatus(DEFAULTCONFIG.machineRoomName)\n    if (isFocus) {\n      closeVirtualization(this.buildingGroup?.children)\n    }\n    room.__isFocus__ = false\n  }\n\n  // 开门\n  openTheDoor(object) {\n    const dobj = this.scene.getObjectByName(object.data.bind) as any\n    if (!dobj) return\n\n    dobj.__open__ = !dobj.__open__\n    new TWEEN.Tween(dobj.rotation)\n      .to(\n        {\n          y: dobj.__open__ ? Math.PI * 0.5 : 0\n        },\n        1000 * 1.5\n      )\n      .delay(0)\n      .start()\n  }\n\n  // 模型动画\n  modelAnimate(): void {\n    // css2D 渲染器\n    this.css2DRender.render(this.scene, this.camera)\n\n    if (typeof this.extend.animateCall === 'function') this.extend.animateCall()\n\n    this.restoreAnchorMaterial()\n\n    let delta = this.clock?.getDelta() || 0\n    // 模型动画\n    if (this.animateModels.length) {\n      this.animateModels.forEach(el => {\n        if (el.__mixer__) {\n          el.__mixer__.update(delta)\n        }\n      })\n    }\n\n    if (!this.anchorGroup) return\n    this.anchorGroup.children.forEach((el: any) => {\n      if (el.__mixer__) {\n        el.__mixer__.update(delta)\n      }\n    })\n\n    if (this.character) {\n      const mixer = this.character.extra.mixer\n      mixer.update(delta)\n\n      moveAnimate(0.5 * this.moveFactor)\n    }\n\n    // 波纹扩散\n    if (this.mouseClickDiffusion.visible) {\n      updateDiffusion()\n    }\n\n    fenceAnimate()\n\n    executeRoam(this.camera, this.controls)\n\n    // 人物视角\n    if (this.isCharacterSight() && !this.character?.__runing__) {\n      // 移动速度\n      const steep = 10 * delta\n      // 旋转速度\n      const angle = Math.PI * 0.2 * delta\n      const target = this.character\n      if (!target) return\n\n      // 前进、后退\n      const isS = keyboardPressed('S')\n      if (keyboardPressed('W') || isS) {\n        // 向量\n        const dir = new THREE.Vector3()\n        // 视线方向\n        target?.getWorldDirection(dir)\n        // dis向量表示相机沿着相机视线方向平移的位移量\n        const dis = dir.clone().multiplyScalar(isS ? -steep : steep)\n        // 初始位置+偏移向量\n        const newPos = target?.position.clone().add(dis) || new THREE.Vector3()\n        if (this.checkCharacterCollide(newPos)) {\n        } else {\n          target?.position.copy(newPos)\n          if (isS) {\n            // 定位后一步\n            const ds = dir.clone().multiplyScalar(-steep * 2)\n            this.camera.position.copy(this.camera.position.clone().add(ds))\n          }\n          this.setControlTarget(target?.position)\n        }\n      }\n\n      // 左、右\n      if (keyboardPressed('A')) {\n        target.rotation.y += angle\n        this.keyboardToTotation()\n      } else if (keyboardPressed('D')) {\n        target.rotation.y -= angle\n        this.keyboardToTotation()\n      }\n    }\n\n    // 水面波动\n    if (this.water) {\n      this.water.material.uniforms['time'].value += 1 / 60\n    }\n  }\n\n  // 按键转向\n  keyboardToTotation() {\n    const target = this.character\n    // 向量\n    const dir = new THREE.Vector3()\n    // 目标视线方向坐标\n    target?.getWorldDirection(dir)\n    const mds = this.controls?.maxDistance || 1\n    const dis = dir.clone().multiplyScalar(-mds)\n    const newPos =\n      target?.position.clone().setY(this.camera.position.y).add(dis) || new THREE.Vector3()\n    this.camera.position.copy(newPos)\n    this.setControlTarget(target?.position)\n  }\n\n  // 设置双击模型名称\n  setDblclickModelName(names: string[]) {\n    this.extend.dblclickModelName = names\n  }\n\n  // 双击\n  onDblclick(e: MouseEvent) {\n    const dom = this.container\n    const scale = this.options.scale\n    raycasterUpdate(e as PointerEvent, dom, scale)\n\n    if (this.floorGroup && this.buildingGroup) {\n      // 设置新的原点和方向向量更新射线, 用照相机的原点和点击的点构成一条直线\n      raycaster.setFromCamera(pointer, this.camera)\n      // 检查射线和物体之间的交叉点（包含或不包含后代）\n      const objects = this.floorGroup.children.concat(this.buildingGroup.children)\n      const interscts = raycaster.intersectObjects(objects)\n\n      if (interscts.length) {\n        const obj = interscts[0].object\n        const object = this.findParentGroup(obj, this.extend.dblclickModelName)\n        if (!object) return\n        if (typeof this.extend?.onDblclick === 'function') this.extend.onDblclick(object)\n      }\n    }\n  }\n\n  // 移动\n  onPointerMove(e: PointerEvent) {\n    this.checkIntersectObjects(e)\n  }\n\n  // 弹起\n  onPointerUp(e: PointerEvent) {\n    super.onPointerUp(e)\n\n    let s = e.timeStamp - this.pointer.tsp\n    // 判断是否未点击\n    const isClick = s < DEFAULTCONFIG.clickIntervalTime\n    if (e.button == 2) {\n      // console.log('你点了右键')\n      if (isClick && typeof this.extend?.onClickRight === 'function') this.extend.onClickRight(e)\n    } else if (e.button == 0) {\n      // console.log('你点了左键')\n      isClick && this.checkIntersectObjects(e)\n    } else if (e.button == 1) {\n      // console.log('你点了滚轮')\n    }\n  }\n\n  // 检查交叉几何体\n  checkIntersectObjects(e: PointerEvent) {\n    const dom = this.container\n    const scale = this.options.scale\n    raycasterUpdate(e, dom, scale)\n    let isClick = e.type == 'pointerdown' || e.type == 'pointerup'\n    // 锚点或者地面\n    const objects =\n      this.buildingGroup?.children\n        .filter((it: any) => it.visible && (isClick || it.__ground__))\n        .concat(this.anchorGroup?.children || []) || []\n\n    // 设置新的原点和方向向量更新射线, 用照相机的原点和点击的点构成一条直线\n    raycaster.setFromCamera(pointer, this.camera)\n    let interscts = raycaster.intersectObjects(objects, isClick /* 是否检查所有后代 */)\n\n    // dom.style.cursor = !isClick && interscts.length > 0 ? 'pointer' : 'auto'\n    if (!isClick) {\n      // 处理锚点类型-精灵材质\n      this.hoverAnchor(interscts)\n      return\n    }\n    dom.style.cursor = 'auto'\n\n    if (interscts.length) {\n      const intersct = interscts[0]\n      const object = intersct.object\n      console.log(intersct)\n\n      // 是否点击地面\n      const isClickGround =\n        typeof object.name == 'string' &&\n        (this.extend.groundMeshName || []).some(t => object.name.indexOf(t) > -1)\n\n      const obj = this.findParentGroup(object)\n      if (isClickGround) {\n        if (typeof this.extend?.onClickGround === 'function')\n          this.extend.onClickGround(obj, intersct)\n      }\n\n      if (!obj) return\n      if (typeof this.extend?.onClickLeft === 'function') this.extend.onClickLeft(obj, intersct)\n    } else {\n      if (typeof this.extend?.onClickLeft === 'function') this.extend.onClickLeft()\n    }\n  }\n\n  // 悬浮锚点\n  hoverAnchor(interscts) {\n    if (typeof this.extend.onHoverAnchor === 'function')\n      this.extend.onHoverAnchor(interscts[0], style)\n\n    if (interscts.length) {\n      const intersct = interscts[0]\n      const object = intersct.object\n      this.container.style.cursor = object._isAnchor_ ? 'pointer' : 'auto'\n      if (!object._isAnchor_) return\n\n      const mat = object.material\n      if (object.__mat_color__ === void 0) {\n        object.__mat_color__ = mat.color\n      }\n      mat.color = new THREE.Color(0xff0ff0)\n      this.anchorGroup?.children.forEach((el: any) => {\n        el.__change_color__ = el.uuid === object.uuid\n      })\n    } else {\n      this.container.style.cursor = 'auto'\n      this.anchorGroup?.children.forEach((el: any) => {\n        el.__change_color__ = false\n      })\n    }\n  }\n\n  // 恢复锚点材质\n  restoreAnchorMaterial() {\n    this.anchorGroup?.traverse((el: any) => {\n      if (el.isSprite) {\n        if (!el.__change_color__ && el.__mat_color__) {\n          el.material.color = el.__mat_color__\n        }\n      }\n    })\n  }\n\n  // 查找父级组合\n  findParentGroup(object, filterNames: string[] = []) {\n    const _find = obj => {\n      if (obj._isBuilding_ || filterNames.includes(obj.name)) return obj\n      let parent = obj.parent\n      if (!parent) {\n        return\n      }\n      return _find(parent)\n    }\n    return _find(object)\n  }\n\n  // 获取所有对象\n  getAll() {\n    return (\n      this.buildingGroup?.children\n        .concat(this.dotGroup?.children || [])\n        .concat(this.floorGroup?.children || [])\n        .concat(this.anchorGroup?.children || []) || []\n    )\n  }\n\n  // 获取楼层组\n  getFloorByGroup(name) {\n    return this.floorGroup?.children.filter((it: any) => it.data.group === name)\n  }\n\n  // 获取跟随目标集合\n  getFlowMark(mark) {\n    return this.getAll().filter((el: any) => el.data?.followMark === mark)\n  }\n\n  resize() {\n    super.resize()\n    const { width, height } = this.options\n    this.css2DRender.setSize(width, height)\n  }\n\n  dispose() {\n    destroyEvent()\n    this.animateModels = []\n    this.disposeObj(this.buildingGroup)\n    this.disposeObj(this.character)\n    this.disposeObj(this.dotGroup)\n    this.disposeObj(this.anchorGroup)\n    this.disposeObj(this.fence)\n    this.disposeObj(this.mouseClickDiffusion)\n    this.disposeObj(this.floorGroup)\n    this.disposeObj(this.lightGroup)\n\n    this.clock = void 0\n    // @ts-ignore\n    this.css2DRender = void 0\n    this.buildingGroup = void 0\n    this.character = void 0\n    this.dotGroup = void 0\n    this.anchorGroup = void 0\n    this.fence = void 0\n    // @ts-ignore\n    this.mouseClickDiffusion = void 0\n    this.floorGroup = void 0\n    this.lightGroup = void 0\n    this.extend = {}\n    super.dispose()\n  }\n}\n\n// 点位更新回调\nexport const dotUpdateObjectCall = (obj: ObjectItem, _group) => {\n  // const val = wsStore.getKeyValue( code ).value\n  const val = Math.random() * 40\n  if (val !== void 0) {\n    obj.value = val\n  }\n\n  obj.show = Math.random() > 0.5\n  obj.value = Number(Number(obj.value || 0).toFixed(2))\n  return {\n    value: obj.value,\n    show: obj.show,\n    font: {\n      ...(obj.font || {}),\n      color: '#' + (0xffffff + val * 1000000).toString(16).substring(0, 6)\n    }\n  }\n}\n\n// 偏移坐标\nexport const getOffsetPoint = (pos, offset = 0) => {\n  return new THREE.Vector3(pos.x, pos.y + offset, pos.z)\n}\n","<template>\n  <div :class=\"$style.page\">\n    <!-- 操作按钮 -->\n    <div class=\"scene-operation\">\n      <div class=\"btn\" @click=\"() => updateObject()\">随机更新</div>\n      <div class=\"btn\" @click=\"() => Emitter.emit('SCENE:POS')\">场景坐标</div>\n\n      <div class=\"item\" @click=\"() => Emitter.emit('CAMERA:ROAM')\">全景漫游</div>\n      <div class=\"item\" @click=\"() => Emitter.emit('CAMERA:MACHINEROOM')\">制冷机房</div>\n      <div class=\"item\" v-for=\"item in cameraPositionList\" @click=\"onCameraTransition(item)\">\n        {{ item.name }}\n      </div>\n\n      <div class=\"item\" @click=\"() => Emitter.emit('CAMERA:CRUISE')\">定点巡航</div>\n      <div class=\"item\" @click=\"() => Emitter.emit('CAMERA:RESET')\">视角重置</div>\n      <div class=\"item\" @click=\"() => Emitter.emit('CAMERA:FIRST')\">第一人称</div>\n      <div class=\"item\" @click=\"() => Emitter.emit('CAMERA:THREE')\">第三人称</div>\n\n      <div class=\"item\" @click=\"() => Emitter.emit('PERSON:ACTION')\">人物动作</div>\n      <div class=\"item\" @click=\"() => Emitter.emit('PERSON:ADD')\">人物加速</div>\n      <div class=\"item\" @click=\"() => Emitter.emit('PERSON:SUB')\">人物减速</div>\n    </div>\n\n    <div :class=\"$style.container\" ref=\"containerRef\"></div>\n\n    <t-first-person />\n\n    <t-loading v-model=\"progress.show\" :progress=\"progress.percentage\"></t-loading>\n\n    <!-- // 提示 -->\n    <div\n      :class=\"$style.tip\"\n      v-if=\"tipOpts.show\"\n      :style=\"{\n        left: tipOpts.style.left + 'px',\n        top: tipOpts.style.top + 'px'\n      }\"\n    >\n      <div :class=\"$style.msg\" v-html=\"tipOpts.msg\"></div>\n    </div>\n\n    <!-- 弹窗 -->\n    <div :class=\"$style.dialog\" v-if=\"dialog.show\" :style=\"dialog.style\">\n      <div :class=\"$style.wrap\">\n        <div>{{ dialog.title }}</div>\n        <div :class=\"$style.content\">\n          <div :class=\"$style.item\" v-for=\"item in dialog.list\">\n            <span>{{ item.name }}：</span>\n            <span>{{ item.value }}{{ item.unit || '' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport tLoading from '@/components/loading/index.vue'\nimport tFirstPerson from './first-person.vue'\nimport {\n  MACHINE_ROOM,\n  ANCHOR_POS,\n  ANCHOR_TARGET,\n  ROBOT,\n  CRUISE_POINT_UP,\n  CHARACTER,\n  OPEN_DOOR,\n  LIGHT_SWITCH,\n  getPageOpts,\n  getTipOpts\n} from './data'\nimport * as request from './request'\nimport Emitter from './emitter'\n\nimport { StationThreeScene, dotUpdateObjectCall, getOffsetPoint } from './methods'\nimport { onListen } from './listen'\n\nimport { useResize } from '@/hooks/scene-resize'\nimport { Hooks, Utils } from 'three-scene'\n\nimport type { ObjectItem, ThreeModelItem } from 'three-scene/types/model'\n\nconst pageOpts = reactive(\n  getPageOpts((pos, lookAt, cruiseCurve, t) => {\n    if (robotObj) {\n      // 前置视角前 0.02\n      t = t + 0.02\n      if (t > 1) t = t - 1\n      pos = getOffsetPoint(cruiseCurve.getPointAt(t))\n      const oft = 0.001\n      let ts = t + oft\n      if (ts > 1) ts = ts - 1\n      lookAt = cruiseCurve.getPointAt(ts)\n\n      robotObj.position.set(pos.x, CRUISE_POINT_UP, pos.z)\n      // 求正切值\n      const angle = Math.atan2(-lookAt.z + pos.z, lookAt.x - pos.x)\n      robotObj.rotation.z = Math.PI * 0.5 + angle\n    }\n  })\n)\nconst tipOpts = reactive(getTipOpts())\n\nconst { backgroundLoad } = Hooks.useBackground()\nconst { progress, loadModels, getModel, initModels } = Hooks.useModelLoader({\n  baseUrl: pageOpts.baseUrl,\n  indexDB: {\n    cache: true,\n    dbName: 'THREE__STATION__DB',\n    tbName: 'TB',\n    version: 59\n  }\n})\nconst { options: dialog } = Hooks.useDialog()\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof StationThreeScene>[0] = {\n  baseUrl: pageOpts.baseUrl,\n  env: pageOpts.env,\n  cruise: pageOpts.cruise,\n  controls: {\n    enableDamping: true,\n    dampingFactor: 0.48,\n    maxPolarAngle: Math.PI * 0.48,\n    // enablePan: false,\n    screenSpacePanning: false,\n    maxDistance: 800\n  },\n  camera: {\n    near: 3,\n    fov: 45\n  },\n  directionalLight: {\n    intensity: 2.2\n  }\n}\nlet scene: InstanceType<typeof StationThreeScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new StationThreeScene(options, {\n    groundMeshName: [\n      '行走地面',\n      '平面125',\n      '平面126',\n      '平面127',\n      '平面128',\n      '平面129',\n      '平面130',\n      '楼梯',\n      '机房地面',\n      '地面005',\n      '立方体128',\n      '立方体780_1',\n      '11111',\n      '22222'\n    ],\n    roamPoints: pageOpts.roamPoints,\n    onDblclick: object => {\n      if (object && object._isFloor_) {\n        scene.floorExpand(object)\n      } else {\n        const names = scene.extend.dblclickModelName || []\n        const name = object.name\n        if (names.includes(name)) {\n          // 查找点位信息\n          const item = cameraPositionList.value.find(it => it.bind === name)\n          if (item) {\n            onCameraTransition(item)\n          }\n        }\n      }\n    },\n    onClickLeft: (object, _intersct) => {\n      dialog.select = []\n      dialog.show = false\n      if (object && object.data) {\n        onClickLeft(object)\n      }\n    },\n    onClickGround: (_object, intersct) => {\n      scene.mouseClickGround(intersct)\n    },\n    onHoverAnchor: (object, style) => {\n      const isShow = !!object && object.object._isAnchor_\n      tipOpts.show = isShow\n      if (isShow) {\n        tipOpts.style.top = style.top\n        tipOpts.style.left = style.left\n        const data = object.object.data\n        tipOpts.msg = `\n          <p>${data.name}</p>\n          <p>类型：${data.type}</p>\n          <p>绑定：${data.bind || '无'}</p>\n        `\n      }\n    },\n    animateCall: () => {\n      // 弹窗位置\n      if (dialog.show && dialog.select && !!dialog.select.length) {\n        // 设备弹窗信息\n        const object = dialog.select[0]\n        updateDialogPosition(object)\n      }\n    }\n  })\n  scene.run()\n\n  useResize(scene).resize()\n  initPage()\n})\n\nconst onClickLeft = object => {\n  const data = object.data\n  switch (data?.type) {\n    case ANCHOR_POS: // 定位\n      scene.cameraTransition(object)\n      break\n    case ANCHOR_TARGET: // 锚点\n      dialog.select = [object]\n      dialogShowData()\n      break\n    case OPEN_DOOR: // 开门-90° 旋转开门\n      scene.openTheDoor(object)\n      break\n    case LIGHT_SWITCH: // 开关灯\n      scene.lightSwitch(object)\n      break\n  }\n}\n\nconst initPage = () => {\n  load()\n  backgroundLoad(scene, pageOpts.skyCode as any)\n\n  onListen(scene)\n}\n\n// 加载\nconst modelConfigList = ref<ObjectItem[]>([])\n// 定位点位列表\nconst cameraPositionList = computed(() =>\n  modelConfigList.value.filter(it => it.type === ANCHOR_POS)\n)\nconst load = () => {\n  loadModels(pageOpts.models, () => {\n    request.getConfig().then(async res => {\n      let json: any = {}\n      if (res.ConfigJson instanceof Object) {\n        json = res.ConfigJson\n      } else if (typeof res.ConfigJson == 'string') {\n        try {\n          json = JSON.parse(res.ConfigJson)\n        } catch (er) {}\n      }\n      modelConfigList.value = res.JsonList\n\n      const names = cameraPositionList.value.filter(it => it.bind).map(it => it.bind || '')\n      scene?.setDblclickModelName(names)\n\n      pageOpts.cruise.points = json.cruise || []\n      pageOpts.roamPoints = json.roamPoints || []\n      Object.keys(json).forEach(key => {\n        pageOpts.config && (pageOpts.config[key] = json[key])\n      })\n      await assemblyScenario()\n      scene?.addWater('水流')\n      createRoblt()\n      createCharacter()\n      deviceUpdate()\n    })\n  })\n}\n\n// 组装场景\nconst assemblyScenario = async () => {\n  // 加载进度 100\n  progress.percentage = 100\n  progress.show = false\n\n  // 清除\n  scene.clearBuilding()\n\n  await nextTick()\n  await initModels(modelConfigList.value, loopLoadObject)\n\n  // 漫游\n  scene.setRoamPoint(pageOpts.roamPoints)\n  // 巡航\n  scene.setCruisePoint(pageOpts.cruise.points)\n\n  const to = scene.getAnimTargetPos(pageOpts.config || {})\n  // 入场动画\n  // @ts-ignore\n  Utils.cameraInSceneAnimate(scene.camera, to, scene.controls.target).then(() => {\n    scene.controlSave()\n    setTimeout(() => {\n      // 关灯\n      scene.closeLightGroup()\n    }, 100)\n  })\n}\n\n// 循环加载对象\nconst loopLoadObject = async (item: ObjectItem) => {\n  if (!item) return\n  const { type } = item\n  // 隐藏机位锚点\n  if (type === ANCHOR_POS) return\n\n  const obj = getModel(type)\n  if (!obj) {\n    // 点位\n    if (type === pageOpts.dotKey) {\n      createDotObject(item)\n    }\n    return\n  }\n\n  const { anchorType = [], animationModelType = [], floorModelType = [] } = pageOpts\n\n  // 深克隆\n  let model = Utils.modelDeepClone(obj)\n  const { position: POS, scale: SCA, rotation: ROT } = Utils.get_P_S_R_param(model, item)\n  const [x, y, z] = POS\n\n  // 缩放\n  model.scale.set(...SCA)\n\n  // 摆放位置\n  model.position.set(x, y, z)\n  // 转换方位\n  model.rotation.set(...ROT)\n\n  model._isBuilding_ = true\n  model.data = item\n\n  // 机房隐藏\n  // model.visible = type !== MACHINE_ROOM\n\n  // 动画\n  if (animationModelType.includes(type)) {\n    scene.addModelAnimate(model, obj.animations, type !== MACHINE_ROOM, 1)\n  }\n\n  // 记录备用坐标(更随标记)\n  if (item.followMark || item.mark) {\n    model._position_ = { x, y, z }\n  }\n\n  // 锚点\n  if (anchorType.includes(type)) {\n    model._isAnchor_ = true\n\n    scene.addAnchor(model)\n  }\n  // 聚光灯\n  else if (model.isSpotLight) {\n    scene.addLight(item, model, true)\n  }\n  // 楼层\n  else if (floorModelType.includes(type)) {\n    // 原始点位 备用\n    model._position_ = { x, y, z }\n    model._isFloor_ = true\n    scene.addFloor(model)\n  } else {\n    scene.addBuilding(model)\n  }\n\n  return Promise.resolve()\n}\n\n// 更新点位隐现\nconst updateDotVisible = (target: ThreeModelItem) => {\n  const item = target.data as ObjectItem\n  if (typeof dotUpdateObjectCall === 'function') {\n    const res = dotUpdateObjectCall(item, scene.buildingGroup)\n    if (typeof res === 'object') {\n      Object.keys(res).forEach(key => {\n        item[key] = res[key]\n      })\n    }\n  } else {\n    console.warn(new Error('未传人点位更新对象回调方法 dotUpdateObjectCall'))\n  }\n\n  target.visible = item.show || !pageOpts.dotShowStrict\n  const dom = target.element?.getElementsByClassName('inner')[0] as HTMLElement\n  if (dom) {\n    const { size, color } = item.font || {}\n    if (size != void 0) {\n      dom.style.fontSize = typeof size === 'string' ? size : size + 'px'\n    }\n    if (color != void 0) {\n      dom.style.color = color\n    }\n    dom.textContent = `${item.value || 0}${item.unit}`\n  }\n}\n\n// 创建 dot 点位\nconst createDotObject = item => {\n  updateDotVisible(\n    scene.addDot(item, (_e, label) => {\n      dialog.select = [label]\n      dialogShowData()\n      scene.cameraLookatMoveTo(item.position).then(() => {})\n    })\n  )\n}\n\n// 更新 dialog 坐标\nconst updateDialogPosition = object => {\n  const dom = containerRef.value\n  const pos = Utils.getPlanePosition(dom, object, scene.camera as any)\n  dialog.position = pos\n  if (dialog.style) {\n    dialog.style.left = pos.left + 'px'\n    dialog.style.top = pos.top + 'px'\n  }\n  return pos\n}\n\n// 弹窗展示数据\nconst dialogShowData = () => {\n  if (!dialog.select) return\n  const object = dialog.select[0]\n  const data = object.data\n  dialog.data = data as Partial<ObjectItem>\n  dialog.title = data?.name || ''\n  dialog.list = [\n    { name: '属性 1', value: (Math.random() * 100).toFixed(2), unit: '%' },\n    { name: '属性 2', value: (Math.random() * 100).toFixed(2), unit: '%' }\n  ]\n  dialog.show = true\n}\n\n// 更新\nconst updateObject = () => {\n  scene.getAll().forEach((el: any, _i) => {\n    if (!el.data) return\n\n    const data = el.data\n    // 数据参数\n    let type = data.type\n\n    // 点位\n    if (type === pageOpts.dotKey) {\n      updateDotVisible(el)\n      return\n    }\n  })\n\n  deviceUpdate()\n}\n\nconst deviceUpdate = () => {\n  // 机房\n  const room = scene.animateModels.find(it => it.data && it.data.type === MACHINE_ROOM)\n  if (room && room.__action__) {\n    Object.keys(room.__action__).forEach(key => {\n      const obj = room.__action__[key]\n      const isRun = Math.random() > 0.5\n      if (isRun) {\n        if (obj.isRunning()) {\n          obj.paused = true\n        } else {\n          obj.play()\n          obj.paused = false\n        }\n      } else {\n        obj.paused = true\n      }\n    })\n  }\n}\n\n// 创建机器人\nlet robotObj: any\nconst createRoblt = () => {\n  robotObj = getModel(ROBOT)\n  robotObj.position.z = CRUISE_POINT_UP\n  robotObj.rotation.z = Math.PI * 0.5\n  scene.addObject(robotObj)\n}\n\n// 创建人物\nconst createCharacter = () => {\n  const obj = getModel(CHARACTER)\n  obj.traverse(el => {\n    if (el.isMesh) {\n      el.castShadow = true\n    }\n  })\n  const move = {\n    x: -65.8,\n    y: -34.8,\n    z: 22.3\n  }\n  // move.x = -1.6\n  // move.y = 27.5\n  // move.z = 127.8\n\n  // 手臂问题，暂隐藏\n  const l = obj.getObjectByName('HandL')\n  const r = obj.getObjectByName('HandR')\n  l.visible = false\n  r.visible = false\n\n  obj.scale.setScalar(2)\n\n  scene.addCharacter(obj, move)\n}\n\n// 相机转场\nconst onCameraTransition = item => {\n  scene.cameraTransition({\n    position: item.position,\n    data: item\n  })\n}\n</script>\n\n<style lang=\"scss\" module>\n@import './style.scss';\n</style>\n","import { StationThreeScene } from './methods'\nimport Emitter from './emitter'\n\nexport const onListen = (scene: InstanceType<typeof StationThreeScene>) => {\n  // 漫游\n  Emitter.on('CAMERA:ROAM', () => scene?.toggleRoam())\n  // 巡航\n  Emitter.on('CAMERA:CRUISE', () => scene?.toggleCruise())\n  // 重置视角\n  Emitter.on('CAMERA:RESET', () => scene?.controlReset())\n  // 第一人称\n  Emitter.on('CAMERA:FIRST', () => scene?.toggleSight(1))\n  // 第三人称\n  Emitter.on('CAMERA:THREE', () => scene?.toggleSight(3))\n  // 机房\n  Emitter.on('CAMERA:MACHINEROOM', () => scene?.toCoolMachineRoom())\n\n  // 人物加速\n  Emitter.on('PERSON:ADD', () => scene?.characterAccelerate())\n  // 减速\n  Emitter.on('PERSON:SUB', () => scene?.characterAccelerate(-1))\n  // 人物动作\n  Emitter.on('PERSON:ACTION', () => scene?.changeCharacterAction())\n\n  // 场景坐标\n  Emitter.on('SCENE:POS', () => scene?.getPosition())\n}\n","import { Axios, Api } from '@/config'\n\nexport const getConfig = () => {\n  return Axios.get(Api.d3.station)\n}\n"],"names":["items","code","desc","ANCHOR_POS","ANCHOR_TARGET","MAIN_SCENE","MACHINE_ROOM","ROBOT","CHARACTER","FLOOR","OPEN_DOOR","LIGHT_SWITCH","eventNames","Emitter","constructor","__publicField","this","reduce","obj","key","Set","on","eventName","listtener","listteners","forEach","it","toString","delete","add","emit","args","DEFAULTCONFIG","Hooks","ThreeScene.Hooks","Utils","ThreeScene.Utils","raycaster","pointer","update","raycasterUpdate","style","useRaycaster","initCSS2DRender","createCSS2DDom","useCSS2D","createDiffusion","updateDiffusion","useDiffusion","createMove","moveAnimate","useMoveAnimate","createFence","fenceAnimate","useFence","createRoam","executeRoam","pause","roamPause","play","roamPlay","getStatus","getRoamStatus","useRoam","floorAnimate","useFloor","keyboardPressed","destroyEvent","insertEvent","useKeyboardState","checkCollide","useCollide","virtualization","closeVirtualization","useModelLoader","sightMap","StationThreeScene","ThreeScene.Scene","options","extend","super","css2DRender","container","domElement","className","mouseClickDiffusion","rotation","x","Math","PI","position","y","visible","addObject","createClock","currentSight","historyTarget","THREE.Vector3","historyCameraPosition","animateModels","bindEvent","addBuildingGroup","addFloorGroup","addAnchorGroup","addDotGroup","addLightGroup","group","THREE.Group","name","buildingGroup","clearBuilding","disposeObj","clearAnchor","clearDot","clearFloor","addBuilding","anchorGroup","addAnchor","z","createSpriteAnimate","dotGroup","addDot","item","clickBack","pos","size","color","font","label","onClick","data","_position_","_a","floorGroup","addFloor","lightGroup","clearLightGroup","closeLightGroup","isOpen","children","el","isSpotLight","addLight","hasHelper","to","target","set","helper","THREE.SpotLightHelper","lightSwitch","object","light","_b","getObjectsByProperty","bind","addWater","waterName","scene","getObjectByName","console","log","water","model","waterGeometry","geometry","THREE.PlaneGeometry","Water","textureWidth","textureHeight","waterNormals","THREE.TextureLoader","load","texture","wrapS","wrapT","THREE.RepeatWrapping","sunDirection","sunColor","waterColor","distortionScale","material","uniforms","value","createWater","v","getWorldPosition","copy","remove","addCharacter","point","character","animations","mixer","THREE.AnimationMixer","actions","i","length","clip","action","clipAction","runging","extra","keys","map","toUpperCase","charCodeAt","e","__runing__","includes","keyCode","isCharacterSight","characterAccelerate","stop","changeCharacterAction","all","index","findIndex","ElMessage","success","message","grouping","toggleSight","type","clearCoolMachineRoomFocus","judgeCruise","sight","isCharacter","controls","maxDistance","enablePan","toggleCharacterView","up","characterSightHeight","clone","camera","lookAt","clearCharacterSight","dom","parentNode","querySelector","display","speed","moveFactor","setControlTarget","mouseClickGround","intersct","Promise","reject","runing","cruise","resolve","checkCharacterCollide","intersects","distance","collisionSpace","warning","getAnimTargetPos","config","_to","_target","addModelAnimate","timeScale","ob","cur","__action__","__mixer__","push","cameraTransition","isCameraMove","dis","distanceTo","cameraLinkageControlsAnimate","addFence","fence","cameraLookatMoveTo","cameraLookatAnimate","then","toggleCruise","close","isSilent","controlReset","setRoamPoint","points","roamPoints","toggleRoam","tension","floorExpand","list","getFloorByGroup","uuid","mark","getFlowMark","getMachineRoomStatus","room","isFocus","__isFocus__","toCoolMachineRoom","toggleCoolMachineRoomFocus","wireframe","hidden","opacity","filter","openTheDoor","dobj","__open__","TWEEN.Tween","delay","start","modelAnimate","render","animateCall","restoreAnchorMaterial","delta","clock","getDelta","steep","angle","isS","dir","getWorldDirection","multiplyScalar","newPos","ds","keyboardToTotation","mds","setY","setDblclickModelName","names","dblclickModelName","onDblclick","scale","setFromCamera","objects","concat","interscts","intersectObjects","findParentGroup","onPointerMove","checkIntersectObjects","onPointerUp","isClick","timeStamp","tsp","button","onClickRight","__ground__","cursor","isClickGround","groundMeshName","some","t","indexOf","_c","onClickGround","_d","onClickLeft","_e","hoverAnchor","onHoverAnchor","_isAnchor_","mat","__mat_color__","THREE.Color","__change_color__","traverse","isSprite","filterNames","_find","_isBuilding_","parent","getAll","followMark","resize","width","height","setSize","dispose","dotUpdateObjectCall","_group","val","random","show","Number","toFixed","substring","pageOpts","reactive","animateBack","cruiseCurve","robotObj","offset","getOffsetPoint","getPointAt","ts","atan2","devEnv","baseUrl","bgColor","skyCode","env","dotKey","dotShowStrict","anchorType","animationModelType","floorModelType","models","url","range","mapUrl","intensity","penumbra","castShadow","auto","repeat","segment","mapSpeed","tipOpts","left","top","msg","backgroundLoad","useBackground","progress","loadModels","getModel","initModels","indexDB","cache","dbName","tbName","version","dialog","useDialog","containerRef","ref","enableDamping","dampingFactor","maxPolarAngle","screenSpacePanning","near","fov","directionalLight","onMounted","_isFloor_","cameraPositionList","find","onCameraTransition","_intersct","select","_object","isShow","updateDialogPosition","run","useResize","initPage","getPosition","onListen","modelConfigList","computed","Axios","get","Api","d3","station","async","res","json","ConfigJson","Object","JSON","parse","er","JsonList","assemblyScenario","percentage","nextTick","loopLoadObject","setCruisePoint","nA","cameraInSceneAnimate","controlSave","setTimeout","createDotObject","modelDeepClone","POS","SCA","ROT","get_P_S_R_param","updateDotVisible","element","getElementsByClassName","fontSize","textContent","unit","getPlanePosition","dialogShowData","title","deviceUpdate","isRunning","paused","createRoblt","createCharacter","isMesh","l","r","setScalar","_i"],"mappings":"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"}