const e=e=>((e,t)=>Object.prototype.toString.call(t)===`[object ${e}]`)("Object",e),t=e=>e&&("object"==typeof HTMLElement?e instanceof HTMLElement:e&&"object"==typeof e&&1===e.nodeType&&"string"==typeof e.nodeName),r=(t,n=new Map)=>{if(null!=t&&e(t)){let o=n.get(t);if(o)return o;const c=Array.isArray(t);let a=c?[]:{};return o=n.set(t,a),c?t.forEach(((e,t)=>{a[t]=r(e,o)})):Object.keys(t).forEach((n=>{e(a[n])?a[n]=r(t[n],o):a[n]=t[n]})),a}return t},n=(t,o)=>{t=r(t);for(let r in o)r in t&&e(o[r])&&e(t[r])?t[r]=n(t[r],o[r]):t[r]=o[r];return t};export{n as d,t as i};
