{"version":3,"file":"index-0b4dd14a.js","sources":["../../../code/src/pages/media/video-auto-play/index.vue"],"sourcesContent":["<template>\n  <div class=\"page\">\n\n    <div class=\"box\">\n      <div class=\"modal\" v-show=\"!play\">\n        <el-button type=\"primary\" @click=\"onPlay\">打开声音</el-button>\n      </div>\n      <video src=\"/video/005.mp4\" ref=\"video\" loop controls></video>\n    </div>\n\n    <div class=\"bg\"></div>\n\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n\nconst play = ref( false )\nconst video = ref()\n\nconst initPage = () => {\n  playVideo()\n\n  const ob = new IntersectionObserver( list => {\n    const el: any = list[ 0 ]\n    if ( el.isIntersecting ) {\n      playVideo()\n    } else {\n      el.target.pause()\n    }\n  }, {\n    root: null,\n    // rootMargin: 0,\n    threshold: .9\n  } )\n\n  ob.observe( video.value )\n}\n\nconst playVideo = () => {\n  const $video = video.value\n  // 静音播放\n  $video.muted = true\n  $video.play()\n\n  // 音频上下文\n  const ctx = new AudioContext()\n  const canAutoPlay = ctx.state === 'running'\n  ctx.close()\n  console.log(ctx)\n  if ( canAutoPlay ) {\n    play.value = true\n    $video.muted = false\n  } else {\n    play.value = false\n  }\n}\n\nconst onPlay = () => {\n  playVideo()\n}\n\nonMounted( () => {\n  initPage()\n} )\n</script>\n  \n<style scoped>\n.box {\n  position: relative;\n}\nvideo {\n  width: 100%;\n}\n\n.modal {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, .5);\n}\n\n.bg {\n  width: 100%;\n  height: 2000px;\n  background-image: linear-gradient( 45deg, green, Purple, orange );\n  background-size: 400%;\n  animation: linearBg 10s linear infinite;\n}\n@keyframes linearBg {\n  50% {\n    background-position: 50%;\n  }\n}\n</style>"],"names":["play","ref","video","playVideo","$video","value","muted","ctx","AudioContext","canAutoPlay","state","close","console","log","onPlay","onMounted","IntersectionObserver","list","el","isIntersecting","target","pause","root","threshold","observe"],"mappings":"iSAiBA,MAAAA,EAAAC,GAAA,GACAC,EAAAD,IAqBAE,EAAA,KACE,MAAAC,EAAAF,EAAAG,MAEAD,EAAAE,OAAA,EACAF,EAAAJ,OAGA,MAAAO,EAAA,IAAAC,aACAC,EAAA,YAAAF,EAAAG,MACAH,EAAAI,QACAC,QAAAC,IAAAN,GACAE,GACET,EAAAK,OAAA,EACAD,EAAAE,OAAA,GAEAN,EAAAK,OAAA,CAAa,EAIjBS,EAAA,iBAIAC,GAAA,SAvCE,IAAAC,sBAAAC,IACE,MAAAC,EAAAD,EAAA,GACAC,EAAAC,mBAGED,EAAAE,OAAAC,OAAgB,GAClB,CACCC,KAAA,KACKC,UAAA,KAKRC,QAAAtB,EAAAG"}