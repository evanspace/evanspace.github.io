var e=Object.defineProperty,t=(t,i,s)=>(((t,i,s)=>{i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s})(t,"symbol"!=typeof i?i+"":i,s),s);import{bn as i,eB as s,df as a,dB as o,d0 as r,d2 as n,bg as l,dA as c,eC as p,bq as h,eD as d,ew as u,eE as y,be as w,cU as g,dg as v,bm as m,bk as S,ex as B,e as f,i as A,l as T,o as x,g as z,h as C}from"./vendor-f2ff441f.js";import{m as b,u as V,s as P}from"./scene-resize-4bdd5120.js";import"./index-f809552b.js";const E=Object.freeze({CUBE:1,SPHERE:2}),D=["in vec3  uColor;","in float uOpacity;","in float uSize;","in float uAngle;","in float uVisible;","varying vec4  vColor;","varying float vAngle;","void main() {","  if ( uVisible > 0.5 )","    vColor = vec4( uColor, uOpacity );","  else","    vColor = vec4(0.0, 0.0, 0.0, 0.0);","  vAngle = uAngle;","  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","  gl_PointSize = uSize * ( 300.0 / length( mvPosition.xyz ) );","  gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),M=["uniform sampler2D uTx;","varying vec4 vColor;","varying float vAngle;","void main() {","  gl_FragColor = vColor;","  float c = cos(vAngle);","  float s = sin(vAngle);","  vec2 rotatedUV = vec2(c * (gl_PointCoord.x - 0.5) + s * (gl_PointCoord.y - 0.5) + 0.5,","  c * (gl_PointCoord.y - 0.5) - s * (gl_PointCoord.x - 0.5) + 0.5);","  vec4 rotatedTexture = texture2D( uTx,  rotatedUV );","  gl_FragColor = gl_FragColor * rotatedTexture;","}"].join("\n");class U{constructor(e,i){t(this,"times"),t(this,"values"),this.times=e||[],this.values=i||[]}lerp(e){for(var t=0,s=this.times.length;t<s&&e>this.times[t];)t++;if(0==t)return this.values[0];if(t==s)return this.values[s-1];var a=(e-this.times[t-1])/(this.times[t]-this.times[t-1]);return this.values[0]instanceof i?this.values[t-1].clone().lerp(this.values[t],a):this.values[t-1]+a*(this.values[t]-this.values[t-1])}}class k extends p{constructor(e){super(),t(this,"color",new r(16777215)),t(this,"map",null),t(this,"size",1),t(this,"sizeAttenuation",!0),t(this,"vertexColors",!1),t(this,"fog",!0),this.setValues(e)}}class G extends c{constructor(e,i){super(),t(this,"geometry"),t(this,"material"),t(this,"sortParticles",!1),t(this,"frustumCulled",!1),this.geometry=void 0!==e?e:new a,this.material=void 0!==i?i:new k({color:16777215*Math.random()})}clone(e){return void 0===e&&(e=new G(this.geometry,this.material)),e.sortParticles=this.sortParticles,super.clone(e),e}}class R{constructor(){t(this,"position",new i),t(this,"velocity",new i),t(this,"acceleration",new i),t(this,"angle",0),t(this,"angleVelocity",0),t(this,"angleAcceleration",0),t(this,"size",16),t(this,"color",new r),t(this,"opacity",1),t(this,"age",0),t(this,"alive",0),t(this,"sizeTween",new U),t(this,"colorTween",new U),t(this,"opacityTween",new U)}update(e){if(this.position.add(this.velocity.clone().multiplyScalar(e)),this.velocity.add(this.acceleration.clone().multiplyScalar(e)),this.angle+=.01745329251*this.angleVelocity*e,this.angleVelocity+=.01745329251*this.angleAcceleration*e,this.age+=e,this.sizeTween.times.length>0&&(this.size=this.sizeTween.lerp(this.age)),this.colorTween.times.length>0){var t=this.colorTween.lerp(this.age);this.color=(new r).setHSL(t.x,t.y,t.z)}this.opacityTween.times.length>0&&(this.opacity=this.opacityTween.lerp(this.age))}}class O{constructor(){t(this,"positionStyle",E.CUBE),t(this,"positionBase",new i),t(this,"positionSpread",new i),t(this,"positionRadius",0),t(this,"velocityStyle",E.CUBE),t(this,"velocityBase",new i),t(this,"velocitySpread",new i),t(this,"speedBase",0),t(this,"speedSpread",0),t(this,"accelerationBase",new i),t(this,"accelerationSpread",new i),t(this,"angleBase",0),t(this,"angleSpread",0),t(this,"angleVelocityBase",0),t(this,"angleVelocitySpread",0),t(this,"angleAccelerationBase",0),t(this,"angleAccelerationSpread",0),t(this,"sizeBase",0),t(this,"sizeSpread",0),t(this,"sizeTween",new U),t(this,"colorBase",new i(0,1,.5)),t(this,"colorSpread",new i(0,0,0)),t(this,"colorTween",new U),t(this,"opacityBase",1),t(this,"opacitySpread",0),t(this,"opacityTween",new U),t(this,"blendStyle",s),t(this,"particleArray",[]),t(this,"particlesPerSecond",100),t(this,"particleDeathAge",1),t(this,"emitterAge",0),t(this,"emitterAlive",!0),t(this,"emitterDeathAge",60),t(this,"particleCount",0),t(this,"particleGeometry",new a),t(this,"particleTexture",null),t(this,"particleMaterial",new o({uniforms:{uTx:{value:this.particleTexture},uVisible:{value:[]},uAngle:{value:[]},uSize:{value:[]},uColor:{value:[]},uOpacity:{value:[]}},vertexShader:D,fragmentShader:M,transparent:!0,alphaTest:.5,blending:s,depthTest:!0})),t(this,"particleMesh",new G),this.particleCount=this.particlesPerSecond*Math.min(this.particleDeathAge,this.emitterDeathAge)}randomValue(e,t){return e+t*(Math.random()-.5)}randomVector3(e,t){var s=new i(Math.random()-.5,Math.random()-.5,Math.random()-.5);return(new i).addVectors(e,(new i).multiplyVectors(t,s))}createParticle(){var e=new R;if(this.positionStyle==E.CUBE)e.position=this.randomVector3(this.positionBase,this.positionSpread);else if(this.positionStyle==E.SPHERE){var t=2*Math.random()-1,s=6.2832*Math.random(),a=Math.sqrt(1-t*t),o=new i(a*Math.cos(s),a*Math.sin(s),t);e.position=(new i).addVectors(this.positionBase,o.multiplyScalar(this.positionRadius))}if(this.velocityStyle==E.CUBE)e.velocity=this.randomVector3(this.velocityBase,this.velocitySpread);else if(this.velocityStyle==E.SPHERE){var n=(new i).subVectors(e.position,this.positionBase),l=this.randomValue(this.speedBase,this.speedSpread);e.velocity=n.normalize().multiplyScalar(l)}e.acceleration=this.randomVector3(this.accelerationBase,this.accelerationSpread),e.angle=this.randomValue(this.angleBase,this.angleSpread),e.angleVelocity=this.randomValue(this.angleVelocityBase,this.angleVelocitySpread),e.angleAcceleration=this.randomValue(this.angleAccelerationBase,this.angleAccelerationSpread),e.size=this.randomValue(this.sizeBase,this.sizeSpread);var c=this.randomVector3(this.colorBase,this.colorSpread);return e.color=(new r).setHSL(c.x,c.y,c.z),e.opacity=this.randomValue(this.opacityBase,this.opacitySpread),e.age=0,e.alive=0,e}setValues(e){if(console.log("%cconfig","color: red",e),void 0!==e){this.sizeTween=new U,this.colorTween=new U,this.opacityTween=new U;for(let t in e)this[t]=e[t];R.prototype.sizeTween=this.sizeTween,R.prototype.colorTween=this.colorTween,R.prototype.opacityTween=this.opacityTween,this.particleArray=[],this.emitterAge=0,this.emitterAlive=!0,this.particleCount=this.particlesPerSecond*Math.min(this.particleDeathAge,this.emitterDeathAge),this.particleGeometry=new a,this.particleMaterial=new o({uniforms:{uTx:{value:this.particleTexture},uVisible:{value:[]},uAngle:{value:[]},uSize:{value:[]},uColor:{value:[]},uOpacity:{value:[]}},vertexShader:D,fragmentShader:M,transparent:!0,alphaTest:.5,blending:s,depthTest:!0})}}initialize(){const e=[],t=[],i=[],a=[],o=[],r=[];for(var c=0;c<this.particleCount;c++){const s=this.createParticle();this.particleArray[c]=s,t.push(s.alive);const n=s.color;i.push(n.r,n.g,n.b),a.push(s.opacity),o.push(s.size),r.push(s.angle),e.push(s.position);const l=this.particleMaterial.uniforms;l&&(l.uVisible.value[c]=s.alive,l.uColor.value[c]=s.color,l.uOpacity.value[c]=s.opacity,l.uSize.value[c]=s.size,l.uAngle.value[c]=s.angle)}this.particleGeometry.setFromPoints(e),this.particleGeometry.setAttribute("uVisible",new n(t,1)),this.particleGeometry.setAttribute("uColor",new n(i,3)),this.particleGeometry.setAttribute("uOpacity",new n(a,1)),this.particleGeometry.setAttribute("uSize",new n(o,1)),this.particleGeometry.setAttribute("uAngle",new n(r,1)),this.particleMaterial.blending=this.blendStyle,this.blendStyle!=s&&(this.particleMaterial.depthTest=!1),this.particleMesh=new l(this.particleGeometry,this.particleMaterial),this.particleMesh.dynamic=!0,this.particleMesh.sortParticles=!0}update(e){const t=[];if(!this.particleArray.length)return;const i=this.particleGeometry.attributes.uVisible,s=this.particleGeometry.attributes.uOpacity,a=this.particleGeometry.attributes.uSize,o=this.particleGeometry.attributes.uAngle,r=this.particleGeometry.attributes.uColor;for(let n=0;n<this.particleCount;n++){const l=this.particleArray[n];if(l.alive){l.update(e),l.age>this.particleDeathAge&&(l.alive=0,t.push(n)),i.setX(n,l.alive),i.needsUpdate=!0,s.setX(n,l.opacity),s.needsUpdate=!0,a.setX(n,l.size),a.needsUpdate=!0,o.setX(n,l.angle),o.needsUpdate=!0;const c=l.color;r.setXYZ(n,c.r,c.g,c.b),r.needsUpdate=!0;const p=this.particleMaterial.uniforms;p&&(p.uVisible.value[n]=l.alive,p.uColor.value[n]=l.color,p.uOpacity.value[n]=l.opacity,p.uSize.value[n]=l.size,p.uAngle.value[n]=l.angle)}}if(this.emitterAlive){if(this.emitterAge<this.particleDeathAge){const t=Math.round(this.particlesPerSecond*(this.emitterAge+0));let i=Math.round(this.particlesPerSecond*(this.emitterAge+e));i>this.particleCount&&(i=this.particleCount);for(let e=t;e<i;e++)this.particleArray[e].alive=1}for(let e=0;e<t.length;e++){const i=t[e],s=this.createParticle();s.alive=1,this.particleArray[i]=s;const a=this.particleGeometry.attributes.position,{x:o,y:r,z:n}=s.position;a.setXYZ(i,o,r,n),a.needsUpdate=!0}this.emitterAge+=e,this.emitterAge>this.emitterDeathAge&&(this.emitterAlive=!1)}}destroy(e){e.remove(this.particleMesh)}}const _=new h,j={fountain:{positionStyle:E.CUBE,positionBase:new i(0,5,0),positionSpread:new i(10,0,10),velocityStyle:E.CUBE,velocityBase:new i(0,160,0),velocitySpread:new i(100,20,100),accelerationBase:new i(0,-100,0),particleTexture:_.load("/oss/textures/effect/star.png"),angleBase:0,angleSpread:180,angleVelocityBase:0,angleVelocitySpread:1440,sizeTween:new U([0,1],[1,20]),opacityTween:new U([2,3],[1,0]),colorTween:new U([.5,2],[new i(0,1,.5),new i(.8,1,.5)]),particlesPerSecond:200,particleDeathAge:3,emitterDeathAge:60},fireball:{positionStyle:E.SPHERE,positionBase:new i(0,50,0),positionRadius:2,velocityStyle:E.SPHERE,speedBase:40,speedSpread:8,particleTexture:_.load("/oss/textures/effect/smokeparticle.png"),sizeTween:new U([0,.1],[1,150]),opacityTween:new U([.7,1],[1,0]),colorBase:new i(.02,1,.4),blendStyle:d,particlesPerSecond:60,particleDeathAge:1.5,emitterDeathAge:60},smoke:{positionStyle:E.CUBE,positionBase:new i(0,0,0),positionSpread:new i(10,0,10),velocityStyle:E.CUBE,velocityBase:new i(0,150,0),velocitySpread:new i(80,50,80),accelerationBase:new i(0,-10,0),particleTexture:_.load("/oss/textures/effect/smokeparticle.png"),angleBase:0,angleSpread:720,angleVelocityBase:0,angleVelocitySpread:720,sizeTween:new U([0,1],[32,128]),opacityTween:new U([.8,2],[.5,0]),colorTween:new U([.4,1],[new i(0,0,.2),new i(0,0,.5)]),particlesPerSecond:200,particleDeathAge:2,emitterDeathAge:60},clouds:{positionStyle:E.CUBE,positionBase:new i(-100,100,0),positionSpread:new i(0,50,60),velocityStyle:E.CUBE,velocityBase:new i(40,0,0),velocitySpread:new i(20,0,0),particleTexture:_.load("/oss/textures/effect/smokeparticle.png"),sizeBase:80,sizeSpread:100,colorBase:new i(0,0,1),opacityTween:new U([0,1,4,5],[0,1,1,0]),particlesPerSecond:50,particleDeathAge:10,emitterDeathAge:60},snow:{positionStyle:E.CUBE,positionBase:new i(0,200,0),positionSpread:new i(500,0,500),velocityStyle:E.CUBE,velocityBase:new i(0,-60,0),velocitySpread:new i(50,20,50),accelerationBase:new i(0,-10,0),angleBase:0,angleSpread:720,angleVelocityBase:0,angleVelocitySpread:60,particleTexture:_.load("/oss/textures/effect/snowflake.png"),sizeTween:new U([0,.25],[1,10]),colorBase:new i(.66,1,.9),opacityTween:new U([2,3],[.8,0]),particlesPerSecond:200,particleDeathAge:4,emitterDeathAge:60},rain:{positionStyle:E.CUBE,positionBase:new i(0,200,0),positionSpread:new i(600,0,600),velocityStyle:E.CUBE,velocityBase:new i(0,-400,0),velocitySpread:new i(10,50,10),accelerationBase:new i(0,-10,0),particleTexture:_.load("/oss/textures/effect/raindrop2flip.png"),sizeBase:8,sizeSpread:4,colorBase:new i(.66,1,.7),colorSpread:new i(0,0,.2),opacityBase:.6,particlesPerSecond:1e3,particleDeathAge:1,emitterDeathAge:60},starfield:{positionStyle:E.CUBE,positionBase:new i(0,200,0),positionSpread:new i(600,400,600),velocityStyle:E.CUBE,velocityBase:new i(0,0,0),velocitySpread:new i(.5,.5,.5),angleBase:0,angleSpread:720,angleVelocityBase:0,angleVelocitySpread:4,particleTexture:_.load("/oss/textures/effect/spikey.png"),sizeBase:10,sizeSpread:2,colorBase:new i(.15,1,.9),colorSpread:new i(0,0,.2),opacityBase:1,particlesPerSecond:2e4,particleDeathAge:60,emitterDeathAge:.1},fireflies:{positionStyle:E.CUBE,positionBase:new i(0,100,0),positionSpread:new i(400,200,400),velocityStyle:E.CUBE,velocityBase:new i(0,0,0),velocitySpread:new i(60,20,60),particleTexture:_.load("/oss/textures/effect/spark.png"),sizeBase:30,sizeSpread:2,opacityTween:new U([0,1,1.1,2,2.1,3,3.1,4,4.1,5,5.1,6,6.1],[.2,.2,1,1,.2,.2,1,1,.2,.2,1,1,.2]),colorBase:new i(.3,1,.6),colorSpread:new i(.3,0,0),particlesPerSecond:20,particleDeathAge:6.1,emitterDeathAge:600},startunnel:{positionStyle:E.CUBE,positionBase:new i(0,0,0),positionSpread:new i(10,10,10),velocityStyle:E.CUBE,velocityBase:new i(0,100,200),velocitySpread:new i(40,40,80),angleBase:0,angleSpread:720,angleVelocityBase:10,angleVelocitySpread:0,particleTexture:_.load("/oss/textures/effect/spikey.png"),sizeBase:4,sizeSpread:2,colorBase:new i(.15,1,.8),opacityBase:1,blendStyle:d,particlesPerSecond:500,particleDeathAge:4,emitterDeathAge:60},firework:{positionStyle:E.SPHERE,positionBase:new i(0,100,0),positionRadius:10,velocityStyle:E.SPHERE,speedBase:90,speedSpread:10,accelerationBase:new i(0,-80,0),particleTexture:_.load("/oss/textures/effect/spark.png"),sizeTween:new U([.5,.7,1.3],[5,40,1]),opacityTween:new U([.2,.7,2.5],[.75,1,0]),colorTween:new U([.4,.8,1],[new i(0,1,1),new i(0,1,.6),new i(.8,1,.6)]),blendStyle:d,particlesPerSecond:3e3,particleDeathAge:2.5,emitterDeathAge:.2},candle:{positionStyle:E.SPHERE,positionBase:new i(0,50,0),positionRadius:2,velocityStyle:E.CUBE,velocityBase:new i(0,100,0),velocitySpread:new i(20,0,20),particleTexture:_.load("/oss/textures/effect/smokeparticle.png"),sizeTween:new U([0,.3,1.2],[20,150,1]),opacityTween:new U([.9,1.5],[1,0]),colorTween:new U([.5,1],[new i(.02,1,.5),new i(.05,1,0)]),blendStyle:d,particlesPerSecond:60,particleDeathAge:1.5,emitterDeathAge:60}},H=B,X=new h,F=H.uniform(.2);class N extends b{constructor(e){super(e),t(this,"engine"),this.addModel()}render(){this.renderer.renderAsync(this.scene,this.camera)}createRender(){return new u(this.options.render)}addModel(){const e=H.range(.1,1),t=H.range(new i(-4,15,4),new i(4,15,8)),s=H.time.add(5).mul(F),a=s.mul(e).mod(1),o=H.range(.3,2),r=H.range(.1,4),n=a.div(e),c=H.positionLocal.y.oneMinus().max(.9),p=H.texture(X.load("/oss/textures/effect/smokeparticle.png"),H.rotateUV(H.uv(),s.mul(r))).a.mul(n.oneMinus()),h=new y;h.colorNode=H.mix(H.color(16777215),H.color(15732480),n.mul(.5).min(.5)).mul(c),h.opacityNode=p,h.positionNode=t.mul(a),h.scaleNode=o.mul(a.max(.3)),h.depthWrite=!1,h.transparent=!0;const d=new l(new w(1,1),h);d.scale.setScalar(40),d.count=600,d.position.y=10,this.addObject(d)}addModel_(){const e=new O;e.setValues(j.rain),e.initialize(),this.engine=e,console.log(e),this.addObject(e.particleMesh);const t=new g(10,10,10);let i=new Array(8).fill(0).map((()=>[1,0,0,0,1,0,0,0,1])).flat(),s=new v(new Float32Array(i),3);t.setAttribute("color",s);const a=new l(t,new m({vertexColors:!0,side:S,wireframe:!1}));a.position.x=50,this.addObject(a)}modelAnimate(){var e;const t=null==(e=this.clock)?void 0:e.getDelta();this.engine&&this.engine.update(.5*t)}}const L={class:"three-page"},q=f({__name:"index",setup(e){P.useBackground();const t=A(),i={axes:{visible:!0},grid:{visible:!0},render:{logarithmicDepthBuffer:!1}};let s;return T((()=>{i.container=t.value,s=new N(i),s.run(),V(s).resize()})),(e,i)=>(x(),z("div",L,[C("div",{class:"h-100",ref_key:"containerRef",ref:t},null,512)]))}});export{q as default};
