{"version":3,"file":"index-d2953791.js","sources":["../../../code/src/pages/webgl/scene/park/data.ts","../../../code/src/pages/webgl/scene/park/config.ts","../../../code/src/pages/webgl/scene/park/methods.ts","../../../code/src/pages/webgl/scene/park/colors.ts","../../../code/src/pages/webgl/scene/park/index.vue","../../../code/src/pages/webgl/scene/park/request.ts"],"sourcesContent":["const base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nconst devEnv = import.meta.env.VITE_MODE !== 'production-'\n\nexport const ROBOT = 'ROBOT' // 机器人\nexport const CHARACTER = 'CHARACTER' // 人物、\nexport const GROUND = 'GROUND' // 地面\nexport const VIDEOPLAY = 'PARK_VIDEO' // 视频播放\nexport const OPEN_THE_DOOR = 'OPEN_THE_DOOR' // 开门\nexport const HALF_OPEN_THE_DOOR = 'HALF_OPEN_THE_DOOR' // 半开门-90 度开门\nexport const DOUBLE_OPEN_THE_DOOR = 'DOUBLE_OPEN_THE_DOOR' // 双开门\nexport const WAIT_LIFT = 'WAIT_LIFT' // 等电梯\nexport const SLIDING_DOOR = 'SLIDING_DOOR' // 推拉门\nexport const LIGHT_SWITCH = 'LIGHT_SWITCH' // 开关灯\n\n// 点位向上向量\nconst POINT_UP = 0.2\nexport const getPageOpts = animateBack => ({\n  devEnv,\n  baseUrl: base,\n  bgColor: '',\n  skyCode: '104',\n  env: '/oss/textures/hdr/3.hdr',\n\n  // dot 点位类型值\n  dotKey: 'DOT',\n  dotShowStrict: false,\n\n  // 颜色材质名称（需要改变颜色的网格名称）\n  colorMeshName: [],\n  // 楼层模块类型\n  floorModelType: ['FLOOR_COMMON'],\n  // 锚点模型类型列表（精灵类型）该类型未绑定点击事件函数将作为 dialog 弹窗事件处理\n  anchorType: [\n    'PARK_CAMERA',\n    'PARK_ROOM_INLET',\n    VIDEOPLAY,\n    OPEN_THE_DOOR,\n    HALF_OPEN_THE_DOOR,\n    DOUBLE_OPEN_THE_DOOR,\n    WAIT_LIFT,\n    SLIDING_DOOR,\n    LIGHT_SWITCH\n  ],\n  // 汽车类型，需要行驶\n  carType: ['car_tanker', 'car_goods', 'car_trailer', 'car_crane'],\n  // 动画模型类型\n  animationModelType: ['building_commercial_2'],\n\n  colors: {},\n  config: {},\n\n  cruise: {\n    visible: true,\n    auto: true,\n    // helper: true,\n    mapUrl: '/oss/textures/cruise/line2.png', // 1-18\n    repeat: [0.1, 1],\n    width: 2,\n    segment: 100,\n    tension: 0.1,\n    speed: 20,\n    mapSpeed: 0.01,\n    points: [\n      [-89.57, POINT_UP, 179.4],\n      [-52.28, POINT_UP, 179.4],\n      [-52.28, POINT_UP, 123.05],\n      [-4.43, POINT_UP, 123.05],\n      [-4.43, POINT_UP, 99.18],\n      [6.26, POINT_UP, 99.18],\n      [6.26, POINT_UP, 153.83],\n      [92.71, POINT_UP, 153.83],\n\n      [147.75, POINT_UP, 148.23],\n      [147.75, POINT_UP, 135.93],\n      [144.21, POINT_UP, 133.13],\n      [144.21, POINT_UP, 126.7],\n\n      [86.6, POINT_UP, 126.7],\n      [86.6, POINT_UP, 152.35],\n      [77.55, POINT_UP, 152.35],\n\n      [77.55, POINT_UP, -137.3],\n      // [59.33, POINT_UP, -137.3],\n      [3.34, POINT_UP, -137.3],\n\n      [3.34, POINT_UP, -52.04],\n      [-89.57, POINT_UP, -52.04]\n    ],\n    offset: 1.8,\n    animateBack: animateBack\n  },\n\n  models: [\n    {\n      key: 'SCENE',\n      name: '场景',\n      size: 14.7,\n      url: '/场景.glb'\n    },\n    {\n      key: GROUND,\n      name: '地面',\n      size: 4,\n      url: '/地面.glb'\n    },\n    {\n      key: 'PARKING_SPACE',\n      name: '停车位',\n      size: 0.06,\n      url: '/停车位.glb'\n    },\n\n    /////////////////////\n    {\n      key: 'building_1',\n      name: '楼栋1',\n      size: 1.2,\n      url: '/楼栋1.glb'\n    },\n    {\n      key: 'building_2',\n      name: '楼栋2',\n      size: 2,\n      url: '/楼栋2.glb'\n    },\n    {\n      key: 'building_3',\n      name: '楼栋3',\n      size: 1.6,\n      url: '/楼栋3.glb'\n    },\n    {\n      key: 'building_4',\n      name: '楼栋4',\n      size: 2.8,\n      url: '/楼栋4.glb'\n    },\n    {\n      key: 'building_5',\n      name: '楼栋5',\n      size: 1.6,\n      url: '/楼栋5.glb'\n    },\n    {\n      key: 'building_warehouse',\n      name: '仓库',\n      size: 0.7,\n      url: '/仓库.glb'\n    },\n\n    {\n      key: 'building_commercial_1',\n      name: '商业楼1',\n      size: 0.6,\n      url: '/商业楼1.glb'\n    },\n    {\n      key: 'building_commercial_2',\n      name: '商业楼2',\n      size: 14.5,\n      url: '/商业楼2.glb'\n    },\n    {\n      key: 'building_commercial_3',\n      name: '商业楼3',\n      size: 0.6,\n      url: '/商业楼3.glb'\n    },\n    {\n      key: 'building_commercial_4',\n      name: '电梯房',\n      size: 9.6,\n      url: '/电梯房.glb'\n    },\n    {\n      key: 'building_commercial_5',\n      name: '现代门窗',\n      size: 95,\n      url: '/现代门窗.glb'\n    },\n    /////////////////////\n\n    {\n      key: 'car_tanker',\n      name: '油罐车',\n      size: 1,\n      url: '/油罐车.glb'\n    },\n    {\n      key: 'car_goods',\n      name: '货车',\n      size: 6.4,\n      url: '/货车.glb'\n    },\n    {\n      key: 'car_trailer',\n      name: '拖车',\n      size: 2,\n      url: '/拖车.glb'\n    },\n    {\n      key: 'car_crane',\n      name: '吊车',\n      size: 4.4,\n      url: '/吊车.glb'\n    },\n\n    {\n      key: 'car_aodi',\n      name: '奥迪',\n      size: 1,\n      url: '/奥迪.glb'\n    },\n    {\n      key: 'car_kaidilake',\n      name: '凯迪拉克',\n      size: 1.6,\n      url: '/凯迪拉克.glb'\n    },\n\n    {\n      key: 'ARBOR_ONE',\n      name: '小树',\n      size: 2,\n      url: '/小树.glb'\n    },\n\n    {\n      key: 'FENCE',\n      name: '围栏',\n      size: 0.8,\n      url: '/围栏.glb'\n    },\n\n    {\n      key: 'HANDRAIL',\n      name: '栏杆',\n      size: 0.1,\n      url: '/栏杆.glb'\n    },\n\n    {\n      key: ROBOT,\n      name: '机器人',\n      size: 0.3,\n      url: '/机器人.glb'\n    },\n    {\n      key: CHARACTER,\n      name: '人物',\n      size: 2.2,\n      url: '/RobotExpressive.glb'\n    },\n\n    {\n      key: 'PARK_CAMERA',\n      name: '摄像头',\n      type: 'sprite',\n      range: { x: 18.5, y: 38.5 },\n      mapUrl: '/sxt.png'\n    },\n    {\n      key: VIDEOPLAY,\n      name: '视频播放',\n      type: 'sprite',\n      range: { x: 1, y: 1 },\n      mapUrl: '/video.png'\n    },\n    {\n      key: OPEN_THE_DOOR,\n      name: '开门',\n      type: 'sprite',\n      range: { x: 1, y: 1 },\n      mapUrl: '/open.png'\n    },\n    {\n      key: HALF_OPEN_THE_DOOR,\n      name: '半开门',\n      type: 'sprite',\n      range: { x: 1, y: 1 },\n      mapUrl: '/open.png'\n    },\n    {\n      key: DOUBLE_OPEN_THE_DOOR,\n      name: '双开门',\n      type: 'sprite',\n      range: { x: 1, y: 1 },\n      mapUrl: '/open.png'\n    },\n    {\n      key: SLIDING_DOOR,\n      name: '推拉门',\n      type: 'sprite',\n      range: { x: 1, y: 1 },\n      mapUrl: '/open.png'\n    },\n    {\n      key: WAIT_LIFT,\n      name: '电梯门',\n      type: 'sprite',\n      range: { x: 1, y: 1 },\n      mapUrl: '/lift.png'\n    },\n\n    {\n      key: 'spot_light_reception',\n      type: 'spotlight',\n      name: '聚光灯',\n      // 强度\n      intensity: 8,\n      // 距离\n      distance: 100,\n      // 衰减\n      decay: 0\n    },\n    {\n      key: LIGHT_SWITCH,\n      name: '开关灯',\n      type: 'sprite',\n      range: { x: 1.2, y: 1.2 },\n      mapUrl: '/light.png'\n    }\n  ].map(item => {\n    if (item.url) {\n      item.url = '/oss/model/park' + item.url\n    }\n    if (item.mapUrl) {\n      item.mapUrl = '/oss/textures/park' + item.mapUrl\n    }\n    return item as import('three-scene/types/model').ModelItem\n  })\n})\n\nexport const getFloorOpts = () => ({\n  active: 1,\n  show: false,\n  list: [\n    // key 值需要与 配置的等电梯点位 bing 字段尾数相同\n    { name: '一楼', key: 1, y: 0.2 },\n    { name: '二楼', key: 2, y: 13.8 },\n    { name: '三楼', key: 3, y: 19.83 },\n    { name: '五楼', key: 5, y: 31.76 }\n  ]\n})\n\nexport const getTipOpts = () => ({\n  show: false,\n  style: {\n    left: 0,\n    top: 0\n  },\n  msg: ''\n})\n","//\nexport default {\n  // 判断点击间隔时间\n  clickIntervalTime: 300\n}\n","import * as THREE from 'three'\nimport * as TWEEN from 'three/examples/jsm/libs/tween.module.js'\nimport { Reflector } from 'three/examples/jsm/objects/Reflector.js'\n\nimport * as ThreeScene from 'three-scene'\n\nimport { Water } from 'three/examples/jsm/objects/Water'\nimport { Sky } from 'three/examples/jsm/objects/Sky'\n\nimport type { Config, ExtendOptions } from '.'\nimport type { XYZ, ObjectItem } from 'three-scene/types/model'\n\nimport DEFAULTCONFIG from './config'\n\nconst Hooks = ThreeScene.Hooks\nconst Utils = ThreeScene.Utils\n\nconst { raycaster, pointer, update: raycasterUpdate, style } = Hooks.useRaycaster()\nconst { initCSS2DRender, createCSS2DDom } = Hooks.useCSS2D()\nconst { createDiffusion, updateDiffusion } = Hooks.useDiffusion()\nconst { createMove, moveAnimate } = Hooks.useMoveAnimate()\n\nconst { addLensflare } = Hooks.useLensflare()\n\nconst base = import.meta.env.VITE_BEFORE_STATIC_PAT || ''\n\nconst createWater = () => {\n  // 创建水面\n  const waterGeometry = new THREE.PlaneGeometry(900, 50)\n  const water = new Water(waterGeometry, {\n    textureWidth: 512,\n    textureHeight: 512,\n    waterNormals: new THREE.TextureLoader().load(\n      base + '/oss/textures/waternormals.jpg',\n      texture => {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      }\n    ),\n    sunDirection: new THREE.Vector3(),\n    sunColor: 0xf00f00,\n    waterColor: 0x01688b,\n    distortionScale: 3.5\n  })\n  water.rotation.x = -Math.PI / 2\n  water.rotation.z = Math.PI * 0.05\n  water.material.uniforms.size.value = 0.5\n  water.position.y = -1\n  water.position.x = 65\n  water.position.z = 230\n  return water\n}\n\n// 创建视频元素\nconst createVideoDom = (src?: string) => {\n  const dom = document.createElement('video')\n  dom.src = base + (src || '/oss/textures/park/sintel.mp4')\n  dom.loop = true\n  // videoDom.autoplay = true\n  return dom\n}\n\n// 视频封面\nconst videoCoverTexture = new THREE.TextureLoader().load(base + '/oss/textures/park/cover.jpeg')\n\nconst sightMap = {\n  full: 'FULL',\n  npc: 'NPC'\n}\n\nexport class ParkThreeScene extends ThreeScene.Scene {\n  // 水面\n  water?: InstanceType<typeof Water>\n  // 天空\n  sky?: InstanceType<typeof Sky>\n  // 太阳\n  sun?: InstanceType<typeof THREE.Vector3>\n\n  // 建筑集合\n  buildingGroup?: InstanceType<typeof THREE.Group>\n  // 锚点集合\n  anchorGroup?: InstanceType<typeof THREE.Group>\n  // 点位集合\n  dotGroup?: InstanceType<typeof THREE.Group>\n  // 灯光组\n  lightGroup?: InstanceType<typeof THREE.Group>\n\n  // 扩展参数\n  extend: Partial<ExtendOptions>\n  // CSS2D 渲染器\n  css2DRender: InstanceType<typeof Hooks.CSS2DRenderer>\n  // 鼠标点击地面扩散波效果\n  mouseClickDiffusion: InstanceType<typeof THREE.Mesh>\n  // 行走的人物\n  character?: InstanceType<typeof THREE.Group> & {\n    extra?: any\n  }\n\n  // 当前视角\n  currentSight: string\n  // 历史中心点（视角切换）\n  historyTarget: InstanceType<typeof THREE.Vector3>\n  // 历史相机坐标（视角切换）\n  historyCameraPosition: InstanceType<typeof THREE.Vector3>\n\n  // 动画模型集合\n  animateModels: any[]\n\n  // 移动系数\n  moveFactor: number = 1\n\n  constructor(\n    options: ConstructorParameters<typeof ThreeScene.Scene>[0],\n    extend: Partial<ExtendOptions>\n  ) {\n    super(options)\n\n    this.extend = extend\n    this.css2DRender = initCSS2DRender(this.options, this.container)\n    this.css2DRender.domElement.className = 'three-scene__dot-wrap'\n\n    // 鼠标点击地面扩散波效果\n    this.mouseClickDiffusion = createDiffusion(4, void 0, 6)\n    this.mouseClickDiffusion.rotation.x = -Math.PI * 0.5\n    this.mouseClickDiffusion.position.y = 0.5\n    this.mouseClickDiffusion.visible = false\n    this.addObject(this.mouseClickDiffusion)\n\n    this.createClock()\n    this.currentSight = sightMap.full\n    this.historyTarget = new THREE.Vector3()\n    this.historyCameraPosition = new THREE.Vector3()\n    this.animateModels = []\n\n    this.bindEvent()\n    this.addBuildingGroup()\n    this.addAnchorGroup()\n    this.addDotGroup()\n    this.addLightGroup()\n\n    // 光晕\n    this.addLensflare()\n  }\n\n  // 添加建筑组\n  addBuildingGroup() {\n    const group = new THREE.Group()\n    group.name = '建筑组'\n    this.buildingGroup = group\n    this.addObject(group)\n  }\n\n  // 清除场景建筑\n  clearBuilding() {\n    if (this.buildingGroup) {\n      this.disposeObj(this.buildingGroup)\n    }\n    this.animateModels = []\n    this.addBuildingGroup()\n    this.clearAnchor()\n    this.clearDot()\n    this.clearLightGroup()\n  }\n\n  // 添加建筑\n  addBuilding(...obj) {\n    if (this.buildingGroup) {\n      this.buildingGroup.add(...obj)\n    }\n  }\n\n  // 添加锚点组\n  addAnchorGroup() {\n    const group = new THREE.Group()\n    group.name = '锚点组'\n    this.anchorGroup = group\n    this.addObject(group)\n  }\n\n  // 清除场景锚点\n  clearAnchor() {\n    if (this.anchorGroup) {\n      this.disposeObj(this.anchorGroup)\n    }\n    this.addAnchorGroup()\n  }\n\n  // 添加锚点\n  addAnchor(...obj) {\n    if (this.anchorGroup) {\n      this.anchorGroup.add(...obj)\n    }\n  }\n\n  // 添加点位组\n  addDotGroup() {\n    const group = new THREE.Group()\n    group.name = '点位组'\n    this.dotGroup = group\n    this.scene.add(group)\n  }\n\n  // 清除场景点位\n  clearDot() {\n    if (this.dotGroup) {\n      this.disposeObj(this.dotGroup)\n    }\n    this.addDotGroup()\n  }\n\n  // 添加点位\n  addDot(item: ObjectItem, clickBack) {\n    const pos = item.position\n    const { size, color } = item.font || {}\n    const { x = 0, y = 0, z = 0 } = pos || {}\n    const label = createCSS2DDom({\n      name: `\n        <div class=\"bg\"></div>\n        <span class=\"inner\" style=\"${\n          size != void 0 ? `font-size: ${typeof size === 'string' ? size : size + 'px'};` : ''\n        } ${color != void 0 ? `color: ${color}` : ''}\"></span>\n      `,\n      className: 'dot-2D-label',\n      position: [x, y, z],\n      onClick: clickBack\n    })\n    label.name = item.name\n    label.data = item\n    // 原始点位 备用\n    label._position_ = { x, y, z }\n    this.dotGroup?.add(label)\n    return label\n  }\n\n  // 添加灯光组\n  addLightGroup() {\n    const group = new THREE.Group()\n    group.name = '灯光组'\n    this.lightGroup = group\n    this.addObject(group)\n  }\n\n  // 清除灯光组\n  clearLightGroup() {\n    if (this.lightGroup) {\n      this.disposeObj(this.lightGroup)\n    }\n    this.addLightGroup()\n  }\n\n  // 添加灯光\n  addLight(item: ObjectItem, obj, hasHelper?: boolean) {\n    if (this.lightGroup) {\n      obj.name = item.name\n      const { to = { x: 0, y: 0, z: 0 } } = item\n      obj.target.position.set(to.x, to.y, to.z)\n      this.lightGroup.add(obj)\n      if (hasHelper) {\n        const helper = new THREE.SpotLightHelper(obj, obj.color)\n        this.lightGroup.add(helper)\n      }\n    }\n  }\n\n  // 添加太阳光晕\n  addLensflare() {\n    const { position = [500, 1000, 800], color = 0xffffff } = this.options.directionalLight\n    const [x, y, z] = position\n    const lensflare = addLensflare(color, x, y, z)\n    this.addObject(lensflare)\n\n    this.sun = new THREE.Vector3(x, y, z)\n    this.water = createWater()\n    this.addObject(this.water)\n    // 创建天空\n    // this.sky = new Sky()\n    // this.sky.scale.setScalar(10000)\n    // this.updateSkyAndSun()\n  }\n\n  // 更新天空、太阳\n  updateSkyAndSun() {\n    const { water, sky, sun } = this\n    const skyUniforms = sky?.material.uniforms\n    if (!skyUniforms) return\n    // 系数控制参数\n    const effectController = {\n      turbidity: 10, // 浑浊\n      rayleigh: 1, // 视觉效果就是傍晚晚霞的红光的深度\n      mieCoefficient: 0.005, // 粒子的米氏散射系数\n      mieDirectionalG: 0.2, // 方向\n      elevation: 4, // 太阳高度\n      azimuth: 180, // 太阳角度\n      exposure: 1 // 光晕强度\n    }\n    skyUniforms['turbidity'].value = effectController.turbidity\n    skyUniforms['rayleigh'].value = effectController.rayleigh\n    skyUniforms['mieCoefficient'].value = effectController.mieCoefficient\n    skyUniforms['mieDirectionalG'].value = effectController.mieDirectionalG\n\n    const phi = THREE.MathUtils.degToRad(90 - effectController.elevation)\n    const theta = THREE.MathUtils.degToRad(effectController.azimuth)\n\n    if (!sun) return\n    // 设置球坐标系\n    sun.setFromSphericalCoords(1, phi, theta)\n    // 太阳方位\n    sky.material.uniforms['sunPosition'].value.copy(sun)\n\n    if (!water) return\n    // 太阳方向\n    water.material.uniforms['sunDirection'].value.copy(sun).normalize()\n\n    // 环境映射\n    const pmremGenerator = new THREE.PMREMGenerator(this.renderer)\n    // 场景环境\n    this.scene.environment = pmremGenerator.fromScene(sky as any).texture\n\n    // 场景光晕强度\n    this.renderer.toneMappingExposure = effectController.exposure\n  }\n\n  // 添加人物\n  addCharacter(model, point) {\n    const { x, y, z } = point\n    model.position.set(x, y, z)\n    // this.setControlTarget(point)\n    // const [x2, y2, z2] = this.options.camera.position\n\n    // 相机入场动画\n    // Utils.cameraInSceneAnimate(this.camera, { x: x2, y: y2, z: z2 }, this.controls.target).then(() => {\n    //   this.controlSave()\n    // })\n\n    this.character = model\n\n    // 动画\n    const animations = model.animations\n    const mixer = new THREE.AnimationMixer(model)\n    const actions = {}\n\n    for (let i = 0; i < animations.length; i++) {\n      const clip = animations[i]\n      const action = mixer.clipAction(clip)\n      actions[clip.name] = action\n    }\n\n    // 舞蹈\n    const dance = actions['Dance']\n    dance.play()\n\n    // 步行\n    const runging = actions['Walking']\n\n    model.extra = {\n      mixer,\n      actions,\n      runging\n    }\n    this.addObject(model)\n  }\n\n  // 视角切换（人物/全屏）\n  toggleSight() {\n    if (this.options.cruise.runing) {\n      // 定点巡航中，则中断\n      this.toggleCruise(true)\n      return\n    }\n\n    if (!this.controls || !this.character) return\n\n    const sight = this.currentSight == sightMap.full ? sightMap.npc : sightMap.full\n    this.currentSight = sight\n\n    // 人物视角\n    const isCharacter = sight === sightMap.npc\n    // 控制器操作限制切换\n    this.controls.maxDistance = isCharacter ? 15 : 1500\n    this.controls.screenSpacePanning = !isCharacter\n    this.controls.enablePan = !isCharacter\n    this.controls.maxPolarAngle = Math.PI * (isCharacter ? 0.49 : 0.45)\n\n    const target = this.controls.target\n    const position = this.character.position\n    /// 切换到人物视角，暂存控制参数\n    if (isCharacter) {\n      const { x, y, z } = target\n      this.historyTarget = new THREE.Vector3(x, y, z)\n      const { x: x2, y: y2, z: z2 } = this.camera.position\n      this.historyCameraPosition = new THREE.Vector3(x2, y2, z2)\n      const { x: x3, y: y3, z: z3 } = position\n      this.camera.lookAt(new THREE.Vector3(x3, y3 + 3, z3))\n    } else {\n      const { x, y, z } = this.historyCameraPosition\n      this.camera.position.set(x, y, z)\n      this.camera.lookAt(position)\n    }\n\n    const { x, y, z } = isCharacter ? position : this.historyTarget\n    target.set(x, y, z)\n\n    // new TWEEN.Tween(target)\n    //   .to(isCharacter ? position : this.historyTarget, 1000 * 1)\n    //   .delay(0)\n    //   .start()\n  }\n\n  // 人物加速\n  characterAccelerate() {\n    this.moveFactor++\n    if (this.moveFactor >= 10) this.moveFactor = 10\n    console.log('当前人物速度系数：' + this.moveFactor)\n  }\n\n  // 设置控制中心点\n  setControlTarget(point) {\n    if (!this.controls) return\n    const height = 3\n    const { x, y, z } = point\n    this.controls.target.set(x, y + height, z)\n    this.camera.lookAt(this.controls.target)\n  }\n\n  // 鼠标点击地面\n  mouseClickGround(intersct) {\n    if (this.currentSight !== sightMap.npc) return Promise.reject()\n\n    const character = this.character\n    if (!character) return Promise.reject()\n    const { runing } = this.options.cruise\n    // 自动巡航中不操作\n    if (runing) return Promise.reject()\n    const lookAt = intersct.point\n    const obj = this.mouseClickDiffusion\n\n    const { runging } = character.extra\n    runging.play()\n\n    const { x, y, z } = lookAt\n    obj.position.set(x, y, z)\n    obj.visible = true\n\n    return new Promise(resolve => {\n      // 创建移动\n      createMove(\n        character,\n        lookAt,\n        pos => {\n          this.setControlTarget(pos)\n        },\n        pos => {\n          this.setControlTarget(pos)\n          runging.stop()\n          obj.visible = false\n          resolve(character)\n        }\n      )\n    })\n  }\n\n  // 添加视频材质\n  addVideoMaterial() {\n    const videoDom = createVideoDom()\n    // video 作为 VideoTexture 参数创建纹理对象\n    const videoTexture = new THREE.VideoTexture(videoDom)\n    const geometry = new THREE.PlaneGeometry(10, 5)\n    const material = new THREE.MeshPhongMaterial({\n      map: videoCoverTexture\n      // side: THREE.DoubleSide\n    })\n    const mesh = new THREE.Mesh(geometry, material) as any\n    mesh.__video_texture__ = videoTexture\n    mesh.__cover_texture__ = videoCoverTexture\n    mesh.position.set(-75, 2.66, 133)\n    mesh.name = 'small_video'\n    mesh.__video__ = videoDom\n\n    this.addObject(mesh)\n\n    // 添加镜面\n    const groundMirror = new Reflector(new THREE.PlaneGeometry(20, 20), {\n      clipBias: 0.003,\n      textureWidth: window.innerWidth * window.devicePixelRatio,\n      textureHeight: window.innerHeight * window.devicePixelRatio,\n      color: 0xb5b5b5\n    })\n    groundMirror.position.set(-75, 0.17, 160)\n    groundMirror.rotateX(-Math.PI / 2)\n    // groundMirror.position.y = 0.5\n    this.addObject(groundMirror)\n\n    // 大屏\n    const dbObj = this.scene.getObjectByName('大屏幕') as any\n    if (!dbObj) return\n    const videoDom2 = createVideoDom()\n    const videoTexture2 = new THREE.VideoTexture(videoDom2)\n    dbObj.__video_texture__ = videoTexture2\n    dbObj.__cover_texture__ = videoCoverTexture.clone()\n    dbObj.material = material.clone()\n    dbObj.__video__ = videoDom2\n  }\n\n  // 视频播放\n  videoPlay(object) {\n    const vobj = this.scene.getObjectByName(object.data.bind) as any\n\n    if (vobj && vobj.__video__) {\n      const videoDom = vobj.__video__\n      if (videoDom.paused) {\n        vobj.material.map = vobj.__video_texture__\n        videoDom?.play()\n      } else {\n        videoDom?.pause()\n        vobj.material.map = vobj.__cover_texture__\n      }\n    }\n  }\n\n  // 开门\n  openTheDoor(object, isHalf) {\n    const dobj = this.scene.getObjectByName(object.data.bind) as any\n    if (!dobj) return\n\n    if (!isHalf) {\n      const position = dobj.position\n      if (dobj.__open__ == void 0) {\n        const { x, y, z } = position\n        dobj.__position__ = new THREE.Vector3(x, y, z)\n      }\n      dobj.__open__ = !dobj.__open__\n      new TWEEN.Tween(position)\n        .to(\n          {\n            x: dobj.__position__.x + (dobj.__open__ ? 7 : 0)\n          },\n          1000 * 1.5\n        )\n        .delay(0)\n        .start()\n    } else {\n      dobj.__open__ = !dobj.__open__\n      new TWEEN.Tween(dobj.rotation)\n        .to(\n          {\n            z: dobj.__open__ ? Math.PI * 0.5 : 0\n          },\n          1000 * 1.5\n        )\n        .delay(0)\n        .start()\n    }\n  }\n\n  // 双开门\n  openTheDoubleSlidingDoor(object, scale = 400, isOpen?: boolean) {\n    const dobj = this.scene.getObjectByName(object.data.bind) as any\n    if (!dobj) return Promise.reject()\n    const left = dobj.children.find(el => el.name.indexOf('左') > -1) as any\n    const right = dobj.children.find(el => el.name.indexOf('右') > -1) as any\n\n    const lpos = left.position\n    const rpos = right.position\n    if (dobj.__open__ == void 0) {\n      const { x, y, z } = lpos\n      const { x: x2, y: y2, z: z2 } = rpos\n      left.__position__ = new THREE.Vector3(x, y, z)\n      right.__position__ = new THREE.Vector3(x2, y2, z2)\n    }\n\n    dobj.__open__ = isOpen !== void 0 ? isOpen : !dobj.__open__\n    return new Promise(resolve => {\n      const rMoveX = right.__position__.x + (dobj.__open__ ? scale : 0)\n      // 坐标不变则直接返回\n      if (rpos.x === rMoveX) return resolve(dobj)\n      new TWEEN.Tween(lpos)\n        .to(\n          {\n            x: left.__position__.x + (dobj.__open__ ? -scale : 0)\n          },\n          1000 * 1.5\n        )\n        .delay(0)\n        .start()\n      new TWEEN.Tween(rpos)\n        .to(\n          {\n            x: rMoveX\n          },\n          1000 * 1.5\n        )\n        .delay(0)\n        .start()\n        .onComplete(() => {\n          resolve(dobj)\n        })\n    })\n  }\n\n  // 推拉门\n  openTheSlidingDoor(object) {\n    const dobj = this.scene.getObjectByName(object.data.bind) as any\n    console.log(object)\n    if (!dobj) return\n    console.log(dobj)\n    const left = dobj.children.find(el => el.name.indexOf('左') > -1)\n    // const right = dobj.children.find(el => el.name.indexOf('右') > -1)\n    const lpos = left.position\n    if (dobj.__open__ == void 0) {\n      const { x, y, z } = lpos\n      left.__position__ = new THREE.Vector3(x, y, z)\n    }\n    dobj.__open__ = !dobj.__open__\n    const scale = 4.5\n    const rMoveY = left.__position__.y + (dobj.__open__ ? scale : 0)\n    if (lpos.y === rMoveY) return\n    new TWEEN.Tween(lpos)\n      .to(\n        {\n          y: left.__position__.y + (dobj.__open__ ? scale : 0)\n        },\n        1000 * 1.5\n      )\n      .delay(0)\n      .start()\n  }\n\n  // 电梯\n  waitLift(object, fllow?: boolean) {\n    const liftGroupName = '单元1号电梯'\n    // 电梯轿厢\n    const box = this.scene.getObjectByName(liftGroupName) as any\n    console.log(box)\n    // 当前绑定坐标\n    const cpos = object.data?.to\n    if (!box || !cpos) return\n    // y 轴对比\n    const bpos = box.position\n\n    if (cpos.y != bpos.y) {\n      // 电梯关门\n      const bindLift = box.__bind_lift__\n      if (bindLift !== void 0) {\n        // 绑定过则关闭电梯门\n        this.openTheDoubleSlidingDoor(\n          {\n            data: { bind: bindLift }\n          },\n          200,\n          false\n        )\n      }\n      this.openTheDoubleSlidingDoor(\n        {\n          data: { bind: liftGroupName }\n        },\n        200 * 0.02,\n        false\n      ).then(() => {\n        // 电梯移动\n        new TWEEN.Tween(bpos)\n          .to(\n            {\n              y: cpos.y\n            },\n            1000 * 1.5\n          )\n          .delay(0)\n          .start()\n          .onUpdate(pos => {\n            // 人物跟随\n            if (fllow) {\n              if (!this.character) return\n              this.character.position.y = pos.y\n              this.camera.position.y = pos.y\n              this.setControlTarget(this.character.position)\n            }\n          })\n          .onComplete(() => {\n            console.log('电梯到了！')\n            // 当前移动到哪一层，后续滑动时需要关闭之前到达的层\n            box.__bind_lift__ = object.data.bind\n            // 电梯开门\n            this.openLift(object, liftGroupName)\n          })\n      })\n    } else {\n      this.openLift(object, liftGroupName)\n    }\n  }\n\n  // 电梯开门\n  openLift(object, liftGroupName) {\n    console.log(object)\n    // 电梯门打开\n    this.openTheDoubleSlidingDoor(object, 200)\n    this.openTheDoubleSlidingDoor(\n      {\n        data: { bind: liftGroupName }\n      },\n      200 * 0.02\n    )\n  }\n\n  // 开关灯\n  lightSwitch(object) {\n    console.log(object)\n    const light = this.lightGroup?.getObjectsByProperty('name', object.data?.bind) as any\n    light.forEach(el => {\n      el.visible = !el.visible\n    })\n    console.log(light)\n  }\n\n  // 添加模型动画\n  addModelAnimate(model, animations = [], play: boolean = true, timeScale: number = 1) {\n    if (!animations.length) return\n    const mixer = new THREE.AnimationMixer(model)\n    const obj = animations.reduce((ob, cur: any) => {\n      const key = cur.name || ''\n      ob[key] = mixer.clipAction(cur)\n      if (play) {\n        ob[key].play()\n      }\n      ob[key].timeScale = timeScale\n      return ob\n    }, {})\n\n    model.__action__ = obj\n    model.__mixer__ = mixer\n    this.animateModels.push(model)\n  }\n\n  // 模型动画\n  modelAnimate(): void {\n    // css2D 渲染器\n    this.css2DRender.render(this.scene, this.camera)\n\n    if (typeof this.extend.animateCall === 'function') this.extend.animateCall()\n\n    // 水面波动\n    if (this.water) {\n      this.water.material.uniforms['time'].value += 1 / 60\n    }\n\n    // 波纹扩散\n    if (this.mouseClickDiffusion.visible) {\n      updateDiffusion()\n    }\n\n    let delta = this.clock?.getDelta() as number\n    if (this.character) {\n      const mixer = this.character.extra.mixer\n      mixer.update(delta)\n\n      moveAnimate(0.5 * this.moveFactor)\n    }\n\n    this.restoreAnchorMaterial()\n\n    // 模型动画\n    if (this.animateModels.length) {\n      this.animateModels.forEach(el => {\n        el.__mixer__.update(delta)\n      })\n    }\n  }\n\n  // 双击\n  onDblclick(e: MouseEvent) {\n    const dom = this.container\n    const scale = this.options.scale\n    raycasterUpdate(e as PointerEvent, dom, scale)\n\n    if (this.buildingGroup) {\n      // 设置新的原点和方向向量更新射线, 用照相机的原点和点击的点构成一条直线\n      raycaster.setFromCamera(pointer, this.camera)\n      // 检查射线和物体之间的交叉点（包含或不包含后代）\n      const objects = [this.buildingGroup]\n      const interscts = raycaster.intersectObjects(objects)\n      if (interscts.length) {\n        const obj = interscts[0].object\n        const object = this.findParentGroup(obj)\n        if (!object) return\n        if (typeof this.extend?.onDblclick === 'function') this.extend.onDblclick(object)\n      }\n    }\n  }\n\n  // 移动\n  onPointerMove(e: PointerEvent) {\n    this.checkIntersectObjects(e)\n  }\n\n  // 弹起\n  onPointerUp(e: PointerEvent) {\n    super.onPointerUp(e)\n\n    let s = e.timeStamp - this.pointer.tsp\n    // 判断是否未点击\n    const isClick = s < DEFAULTCONFIG.clickIntervalTime\n    if (e.button == 2) {\n      // console.log('你点了右键')\n      if (isClick && typeof this.extend?.onClickRight === 'function') this.extend.onClickRight(e)\n    } else if (e.button == 0) {\n      // console.log('你点了左键')\n      isClick && this.checkIntersectObjects(e)\n    } else if (e.button == 1) {\n      // console.log('你点了滚轮')\n    }\n  }\n\n  // 检查交叉几何体\n  checkIntersectObjects(e: PointerEvent) {\n    const dom = this.container\n    const scale = this.options.scale\n    raycasterUpdate(e, dom, scale)\n    let isClick = e.type == 'pointerdown' || e.type == 'pointerup'\n    // 锚点或者地面\n    const objects =\n      this.buildingGroup?.children\n        .filter((it: any) => it.visible && (isClick || it.__ground__))\n        .concat(this.anchorGroup?.children || []) || []\n\n    // 设置新的原点和方向向量更新射线, 用照相机的原点和点击的点构成一条直线\n    raycaster.setFromCamera(pointer, this.camera)\n    let interscts = raycaster.intersectObjects(objects, isClick /* 是否检查所有后代 */)\n    // let interscts = raycaster.intersectObjects(objects, true)\n\n    if (!isClick) {\n      // 处理锚点类型-精灵材质\n      this.hoverAnchor(interscts)\n      return\n    }\n    dom.style.cursor = 'auto'\n\n    if (interscts.length) {\n      const intersct = interscts[0]\n      const object = intersct.object\n      console.log(intersct)\n\n      // 是否点击地面\n      const isClickGround =\n        typeof object.name == 'string' &&\n        (this.extend.groundMeshName || []).some(t => object.name.indexOf(t) > -1)\n\n      const obj = this.findParentGroup(object)\n      if (isClickGround) {\n        if (typeof this.extend?.onClickGround === 'function')\n          this.extend.onClickGround(obj, intersct)\n      }\n\n      if (!obj) return\n      if (typeof this.extend?.onClickLeft === 'function') this.extend.onClickLeft(obj, intersct)\n    } else {\n      if (typeof this.extend?.onClickLeft === 'function') this.extend.onClickLeft()\n    }\n  }\n\n  // 悬浮锚点\n  hoverAnchor(interscts) {\n    if (typeof this.extend.onHoverAnchor === 'function')\n      this.extend.onHoverAnchor(interscts[0], style)\n\n    if (interscts.length) {\n      const intersct = interscts[0]\n      const object = intersct.object as any\n      this.container.style.cursor = object._isAnchor_ ? 'pointer' : 'auto'\n      if (!object._isAnchor_) {\n        this.anchorGroup?.children.forEach((el: any) => {\n          el.__change_color__ = false\n        })\n        return\n      }\n\n      const mat = object.material\n      if (object.__mat_color__ === void 0) {\n        object.__mat_color__ = mat.color\n      }\n      mat.color = new THREE.Color(0xff0ff0)\n      this.anchorGroup?.children.forEach((el: any) => {\n        el.__change_color__ = el.uuid === object.uuid\n      })\n    } else {\n      this.container.style.cursor = 'auto'\n      this.anchorGroup?.children.forEach((el: any) => {\n        el.__change_color__ = false\n      })\n    }\n  }\n\n  // 恢复锚点材质\n  restoreAnchorMaterial() {\n    this.anchorGroup?.traverse((el: any) => {\n      if (el.isSprite) {\n        if (!el.__change_color__ && el.__mat_color__) {\n          el.material.color = el.__mat_color__\n        }\n      }\n    })\n  }\n\n  // 查找父级组合\n  findParentGroup(object) {\n    const _find = obj => {\n      if (obj._isBuilding_) return obj\n      let parent = obj.parent\n      if (!parent) {\n        return\n      }\n      if (parent && parent._isBuilding_) {\n        return parent\n      }\n      return _find(parent)\n    }\n    return _find(object)\n  }\n\n  // 获取楼层集合\n  getFloor() {\n    return this.buildingGroup?.children.filter((it: any) => it._isFloor_)\n  }\n\n  // 隐藏除楼层之外的对象\n  hideOmitFloor(visible: boolean) {\n    this.buildingGroup?.children.forEach((el: any) => {\n      el.visible = el._isFloor_ || visible\n    })\n  }\n\n  // 获取所有对象\n  getAll() {\n    return this.buildingGroup?.children.concat(this.dotGroup?.children || []) || []\n  }\n\n  // 获取跟随目标集合\n  getFlowMark(mark) {\n    return this.getAll().filter((el: any) => el.data?.followMark === mark)\n  }\n\n  // 获取动画目标点\n  getAnimTargetPos(config: Partial<Config>, _to?: XYZ, _target?: XYZ) {\n    if (!this.controls) return\n    const to = _to || config.to || { x: -104, y: 7, z: 58 }\n    const target = _target || config.target || { x: 0, y: 0, z: 0 }\n    // 中心点位\n    this.controls.target.set(target.x, target.y, target.z)\n    return to\n  }\n\n  resize() {\n    super.resize()\n    const { width, height } = this.options\n    this.css2DRender.setSize(width, height)\n  }\n\n  dispose() {\n    this.animateModels = []\n    this.disposeObj(this.water)\n    this.disposeObj(this.sky)\n    this.disposeObj(this.buildingGroup)\n    this.disposeObj(this.character)\n    this.disposeObj(this.dotGroup)\n    this.disposeObj(this.anchorGroup)\n    this.disposeObj(this.lightGroup)\n    this.disposeObj(this.mouseClickDiffusion)\n\n    this.clock = void 0\n    this.water = void 0\n    this.sky = void 0\n    // @ts-ignore\n    this.css2DRender = void 0\n    this.buildingGroup = void 0\n    this.character = void 0\n    this.dotGroup = void 0\n    this.anchorGroup = void 0\n    this.lightGroup = void 0\n    // @ts-ignore\n    this.mouseClickDiffusion = void 0\n    this.extend = {}\n    super.dispose()\n  }\n}\n\n// 点位更新回调\nexport const dotUpdateObjectCall = (obj: ObjectItem, _group) => {\n  // const val = wsStore.getKeyValue( code ).value\n  const val = Math.random() * 40\n  if (val !== void 0) {\n    obj.value = val\n  }\n\n  obj.show = Math.random() > 0.5\n  obj.value = Number(Number(obj.value || 0).toFixed(2))\n  return {\n    value: obj.value,\n    show: obj.show,\n    font: {\n      ...(obj.font || {}),\n      color: '#' + (0xffffff + val * 1000000).toString(16).substring(0, 6)\n    }\n  }\n}\n\n// 更新回调\nexport const updateObjectCall = (_obj: ObjectItem, isRandom) => {\n  console.log(isRandom)\n  // const code = _obj.deviceCode || ''\n  // console.log( code )\n  const status = Math.random() > 0.5 ? 1 : 0\n  const error = Math.random() > 0.5 ? 1 : 0\n  const disabled = Math.random() > 0.8 ? 1 : 0\n  const ctl = Math.floor(Math.random() * 3)\n  return {\n    status: disabled > 0 ? 0 : status,\n    error: disabled > 0 ? 0 : error,\n    remote: ctl == 1 ? 1 : 0,\n    local: ctl == 2 ? 1 : 0,\n    disabled\n  }\n}\n\n// 修改模型部件状态及颜色 (类型、模型、颜色对象、颜色、动画暂停状态、故障状态)\nexport const changeModleStatusColor = (opts: import('./index').ChangeMaterialOpts) => {\n  let { el, type: _type, colorObj: _cobj, color, paused } = opts\n  let colors = Utils.getColorArr(color)\n  color = colors[0]\n\n  // 场景\n  // 扩展数据\n  const extra = el.extra\n  // 状态运行则运动\n  if (!!extra) {\n    // 暂停状态\n    !!extra.action && (extra.action.paused = paused)\n    if (color != void 0) {\n      const meshs = extra.meshs || []\n      meshs.forEach(e => {\n        Utils.setMaterialColor(e, color)\n      })\n    }\n  }\n}\n\n// 执行汽车行驶动画\nexport const executeCarRunging = el => {\n  const data = el.data\n  const { to, position } = data\n  if (!to) return\n  const time = 30 * 1000\n\n  // 动画延迟时间\n  const delay = THREE.MathUtils.randInt(0, 10 * 1000)\n\n  // 动画：透明度缩放动画\n  el.tween1 = new TWEEN.Tween(el.position)\n    .to(to, time)\n    .delay(delay)\n    .onUpdate(({ x, y, z }) => {\n      el.position.x = x\n      el.position.y = y\n      el.position.z = z\n    })\n  el.tween2 = new TWEEN.Tween(position).to(to, time).onUpdate(({ x, y, z }) => {\n    el.position.x = x\n    el.position.y = y\n    el.position.z = z\n  })\n\n  // 第一段动画完成后接第二段\n  el.tween1.chain(el.tween2)\n  // 第二段动画完成后接第一段\n  el.tween2.chain(el.tween1)\n  el.tween1.start()\n}\n\n// 偏移坐标\nexport const getOffsetPoint = (pos, offset = 0) => {\n  return new THREE.Vector3(pos.x, pos.y + offset, pos.z)\n}\n","import type { Colors } from 'three-scene/types/color'\n\n// 颜色\nconst color = {\n  normal: 0x88a1b5,\n  runing: 0x2e77f8,\n  error: 0xc20c00\n}\n\nexport const colors: Colors = {\n  // 正常\n  normal: {\n    color: color.normal,\n    main: [0x88a1b5, 0x292e31],\n    text: 0xb9dbff,\n    FM: 0x606c74\n  },\n  // 运行\n  runing: {\n    color: color.runing,\n    main: 0x2e77f8,\n    FM: 0x067417\n  },\n  // 故障\n  error: {\n    color: color.error,\n    main: 0xb54425,\n    FM: 0xe82d1b\n  }\n}\n","<template>\n  <div :class=\"$style.page\">\n    <!-- 操作按钮 -->\n    <div class=\"scene-operation\">\n      <div class=\"btn\" @click=\"() => updateObject(true)\">随机更新</div>\n      <div class=\"btn\" @click=\"() => scene?.toggleSight()\">人物视角切换</div>\n      <div class=\"btn\" @click=\"() => scene?.toggleCruise()\">定点巡航</div>\n      <div class=\"btn\" @click=\"() => scene?.getPosition()\">场景坐标</div>\n      <div class=\"btn\" @click=\"() => changeBackground(scene as any)\">切换背景</div>\n      <div class=\"btn\" @click=\"() => scene?.controlReset()\">控制器重置</div>\n      <div class=\"btn\" @click=\"() => scene?.characterAccelerate()\">人物加速</div>\n      <div class=\"btn\" @click=\"() => scene?.toggleCruiseDepthTest()\">巡航深度</div>\n    </div>\n\n    <!-- 楼层选择 -->\n    <div :class=\"$style['floor-select']\" v-show=\"floorOpts.show\">\n      <el-button\n        v-for=\"item in floorOpts.list\"\n        type=\"primary\"\n        :disabled=\"floorOpts.active === item.key\"\n        @click=\"onFloorMoveTo(item)\"\n        >{{ item.name }}</el-button\n      >\n    </div>\n\n    <div :class=\"$style.container\" ref=\"containerRef\"></div>\n\n    <t-loading\n      v-model=\"progress.show\"\n      :bg-color=\"pageOpts.bgColor\"\n      :progress=\"progress.percentage\"\n    ></t-loading>\n\n    <div\n      :class=\"$style.tip\"\n      v-if=\"tipOpts.show\"\n      :style=\"{\n        left: tipOpts.style.left + 'px',\n        top: tipOpts.style.top + 'px'\n      }\"\n    >\n      <div :class=\"$style.msg\" v-html=\"tipOpts.msg\"></div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport tLoading from '@/components/loading/index.vue'\nimport {\n  ROBOT,\n  CHARACTER,\n  GROUND,\n  VIDEOPLAY,\n  OPEN_THE_DOOR,\n  HALF_OPEN_THE_DOOR,\n  DOUBLE_OPEN_THE_DOOR,\n  WAIT_LIFT,\n  SLIDING_DOOR,\n  LIGHT_SWITCH,\n  getPageOpts,\n  getFloorOpts,\n  getTipOpts\n} from './data'\nimport {\n  ParkThreeScene,\n  dotUpdateObjectCall,\n  updateObjectCall,\n  changeModleStatusColor,\n  executeCarRunging,\n  getOffsetPoint\n} from './methods'\nimport * as request from './request'\n\nimport { Hooks, Utils } from 'three-scene'\nimport { useResize } from '@/hooks/scene-resize'\nimport { colors } from './colors'\n\nimport type { ObjectItem, ThreeModelItem } from 'three-scene/types/model'\n\nconst pageOpts = reactive(\n  getPageOpts((pos, lookAt, cruiseCurve, t) => {\n    if (robotObj) {\n      // 前置视角前 0.02\n      t = t + 0.02\n      if (t > 1) t = t - 1\n      pos = getOffsetPoint(cruiseCurve.getPointAt(t))\n      const oft = 0.001\n      let ts = t + oft\n      if (ts > 1) ts = ts - 1\n      lookAt = cruiseCurve.getPointAt(ts)\n\n      robotObj.position.set(pos.x, 0.16, pos.z)\n      // 求正切值\n      const angle = Math.atan2(-lookAt.z + pos.z, lookAt.x - pos.x)\n      robotObj.rotation.z = Math.PI * 0.5 + angle\n    }\n  })\n)\nconst floorOpts = reactive(getFloorOpts())\nconst tipOpts = reactive(getTipOpts())\nconst containerRef = ref()\nconst COLORS = Utils.deepMerge(colors, pageOpts.colors)\n\nconst { changeBackground, backgroundLoad } = Hooks.useBackground()\nconst { progress, loadModels, getModel, virtualization, closeVirtualization } =\n  Hooks.useModelLoader({\n    baseUrl: pageOpts.baseUrl,\n    // dracoPath: pageOpts.dracoUrl,\n    colors: COLORS,\n    colorMeshName: pageOpts.colorMeshName,\n    indexDB: {\n      cache: !true,\n      dbName: 'THREE__PARK__DB',\n      tbName: 'TB',\n      version: 74\n    }\n  })\n\nconst options: ConstructorParameters<typeof ParkThreeScene>[0] = {\n  env: '/oss/textures/hdr/3.hdr',\n  controls: {\n    maxDistance: 1500,\n    // maxPolarAngle: Math.PI * 0.45,\n    screenSpacePanning: !false,\n    enablePan: !false\n  },\n  camera: {\n    position: [-85.7, 3.6, 208.6]\n  },\n  cruise: pageOpts.cruise,\n  grid: {\n    visible: !true\n  },\n  axes: {\n    visible: true\n  },\n  directionalLight: {\n    visible: true,\n    intensity: 3\n  }\n}\n\n// 更新点位隐现\nconst updateDotVisible = (target: ThreeModelItem) => {\n  const item = target.data as ObjectItem\n  if (typeof dotUpdateObjectCall === 'function') {\n    const res = dotUpdateObjectCall(item, scene.buildingGroup)\n    if (typeof res === 'object') {\n      Object.keys(res).forEach(key => {\n        item[key] = res[key]\n      })\n    }\n  } else {\n    console.warn(new Error('未传人点位更新对象回调方法 dotUpdateObjectCall'))\n  }\n\n  target.visible = item.show || !pageOpts.dotShowStrict\n  const dom = target.element?.getElementsByClassName('inner')[0] as HTMLElement\n  if (dom) {\n    const { size, color } = item.font || {}\n    if (size != void 0) {\n      dom.style.fontSize = typeof size === 'string' ? size : size + 'px'\n    }\n    if (color != void 0) {\n      dom.style.color = color\n    }\n    dom.textContent = `${item.value || 0}${item.unit}`\n  }\n}\n\n// 创建 dot 点位\nconst createDotObject = item => {\n  updateDotVisible(\n    scene.addDot(item, e => {\n      console.log(e)\n    })\n  )\n}\n\n// 循环加载对象\nconst loopLoadObject = async (item: ObjectItem) => {\n  if (!item) return\n  const { type, url } = item\n  const obj = getModel(type)\n  if (!obj) {\n    // 地址存在 属于 base 底座\n    if (!!url) {\n      // await loadBase(item)\n    } else {\n      // 点位\n      if (type === pageOpts.dotKey) {\n        createDotObject(item)\n      }\n    }\n    return\n  }\n\n  const { floorModelType = [], anchorType = [], carType = [], animationModelType = [] } = pageOpts\n\n  // 深克隆\n  let model = Utils.modelDeepClone(obj)\n  const { position: POS, scale: SCA, rotation: ROT } = Utils.get_P_S_R_param(model, item)\n  const [x, y, z] = POS\n\n  // 缩放\n  model.scale.set(...SCA)\n\n  // 摆放位置\n  model.position.set(x, y, z)\n  // 转换方位\n  model.rotation.set(...ROT)\n\n  model._isBuilding_ = true\n  model.data = item\n\n  // 汽车\n  if (carType.includes(type)) {\n    executeCarRunging(model)\n  }\n\n  // 动画\n  if (animationModelType.includes(type)) {\n    scene.addModelAnimate(model, obj.animations, true, 0.1)\n  }\n\n  // 楼层\n  if (floorModelType.includes(type)) {\n    // 原始点位 备用\n    model._position_ = { x, y, z }\n    model._isFloor_ = true\n  }\n\n  // 地面\n  model.__ground__ = type === GROUND\n\n  // 锚点\n  if (anchorType.includes(type)) {\n    model._isAnchor_ = true\n    scene.addAnchor(model)\n  }\n  // 聚光灯\n  else if (model.isSpotLight) {\n    scene.addLight(item, model, true)\n  } else {\n    scene.addBuilding(model)\n  }\n\n  return Promise.resolve()\n}\n\n// 初始化设备列表\nconst initDevices = () => {\n  let i = 0,\n    len = modelConfigList.value.length\n  return new Promise(resolve => {\n    if (len == 0) return resolve(null)\n    const _loop = async () => {\n      const item = modelConfigList.value[i]\n      await loopLoadObject(item)\n      i++\n      if (i < len) {\n        _loop()\n      } else {\n        resolve(i)\n      }\n    }\n    _loop()\n  })\n}\n\n// 组装场景\nconst assemblyScenario = async () => {\n  // 加载进度 100\n  progress.percentage = 100\n  progress.show = false\n\n  // 清除\n  scene.clearBuilding()\n\n  await nextTick()\n  await initDevices()\n\n  // 巡航\n  scene.setCruisePoint(pageOpts.cruise.points)\n\n  const to = scene.getAnimTargetPos(pageOpts.config || {})\n  // 入场动画\n  // @ts-ignore\n  Utils.cameraInSceneAnimate(scene.camera, to, scene.controls.target).then(() => {\n    scene.controlSave()\n  })\n}\n\n// 创建机器人\nlet robotObj: any\nconst createRoblt = () => {\n  robotObj = getModel(ROBOT)\n  robotObj.position.z = 0.16\n  robotObj.rotation.z = Math.PI * 0.5\n  scene.addObject(robotObj)\n}\n\n// 创建人物\nconst createCharacter = () => {\n  const obj = getModel(CHARACTER)\n  obj.traverse(el => {\n    if (el.isMesh) {\n      el.castShadow = true\n    }\n  })\n  const move = {\n    x: -80.6,\n    y: 0.16,\n    z: 193.4\n  }\n\n  // move.x = 98.4\n  // move.z = -87\n  scene.addCharacter(obj, move)\n}\n\n// 加载\nconst modelConfigList = ref<ObjectItem[]>([])\nconst load = () => {\n  loadModels(pageOpts.models, () => {\n    request.getConfig().then(async res => {\n      let json = {}\n      if (res.ConfigJson instanceof Object) {\n        json = res.ConfigJson\n      } else if (typeof res.ConfigJson == 'string') {\n        try {\n          json = JSON.parse(res.ConfigJson)\n        } catch (er) {}\n      }\n      modelConfigList.value = res.JsonList\n      Object.keys(json).forEach(key => {\n        pageOpts.config && (pageOpts.config[key] = json[key])\n      })\n      await assemblyScenario()\n      createRoblt()\n      createCharacter()\n      scene.addVideoMaterial()\n    })\n  })\n}\n\n// 更新\nconst updateObject = isRandom => {\n  const emitData: ObjectItem[] = []\n\n  scene.getAll().forEach((el: any, _i) => {\n    if (!el.data) return\n\n    const data = el.data\n    // 数据参数\n    let type = data.type\n\n    // 点位\n    if (type === pageOpts.dotKey) {\n      updateDotVisible(el)\n      return\n    }\n\n    if (typeof updateObjectCall === 'function') {\n      const res = updateObjectCall(data, isRandom)\n      if (!res) return\n      if (typeof res !== 'object') {\n        console.warn(Error('更新回调函数返回对象不为 Object，当前类型：' + typeof res))\n      }\n      Object.keys(res).forEach(key => {\n        data[key] = res[key]\n      })\n    }\n    emitData.push(toRaw(data))\n\n    let { status = 0, error = 0, remote = 0, local = 0, disabled = 0 } = data\n    // 获取颜色\n    const cKey = error > 0 ? 'error' : status > 0 ? 'runing' : 'normal'\n    const cobj = COLORS[cKey]\n    let color = cobj[type] != void 0 ? cobj[type] : cobj.color\n\n    // if (typeof props.getColorCall === 'function') {\n    //   const cr = props.getColorCall(data)\n    //   if (cr) color = cr\n    // }\n\n    changeModleStatusColor({\n      type,\n      el,\n      colorObj: cobj,\n      color,\n      paused: status == 0,\n      error: error > 0,\n      remote: remote > 0,\n      local: local > 0,\n      disabled: disabled > 0\n    })\n  })\n}\n\n// 楼层移动至\nconst onFloorMoveTo = item => {\n  floorOpts.active = item.key\n  const liftName = '电梯门' + item.key\n  scene.waitLift(\n    {\n      data: {\n        bind: liftName,\n        to: {\n          y: item.y\n        }\n      }\n    },\n    true\n  )\n}\n\nconst initPage = () => {\n  load()\n  backgroundLoad(scene, pageOpts.skyCode as any)\n}\n\nlet scene: InstanceType<typeof ParkThreeScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n\n  const liftMeshName = '轿厢-ground'\n  scene = new ParkThreeScene(options, {\n    groundMeshName: ['地面', '楼板', 'mesh_0_4', 'ground', liftMeshName],\n    onDblclick: object => {\n      if (object.data?.type === 'building_commercial_5') {\n        virtualization(\n          scene.buildingGroup?.children.filter(el => !['地面', '场景'].includes(el.name)) || [],\n          object,\n          {\n            wireframe: !false,\n            opacity: 0.1\n          }\n        )\n      } else {\n        closeVirtualization(scene.buildingGroup?.children)\n      }\n    },\n    onClickLeft(object, _intersct) {\n      if (object && object.data) {\n        const data = object.data\n        switch (data?.type) {\n          case VIDEOPLAY:\n            scene.videoPlay(object)\n            break\n          case OPEN_THE_DOOR: // 开门\n          case HALF_OPEN_THE_DOOR: // 半开门-90 度开门\n            scene.openTheDoor(object, data.type === HALF_OPEN_THE_DOOR)\n            break\n          case DOUBLE_OPEN_THE_DOOR: // 双开门\n            scene.openTheDoubleSlidingDoor(object)\n            break\n          case WAIT_LIFT: // 等电梯\n            scene.waitLift(object)\n            break\n          case SLIDING_DOOR: // 推拉门\n            scene.openTheSlidingDoor(object)\n            break\n          case LIGHT_SWITCH: // 开关灯\n            scene.lightSwitch(object)\n            break\n        }\n      }\n    },\n    onClickGround: (_object, intersct) => {\n      scene.mouseClickGround(intersct).then(_obj => {\n        floorOpts.show = intersct.object.name === liftMeshName\n      })\n    },\n    onClickRight: e => {\n      console.log(e)\n    },\n    onHoverAnchor: (object, style) => {\n      const isShow = !!object && object.object._isAnchor_\n      tipOpts.show = isShow\n      if (isShow) {\n        tipOpts.style.top = style.top\n        tipOpts.style.left = style.left\n        const data = object.object.data\n        tipOpts.msg = `\n          <p>${data.name}</p>\n          <p>类型：${data.type}</p>\n          <p>绑定：${data.bind || '无'}</p>\n        `\n      }\n    }\n  })\n\n  scene.run()\n  useResize(scene).resize()\n\n  initPage()\n})\n</script>\n\n<style lang=\"scss\" module>\n@import './style.scss';\n</style>\n","import { Axios, Api } from '@/config'\n\nexport const getConfig = () => {\n  return Axios.get(Api.d3.park)\n}\n"],"names":["ROBOT","CHARACTER","GROUND","VIDEOPLAY","OPEN_THE_DOOR","HALF_OPEN_THE_DOOR","DOUBLE_OPEN_THE_DOOR","WAIT_LIFT","SLIDING_DOOR","LIGHT_SWITCH","POINT_UP","DEFAULTCONFIG","Hooks","ThreeScene.Hooks","Utils","ThreeScene.Utils","raycaster","pointer","update","raycasterUpdate","style","useRaycaster","initCSS2DRender","createCSS2DDom","useCSS2D","createDiffusion","updateDiffusion","useDiffusion","createMove","moveAnimate","useMoveAnimate","addLensflare","useLensflare","base","VITE_BEFORE_STATIC_PAT","createVideoDom","src","dom","document","createElement","loop","videoCoverTexture","THREE.TextureLoader","load","sightMap","ParkThreeScene","ThreeScene.Scene","constructor","options","extend","super","__publicField","this","css2DRender","container","domElement","className","mouseClickDiffusion","rotation","x","Math","PI","position","y","visible","addObject","createClock","currentSight","historyTarget","THREE.Vector3","historyCameraPosition","animateModels","bindEvent","addBuildingGroup","addAnchorGroup","addDotGroup","addLightGroup","group","THREE.Group","name","buildingGroup","clearBuilding","disposeObj","clearAnchor","clearDot","clearLightGroup","addBuilding","obj","add","anchorGroup","addAnchor","dotGroup","scene","addDot","item","clickBack","pos","size","color","font","z","label","onClick","data","_position_","_a","lightGroup","addLight","hasHelper","to","target","set","helper","THREE.SpotLightHelper","directionalLight","lensflare","sun","water","waterGeometry","THREE.PlaneGeometry","Water","textureWidth","textureHeight","waterNormals","texture","wrapS","wrapT","THREE.RepeatWrapping","sunDirection","sunColor","waterColor","distortionScale","material","uniforms","value","createWater","updateSkyAndSun","sky","skyUniforms","effectController","phi","THREE.MathUtils","degToRad","theta","setFromSphericalCoords","copy","normalize","pmremGenerator","THREE.PMREMGenerator","renderer","environment","fromScene","toneMappingExposure","addCharacter","model","point","character","animations","mixer","THREE.AnimationMixer","actions","i","length","clip","action","clipAction","play","runging","extra","toggleSight","cruise","runing","toggleCruise","controls","sight","isCharacter","maxDistance","screenSpacePanning","enablePan","maxPolarAngle","x2","y2","z2","camera","x3","y3","z3","lookAt","characterAccelerate","moveFactor","console","log","setControlTarget","mouseClickGround","intersct","Promise","reject","resolve","stop","addVideoMaterial","videoDom","videoTexture","THREE.VideoTexture","geometry","THREE.MeshPhongMaterial","map","mesh","THREE.Mesh","__video_texture__","__cover_texture__","__video__","groundMirror","Reflector","clipBias","window","innerWidth","devicePixelRatio","innerHeight","rotateX","dbObj","getObjectByName","videoDom2","videoTexture2","clone","videoPlay","object","vobj","bind","paused","pause","openTheDoor","isHalf","dobj","__open__","TWEEN.Tween","delay","start","__position__","openTheDoubleSlidingDoor","scale","isOpen","left","children","find","el","indexOf","right","lpos","rpos","rMoveX","onComplete","openTheSlidingDoor","rMoveY","waitLift","fllow","liftGroupName","box","cpos","bpos","bindLift","__bind_lift__","then","onUpdate","openLift","lightSwitch","light","_b","getObjectsByProperty","forEach","addModelAnimate","timeScale","reduce","ob","cur","key","__action__","__mixer__","push","modelAnimate","render","animateCall","delta","clock","getDelta","restoreAnchorMaterial","onDblclick","e","setFromCamera","objects","interscts","intersectObjects","findParentGroup","onPointerMove","checkIntersectObjects","onPointerUp","isClick","timeStamp","tsp","button","onClickRight","type","filter","it","__ground__","concat","cursor","isClickGround","groundMeshName","some","t","_c","onClickGround","_d","onClickLeft","_e","hoverAnchor","onHoverAnchor","_isAnchor_","__change_color__","mat","__mat_color__","THREE.Color","uuid","traverse","isSprite","_find","_isBuilding_","parent","getFloor","_isFloor_","hideOmitFloor","getAll","getFlowMark","mark","followMark","getAnimTargetPos","config","_to","_target","resize","width","height","setSize","dispose","dotUpdateObjectCall","_group","val","random","show","Number","toFixed","toString","substring","updateObjectCall","_obj","isRandom","status","error","disabled","ctl","floor","remote","local","colors","normal","main","text","FM","pageOpts","reactive","devEnv","baseUrl","bgColor","skyCode","env","dotKey","dotShowStrict","colorMeshName","floorModelType","anchorType","carType","animationModelType","auto","mapUrl","repeat","segment","tension","speed","mapSpeed","points","offset","animateBack","cruiseCurve","robotObj","getOffsetPoint","getPointAt","ts","angle","atan2","models","url","range","intensity","distance","decay","floorOpts","active","list","tipOpts","top","msg","containerRef","ref","COLORS","deepMerge","changeBackground","backgroundLoad","useBackground","progress","loadModels","getModel","virtualization","closeVirtualization","useModelLoader","indexDB","cache","dbName","tbName","version","grid","axes","updateDotVisible","res","Object","keys","element","getElementsByClassName","fontSize","textContent","unit","loopLoadObject","async","createDotObject","modelDeepClone","POS","SCA","ROT","get_P_S_R_param","includes","randInt","tween1","tween2","chain","executeCarRunging","isSpotLight","assemblyScenario","percentage","nextTick","len","modelConfigList","_loop","initDevices","setCruisePoint","nA","cameraInSceneAnimate","controlSave","Axios","get","Api","d3","park","json","ConfigJson","JSON","parse","er","JsonList","isMesh","castShadow","updateObject","emitData","_i","warn","Error","toRaw","cobj","opts","_type","colorObj","_cobj","getColorArr","meshs","setMaterialColor","changeModleStatusColor","onMounted","liftMeshName","wireframe","opacity","_intersct","_object","isShow","run","useResize","liftName"],"mappings":"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"}