{"version":3,"file":"index-3c1e40ce.js","sources":["../../../code/src/pages/webgl/effect/sky/methods.ts","../../../code/src/pages/webgl/effect/sky/index.vue"],"sourcesContent":["import * as THREE from 'three'\nimport { Water } from 'three/examples/jsm/objects/Water'\n\nimport * as ThreeScene from 'three-scene'\n\n// const Hooks = ThreeScene.Hooks\n\nconst base = import.meta.env.VITE_BEFORE_STATIC_PATH\nconst textureload = new THREE.TextureLoader()\nconst texture = textureload.load(`${base}/oss/textures/effect/sky.jpg`, tx => {\n  const repeat = [1, 1]\n  tx.wrapT = THREE.RepeatWrapping\n  tx.wrapS = THREE.RepeatWrapping\n  tx.repeat.x = repeat[0]\n  tx.repeat.y = repeat[1]\n})\n\nconst createWater = () => {\n  // 创建水面\n  const waterGeometry = new THREE.CircleGeometry(500, 128)\n  const water = new Water(waterGeometry, {\n    textureWidth: 512,\n    textureHeight: 512,\n    waterNormals: new THREE.TextureLoader().load(\n      base + '/oss/textures/waternormals.jpg',\n      texture => {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      }\n    ),\n    sunDirection: new THREE.Vector3(),\n    sunColor: 0xf00f00,\n    waterColor: 0x01688b,\n    distortionScale: 3.5\n  })\n  water.rotation.x = -Math.PI / 2\n  water.rotation.z = Math.PI * 0.05\n  water.material.uniforms.size.value = 0.5\n  return water\n}\n\nexport class SkyScene extends ThreeScene.Scene {\n  // 水面\n  water?: InstanceType<typeof Water>\n\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    this.addModel()\n  }\n\n  addModel() {\n    this.water = createWater()\n    this.addObject(this.water)\n\n    const spare = new THREE.Mesh(\n      new THREE.SphereGeometry(5000, 168, 168, 0, Math.PI * 2, 0, Math.PI * 1),\n      new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.BackSide\n        // transparent: true\n        // blending: THREE.AdditiveBlending\n        // color: 0x67a8e8\n      })\n    )\n\n    this.addObject(spare)\n  }\n\n  modelAnimate(): void {\n    if (texture) {\n      texture.offset.x += 0.0002\n    }\n\n    // 水面波动\n    if (this.water) {\n      this.water.material.uniforms['time'].value += 1 / 60\n    }\n  }\n}\n","<template>\n  <div class=\"three-page\">\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { SkyScene } from './methods'\n\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof SkyScene>[0] = {\n  grid: {\n    // visible: true\n  },\n  controls: {\n    enablePan: false,\n    minDistance: 50,\n    maxDistance: 200,\n    maxPolarAngle: Math.PI * 0.45\n  },\n  ambientLight: {\n    intensity: 0.5\n  },\n  directionalLight: {\n    intensity: 0.5\n  },\n  camera: {\n    position: [0, 10, 100]\n  }\n}\nlet scene: InstanceType<typeof SkyScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new SkyScene(options)\n  scene.run()\n\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["texture","THREE.TextureLoader","load","tx","repeat","wrapT","THREE.RepeatWrapping","wrapS","x","y","SkyScene","ThreeScene.Scene","constructor","options","super","__publicField","this","addModel","water","waterGeometry","THREE.CircleGeometry","Water","textureWidth","textureHeight","waterNormals","texture2","sunDirection","THREE.Vector3","sunColor","waterColor","distortionScale","rotation","Math","PI","z","material","uniforms","size","value","createWater","addObject","spare","THREE.Mesh","THREE.SphereGeometry","THREE.MeshBasicMaterial","map","side","THREE.BackSide","modelAnimate","offset","containerRef","ref","grid","controls","enablePan","minDistance","maxDistance","maxPolarAngle","ambientLight","intensity","directionalLight","camera","position","scene","onMounted","container","run","useResize","resize"],"mappings":"sYAOA,MAEMA,GADc,IAAIC,GACIC,KAAK,gCAA6CC,IACtE,MAAAC,EAAS,CAAC,EAAG,GACnBD,EAAGE,MAAQC,EACXH,EAAGI,MAAQD,EACRH,EAAAC,OAAOI,EAAIJ,EAAO,GAClBD,EAAAC,OAAOK,EAAIL,EAAO,EAAC,IA0BX,MAAAM,UAAiBC,EAI5B,WAAAC,CAAYC,GACVC,MAAMD,GAHRE,EAAAC,KAAA,SAKEA,KAAKC,UACP,CAEA,QAAAA,GACED,KAAKE,MAlCW,MAElB,MAAMC,EAAgB,IAAIC,EAAqB,IAAK,KAC9CF,EAAQ,IAAIG,EAAMF,EAAe,CACrCG,aAAc,IACdC,cAAe,IACfC,cAAc,IAAIvB,GAAsBC,KAC/B,kCACPF,IACUyB,EAAAlB,MAAQP,EAAQK,MAAQC,CAAAA,IAGpCoB,aAAc,IAAIC,EAClBC,SAAU,SACVC,WAAY,MACZC,gBAAiB,MAKZ,OAHPZ,EAAMa,SAASvB,GAAKwB,KAAKC,GAAK,EACxBf,EAAAa,SAASG,EAAc,IAAVF,KAAKC,GAClBf,EAAAiB,SAASC,SAASC,KAAKC,MAAQ,GAC9BpB,CAAA,EAcQqB,GACRvB,KAAAwB,UAAUxB,KAAKE,OAEd,MAAAuB,EAAQ,IAAIC,EAChB,IAAIC,EAAqB,IAAM,IAAK,IAAK,EAAa,EAAVX,KAAKC,GAAQ,EAAa,EAAVD,KAAKC,IACjE,IAAIW,EAAwB,CAC1BC,IAAK7C,EACL8C,KAAMC,KAOV/B,KAAKwB,UAAUC,EACjB,CAEA,YAAAO,GACMhD,IACFA,EAAQiD,OAAOzC,GAAK,MAIlBQ,KAAKE,QACPF,KAAKE,MAAMiB,SAASC,SAAe,KAAEE,OAAS,EAAI,GAEtD,4DClEF,MAAAY,EAAAC,IACAtC,EAAA,CAA2DuC,KAAA,CACnD,EAENC,SAAA,CACUC,WAAA,EACGC,YAAA,GACEC,YAAA,IACAC,cAAA,IAAAzB,KAAAC,IAEfyB,aAAA,CACcC,UAAA,IAEdC,iBAAA,CACkBD,UAAA,IAElBE,OAAA,CACQC,SAAA,CAAA,EAAA,GAAA,OAIV,IAAAC,SAEAC,GAAA,KACEnD,EAAAoD,UAAAf,EAAAZ,MACAyB,EAAA,IAAArD,EAAAG,GACAkD,EAAAG,MAEAC,EAAAJ,GAAAK"}