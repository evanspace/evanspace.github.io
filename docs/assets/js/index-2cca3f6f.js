var e=Object.defineProperty,t=(t,n,o)=>(((t,n,o)=>{n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[n]=o})(t,"symbol"!=typeof n?n+"":n,o),o);import{l as n,A as o,n as a,_ as r}from"./common-412f8517.js";import{cv as i,cw as s,bb as l,bG as c,b4 as u,c0 as d,ca as p,bd as h,cb as m,cc as v,bs as f,b$ as g,cx as y,cy as w,bt as x,cz as b,b5 as C,cA as S,cB as M,cC as P,cj as I,cD as _,ck as O,bx as z,br as L,a$ as j,bm as R,bl as G,bo as T,bv as k,cE as E,cd as B,by as F,bk as D,aZ as U,bw as W,bp as $,b0 as X,cF as N,cG as A,cH as V,b3 as H,cI as J,cJ as q,bq as Z,_ as Y,cK as K,j as Q,cL as ee,e as te,m as ne,o as oe,g as ae,h as re,u as ie,n as se,ab as le,t as ce,D as ue,F as de,r as pe}from"./vendor-8d16b5c9.js";import{d as he,r as me,T as ve,u as fe}from"./resize-c8290224.js";const ge=()=>({initCSS3DRender:(e,t)=>{const{width:n,height:o}=e,a=new I;return a.setSize(n,o),a.domElement.style.position="absolute",a.domElement.style.left="0px",a.domElement.style.top="0px",a.domElement.style.pointerEvents="none",t.appendChild(a.domElement),a},createCSS3DDom:e=>{const{name:t,className:n="",onClick:o,position:a,sprite:r}=e,i=document.createElement("div");i.innerHTML=t,i.className=n;const s=r?new _(i):new O(i);return i.style.pointerEvents=o?"auto":"none",i.style.position="absolute","function"==typeof o&&i.addEventListener("click",o),a&&s.position.set(...a),s}}),{createCSS3DDom:ye}=ge(),we=1,xe=40,be=3377879,Ce=9633791,Se=1066618,Me=9633791,Pe=9559027,Ie=6421501,_e=11856636,Oe=13303807,ze=6945023,{createCorrugatedPlate:Le,update:je}=((e={})=>{const t=he({range:100,interval:.8,size:.2,color:47273,light:881527,factor:1},e);return{createCorrugatedPlate:()=>{let{range:e,color:n,light:o,factor:a}=t;e*=a;const r=(()=>{let{range:e,interval:n,size:o,factor:a}=t;e*=a,n*=a,o*=a;const r=[],i=Math.floor(e/n);for(let t=-i;t<=i;t++)for(let e=-i;e<=i;e++){const a=new d(o,o),i=t*n,s=e*n,l=new p,c=new h(i,-o,s),u=new m,f=new v,g=new h(1,1,1);u.setFromEuler(f),l.compose(c,u,g),a.applyMatrix4(l),r.push(a)}return r})(),f=i(r),g=new s({uniforms:{uColor:{value:new l(o)},uTcolor:{value:new l(n)},uRadius:{value:1.25},uLength:{value:e/10},uRange:{value:e}},vertexShader:"\n        varying vec3 vp;\n        void main(){\n          vp = position;\n          gl_Position\t= projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        varying vec3 vp;\n        uniform vec3 uColor;\n        uniform vec3 uTcolor;\n        uniform float uRadius;\n        uniform float uLength;\n        float getLeng(float x, float y){\n          return  sqrt((x-0.0)*(x-0.0)+(y-0.0)*(y-0.0));\n        }\n        void main(){\n          float uOpacity = 0.8;\n          vec3 vColor = uColor;\n          float length = getLeng(vp.x,vp.z);\n          if ( length <= uRadius && length > uRadius - uLength ) {\n            float op = sin( (uRadius - length) / uLength ) ;\n            uOpacity = op;\n            if ( vp.y < 0.0 ) {\n              vColor = uColor * op;\n            } else {\n              vColor = uTcolor;\n            };\n            vColor = uTcolor;\n          }\n          gl_FragColor = vec4(vColor,uOpacity);\n        }\n      ",transparent:!0,depthWrite:!1,side:c}),y=new u(f,g);return y.name="波纹板",y},update:(e,t)=>{const n=e.material,o=n.uniforms.uRange.value,a=n.uniforms.uLength.value;n.uniforms.uRadius.value+=t*(o/4),n.uniforms.uRadius.value>=o+a&&(n.uniforms.uRadius.value=0)}}})({factor:xe,color:be,light:Se}),{createOutline:Re,update:Ge}=((e={})=>{const t=he({size:.1,color:16085360,range:500,factor:1,speed:6},e);return{createOutline:e=>{const{size:n,factor:o,range:a,color:r}=t,i=new Float32Array(e),c=new f;c.setAttribute("position",new g(i,3));const u=new Float32Array(Math.floor(i.length/3)).map(((e,t)=>t));c.setAttribute("aIndex",new g(u,1));const d=new s({vertexShader:"\n        attribute float aOpacity;\n        uniform float uSize;\n\n        attribute float aIndex;\n        varying vec3 vp;\n        varying float vertexIndex;\n\n        void main(){\n          gl_Position = projectionMatrix*modelViewMatrix*vec4(position,1.0);\n          gl_PointSize = uSize;\n\n          vp = position;\n          vertexIndex = aIndex;\n        }\n      ",fragmentShader:"\n        varying float vertexIndex;\n        uniform vec3 uColor;\n        uniform float uIndex;\n        uniform float uRange;\n\n        float invert(float n){\n          return 1.-n;\n        }\n\n        void main(){\n          float uOpacity = 1.0;\n          if(vertexIndex <= uIndex || vertexIndex >= (uRange + uIndex)){\n              discard;\n          }\n          uOpacity = (vertexIndex - uIndex)/uRange;\n          if ( uOpacity < 0.2) {\n            discard;\n          }\n          vec2 uv=vec2(gl_PointCoord.x,invert(gl_PointCoord.y));\n          vec2 cUv=2.*uv-1.;\n          vec4 color=vec4(1./length(cUv));\n          color*=uOpacity;\n          color.rgb*=uColor;\n          gl_FragColor=color;\n        }\n      ",transparent:!0,depthTest:!1,uniforms:{uSize:{value:n*o},uIndex:{value:0},uLength:{value:u.length},uRange:{value:a},uColor:{value:new l(r)}}}),p=new y(c,d);return p.name="轮廓",p.scale.setScalar(o),p},update:e=>{const n=e.material,o=n.uniforms.uLength.value;n.uniforms.uIndex.value+=t.speed,n.uniforms.uIndex.value>=o&&(n.uniforms.uIndex.value=0)}}})({factor:xe,color:_e}),{getBoundingBox:Te}={getBoundingBox:e=>{var t=new w;t.expandByObject(e);var n=new h;t.getSize(n);var o=new h;return t.getCenter(o),{box3:t,center:o,size:n}}},{createCountryFlatLine:ke,getPoints:Ee}=(()=>{const e=(e,t,n="LineLoop")=>{let o;if("Line2"===n){const n=new S;n.setPositions(e),o=new M(n,t),o.name="countryLine2",o.computeLineDistances()}else{const a=new f;a.setFromPoints(e),o=new P[n](a,t),o.name="countryLine"}return o};return{createCountryFlatLine:(t,n={},o="LineLoop")=>{let a={color:65535,linewidth:1,depthTest:!1};a=he(a,n);let r=new x(a);"Line2"===o&&(r=new b(a));let i=t.features,s=new C;for(let l=0;l<i.length;l++){const t=i[l].geometry.coordinates;for(let n=0;n<t.length;n++){const a=t[n],i=[];"Line2"===o?a.forEach((e=>{e.forEach((e=>{i.push(e[0],0,-e[1])}))})):a.forEach((e=>{e.forEach((e=>{i.push(new h(e[0],e[1],0))}))}));let l=e(i,r,o);s.add(l)}}return s},getPoints:(e,t=0,n)=>{let o=e.features;const a=[];for(let r=0;r<o.length;r++){const e=o[r].geometry.coordinates;for(let o=0;o<e.length;o++)e[o].forEach((e=>{e.forEach((e=>{n?a.push(new h(e[0],t,-e[1])):a.push(e[0],t,-e[1])}))}))}return a}}})(),{initCSS3DRender:Be,createCSS3DDom:Fe}=ge(),{createMarkLight:De}=(e=>{const t=he({pointTextureUrl:"/oss/textures/map/point.png",circleTextureUrl:"/oss/textures/map/circle.png",lightTextureUrl:"/oss/textures/map/light.png",factor:1,color:65535},e),n=new z;return{createMarkLight:(e=[0,0,0],o=10)=>{const a=new C,r=new d(o/6.219,o);r.rotateX(-Math.PI/2),r.translate(0,0,o/2);const i=new L({map:n.load(t.lightTextureUrl),color:t.color,transparent:!0,depthWrite:!1,side:c});let s=new u(r,i);s.rotateX(Math.PI),s.position.z=o,s.renderOrder=3,s.name="光柱 01";let l=s.clone();l.name="光柱 02",l.rotateZ(Math.PI/2);const p=(()=>{const e=new d(3,3),o=new L({map:n.load(t.pointTextureUrl),color:t.color,side:c,transparent:!0,depthWrite:!1});let a=new u(e,o);a.renderOrder=1,a.name="底部光点";const r=.3*t.factor;return a.scale.setScalar(r),a})(),h=(()=>{const e=new d(3,3),o=new L({map:n.load(t.circleTextureUrl),color:t.color,side:c,opacity:0,transparent:!0,depthWrite:!1});let a=new u(e,o);a.renderOrder=2,a.name="createLightHalo";const r=.5*t.factor;a.scale.setScalar(r);const i=me(0,2e3);return a.tween1=new j({scale:r,opacity:0}).to({scale:1.5*r,opacity:1},1e3).delay(i).onUpdate((e=>{let{scale:t,opacity:n}=e;a.scale.setScalar(t),a.material.opacity=n})),a.tween2=new j({scale:1.5*r,opacity:1}).to({scale:2*r,opacity:0},1e3).onUpdate((e=>{let{scale:t,opacity:n}=e;a.scale.setScalar(t),a.material.opacity=n})),a.tween1.chain(a.tween2),a.tween2.chain(a.tween1),a.tween1.start(),a})();return a.add(s,l,p,h),a.position.set(...e),a.rotateX(.5*Math.PI),a.name="光柱标记",a}}})({pointTextureUrl:"/oss/textures/map/point.png",circleTextureUrl:"/oss/textures/map/circle.png",lightTextureUrl:"/oss/textures/map/light.png",factor:xe,color:Oe}),{raycaster:Ue,pointer:We,style:$e,update:Xe}=(()=>{const e=new R,t=new G,n={left:0,top:0};return{raycaster:e,pointer:t,style:n,update:(e,o,a=1)=>{const r=o.getBoundingClientRect()||{left:0,top:0};t.x=(e.clientX-r.left)/(o.clientWidth*a)*2-1,t.y=-(e.clientY-r.top)/(o.clientHeight*a)*2+1;const i=o.clientWidth/2,s=o.clientHeight/2;n.left=t.x*i+i,n.top=-t.y*s+s}}})(),{createFlywire:Ne,update:Ae}=((e={})=>{const t=he({depth:0,height:4,divisions:1e3,color:16777215,flyColor:16761095,pointColor:16715760,pointWidth:2.5,flyPointWidth:2.4,tubularSegments:256,radius:.5,radialSegments:8,closed:!1,length:100,factor:1,speed:4},e),n=new s({depthTest:!1,uniforms:{uColor:{value:new l(t.flyColor)},uIndex:{value:0},uTotal:{value:t.divisions},uWidth:{value:t.flyPointWidth},uLength:{value:t.length}},vertexShader:"\n      attribute float aIndex;\n      uniform float uIndex;\n      uniform float uWidth;\n      uniform vec3 uColor;\n      varying float vSize;\n      uniform float uLength;\n\n      void main(){\n          vec4 viewPosition = viewMatrix * modelMatrix * vec4(position,1);\n          gl_Position = projectionMatrix * viewPosition;\n\n          if(aIndex >= uIndex - uLength && aIndex < uIndex){\n            vSize = uWidth * ((aIndex - uIndex + uLength) / uLength);\n          }\n          gl_PointSize = vSize;\n      }\n    ",side:c,fragmentShader:"\n      varying float vSize;\n      uniform vec3 uColor;\n      void main(){\n          if(vSize<=0.0){\n            gl_FragColor = vec4(1,0,0,0);\n          }else{\n            gl_FragColor = vec4(uColor,1);\n          }\n      }\n    ",transparent:!0,vertexColors:!1}),o=new s({uniforms:{uColor:{value:new l(t.pointColor)},uOpacity:{value:1},uSpeed:{value:.1},uSge:{value:4},uRadius:{value:t.pointWidth*t.factor/2},time:{value:0}},transparent:!0,depthTest:!1,vertexShader:"\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        // 最终顶点位置信息=投影矩阵*模型视图矩阵*每个顶点坐标\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n      }\n    ",fragmentShader:"\n      varying vec2 vUv;\n      uniform vec3 uColor;\n      uniform float uOpacity;\n      uniform float uSpeed;\n      uniform float uSge;\n      uniform float time;\n      float PI = 3.14159265;\n      float drawCircle(float index, float range) {\n        float opacity = 1.0;\n        if (index >= 1.0 - range) {\n          opacity = 1.0 - (index - (1.0 - range)) / range;\n        } else if(index <= range) {\n          opacity = index / range;\n        }\n        return opacity;\n      }\n      float distanceTo(vec2 src, vec2 dst) {\n        float dx = src.x - dst.x;\n        float dy = src.y - dst.y;\n        float dv = dx * dx + dy * dy;\n        return sqrt(dv);\n      }\n      void main() {\n        float iTime = -time * uSpeed;\n        float opacity = 0.0;\n        float len = distanceTo(vec2(0.5, 0.5), vec2(vUv.x, vUv.y));\n\n        float size = 1.0 / uSge;\n        vec2 range = vec2(0.65, 0.75);\n        float index = mod(iTime + len, size);\n        // 中心圆\n        vec2 cRadius = vec2(0.06, 0.12);\n\n        if (index < size && len <= 0.5) {\n          float i = sin(index / size * PI);\n\n          // 处理边缘锯齿\n          if (i >= range.x && i <= range.y){\n            // 归一\n            float t = (i - range.x) / (range.y - range.x);\n            // 边缘锯齿范围\n            float r = 0.3;\n            opacity = drawCircle(t, r);\n          }\n          // 渐变\n          opacity *=  1.0 - len / 0.5;\n        };\n        gl_FragColor = vec4(uColor, uOpacity * opacity);\n      }\n    ",side:c}),a=e=>{const[n,a]=e;let{pointWidth:r,depth:i,factor:s}=t;const l=r*s;i*=s;const c=new d(l,l,1,1),p=new u(c,o);return p.position.set(n,i,-a),p.rotateX(.5*-Math.PI),p};return{createFlywire:e=>{const o=new C,r=a(e[0]),i=a(e[1]);o.add(r,i);const c=(e=>{const[n,o]=e[0],[a,r]=e[1];let{depth:i,height:s,factor:l,divisions:c}=t;s=(i+s)*l,i*=l;const u=new h(n,i,-o),d=new h(n+(a-n)/4,s,-(o+(r-o)/4)),p=new h(n+3*(a-n)/4,s,-(o+3*(r-o)/4)),m=new h(a,i,-r);return new E(u,d,p,m).getPoints(c)})(e),d=new T(c,!1,"centripetal",.5),p=new k(d,t.tubularSegments,t.radius,t.radialSegments,t.closed),m=new s({transparent:!0,opacity:1,depthTest:!1,vertexColors:!1,uniforms:{uColor:{value:new l(t.color)},uOpacity:{value:.6}},vertexShader:"\n        varying vec3 vColor;\n        uniform vec3 uColor;\n        void main() {\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        uniform float uOpacity;\n        void main() {\n          gl_FragColor = vec4(uColor, uOpacity);\n        }\n      "}),v=new u(p,m);v.renderOrder=10;const w=(e=>{const t=new Float32Array(e.map(((e,t)=>t))),o=(new f).setFromPoints(e);return o.setAttribute("aIndex",new g(t,1)),new y(o,n)})(c);return o.add(v,w),o},update:()=>{const e=n,a=e.uniforms.uTotal.value;e.uniforms.uIndex.value+=t.speed,e.uniforms.uIndex.value>=a&&(e.uniforms.uIndex.value=0);const r=.001*performance.now();o.uniforms.time.value=r}}})({depth:we,color:Pe,flyColor:Ie,pointColor:Pe,factor:xe}),{createBar:Ve}=((e={})=>{const t=he({height:10,size:2,factor:1,color1:1048575,color2:16777215},e);return{createBar:(e={})=>{let{size:n,height:o,factor:a,color1:r,color2:i}=t;n*=a,o*=a,o*=e.heightRatio??a;const[c,d,p]=e.position||[0,0,0],h=new C,m=new B(n,n,o),v=new s({depthTest:!1,transparent:!0,vertexColors:!1,uniforms:{uColor1:{value:new l(r)},uColor2:{value:new l(i)},uOpacity:{value:.6}},vertexShader:"\n        varying vec3 vColor;\n        uniform vec3 uColor1;\n        uniform vec3 uColor2;\n        void main() {\n          float percent = (position.z + 0.0) / 100.0; // 计算当前像素点在立方体高度上的百分比\n          vColor = mix(uColor1.rgb, uColor2.rgb, percent);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        varying vec3 vColor;\n        uniform float uOpacity;\n        void main() {\n          gl_FragColor = vec4(vColor, uOpacity);\n        }\n      "}),f=new u(m,v);if(h.add(f),h.name="柱状图",h.position.set(c,d,p+o/2),h.renderOrder=99,e.label){const{name:t="",className:n="",onClick:a}=e.label,r=ye({name:t,className:n,position:[0,0,o/2],onClick:a});r.rotateX(.5*Math.PI),h.add(r)}return h}}})({height:5,size:.2,factor:xe,color1:Oe,color2:ze}),He=new N;He.setURLModifier((e=>"/oss/textures/map"+e));const Je=new z(He),qe={x:105.06,y:0,z:32.93},Ze=Je.load("/gz-map.jpg"),Ye=Je.load("/gz-map-fx.jpg"),Ke=Je.load("/border.png");Ze.wrapS=Ye.wrapS=Ke.wrapS=F,Ze.wrapT=Ye.wrapT=Ke.wrapT=F,Ze.flipY=!1;const Qe=.0128;Ze.repeat.set(Qe,Qe),Ye.repeat.set(Qe,Qe);const et=e=>{const t=new A(e),n=new V(t,{depth:we,bevelEnabled:!0,bevelSegments:1,bevelThickness:0,steps:0,bevelSize:0}),o=new H({color:be,map:Ze,normalMap:Ye,combine:J,transparent:!0,opacity:.8}),a=new W({color:Se,map:Ke,transparent:!0,opacity:.9}),r=new u(n,[o,a]);return r.scale.setScalar(xe),r.name="地图拼块",r},tt=(e,t)=>{if(!e.centroid&&!e.center)return!1;const[n,o]=e.centroid||e.center,a=Fe({name:`\n      <img src="/oss/img/map/label.png" />\n      <div class="name">${e.name}</div>\n    `,className:"map-3D-label",position:[n*xe,o*xe*.995,we*xe]});a.rotateX(.5*Math.PI),a.name=e.name+"_CSS3D_label",a.isLabel=!0,t.add(a)},nt=(e,t)=>{if(!e.centroid&&!e.center)return!1;const n=1+(o=5,a=10,(Math.floor(Math.random()*(a-o+1))+o)/4);var o,a;const[r,i]=e.centroid||e.center,s=De([r,i,1.01*we].map((e=>e*xe)),n*xe);s.rotateX(-Math.PI/2),t.add(s)},ot=(e,t)=>{const n=new C,o=.2*xe,a=new q(o,32),r=new L({color:be,transparent:!0,opacity:1}),i=new u(a,r),s=new Z(.8*o,32,32,0,Math.PI),l=new L({color:Ie,transparent:!0,opacity:1}),c=new u(s,l);return n.add(i,c),n.position.set(e*xe,t*xe,we*xe*1.005),n},at=Je.load("/out-circle2.png"),rt=Je.load("/inner-circle2.png");class it extends ve{constructor(e){super(e),t(this,"corrugatedPlate"),t(this,"clock"),t(this,"mapGroup"),t(this,"scatterGroup"),t(this,"flywireGroup"),t(this,"css3DRender"),t(this,"outline"),t(this,"hoverBack"),t(this,"outRingMesh"),t(this,"innerRingMesh"),this.clock=new D,this.css3DRender=Be(this.options,this.container),this.addModel(),this.bindEvent()}addModel(){const e=Le();e.renderOrder=0,this.corrugatedPlate=e,this.addObject(e)}bindEvent(){this.renderer.domElement.addEventListener("pointermove",this.onPointerMove.bind(this))}onPointerMove(e){const t=this.container,n=this.options.scale;if(Xe(e,t,n),this.mapGroup){Ue.setFromCamera(We,this.camera);const e=[this.mapGroup];this.scatterGroup&&e.push(this.scatterGroup);const t=Ue.intersectObjects(e);if(this.container.style.cursor=t.length?"pointer":"auto",t.length>0){const e=t[0].object;let n;const o=this.findParentProvinceGroupGroupUuid(e);o&&(n=o.uuid,this.hoverProvince(o)),this.setMapBlockColor(n)}else this.hoverProvince(),this.setMapBlockColor()}}findParentProvinceGroupGroupUuid(e){const t=e=>{let n=e.parent;if(n)return n&&n.isProvinceGroup||n.isScatter?n:t(n)};return t(e)}hoverProvince(e){"function"==typeof this.hoverBack&&this.hoverBack(e,$e)}setMapBlockColor(e){this.mapGroup.traverse((t=>{if(t.isProvinceBlock)t.material[0].color.set(t.parent.uuid===e?Ce:be),t.material[1].color.set(t.parent.uuid===e?Me:Se);else if(t.isLabel){const n=t.parent.uuid===e;t.element.className="map-3D-label"+(n?" is-active":"")}}))}initGrid(){const e=200*xe,t=1.4*xe,n=e/20,o=-e/2;let a=new U(e,20,Se,Se);this.grid=a;const r=new C;for(let i=0;i<=20;i++)for(let e=0;e<=20;e++){const a=o+i*n,s=o+e*n,l=new d(t,t/5),c=new W({color:Se,transparent:!0,opacity:.9}),p=new u(l,c);p.rotateX(.5*-Math.PI),p.position.set(a,0,s);const h=p.clone();h.rotateZ(.5*Math.PI),r.add(p,h)}r.name="辅助交点",this.addObject(a,r)}initMap(e){this.mapGroup&&(this.mapGroup=null,this.disposeObj(this.mapGroup));const t=new C;t.name="地图";const n=e.features,o=n.length;for(let u=0;u<o;u++){const e=n[u],o=new $,a=e.geometry.coordinates,r=e.properties;for(let t=0;t<a.length;t++)a[t].forEach((e=>{const t=e.map((e=>new G(e[0],e[1]))),n=et(t);n.isProvinceBlock=!0,o.add(n)}));tt(r,o),nt(r,o),o.rotateX(-Math.PI/2),o.isProvinceGroup=!0,o.name=r.name,o.data=r,t.add(o)}((e,t)=>{let n=ke(e,{color:Pe,transparent:!0},"Line2");n.name="地图上边框",n.position.y+=we*xe;let o=ke(e,{color:Ie},"Line2");o.name="地图下边框",n.scale.setScalar(xe),o.scale.setScalar(xe),t.add(n),t.add(o)})(e,this.scene);const a=Te(t);let{size:r,center:{x:i,y:s,z:l}}=a;this.mapGroup=t,qe.x=i,qe.y=s,qe.z=l,this.corrugatedPlate.position.set(i,0-.1*xe,l),this.resetSceneEle();const c=r.x<r.y?r.y+1:r.x+1;this.outRingMesh=((e,t)=>{let n=new d(t,t),o=new L({map:at,transparent:!0,opacity:1,depthTest:!0}),a=new u(n,o);const{x:r,z:i}=qe;return a.position.set(r,-1,i),a.scale.setScalar(1.2),a.rotateX(.5*-Math.PI),e.add(a),a})(this.scene,c),this.innerRingMesh=((e,t)=>{let n=new d(t,t),o=new L({map:rt,transparent:!0,opacity:1,depthTest:!0}),a=new u(n,o);const{x:r,z:i}=qe;return a.position.set(r,-2,i),a.scale.setScalar(1.2),a.rotateX(.5*-Math.PI),e.add(a),a})(this.scene,.9*c),this.addObject(t)}initMapBar(e){if(!this.mapGroup)return;this.clearMapBar();const t=Math.max(...e.map((e=>e.use)));for(let n=0;n<e.length;n++){const{name:o,use:r}=e[n],i=this.mapGroup.getObjectByName(o);if(i){const e=r/t,{centroid:n,center:o,name:s}=i.data,l=n||o,c=Ve({position:[l[0]*xe,l[1]*xe,we*xe],heightRatio:e,label:{name:`\n              <div class="label-wrap">\n                <div class="name">${s}</div>\n                <div class="text">\n                  <span class="value">${a(r)}</span>\n                  <span class="unit">kWh</span>\n                </div>\n              </div>\n            `,className:"map-bar-label"}});c.isBar=!0,i.add(c)}else;}}clearMapBar(){this.mapGroup.traverse((e=>{e.isBar&&this.disposeObj(e)}))}initMapOutLine(e){this.outline&&(this.outline=null,this.disposeObj(this.outline));const t=Ee(e,we,!1),n=Re(t);n.renderOrder=10,this.outline=n,this.addObject(n)}initScatter(e,t){this.scatterGroup&&(this.scatterGroup=null,this.disposeObj(this.scatterGroup));const n=new C;n.name="散点集合";for(let o=0;o<e.length;o++){const t=e[o],[a=0,r=0]=t.coord||[],i=ot(a,r);i.name=t.name,i.data=t,i.isScatter=!0,n.add(i)}n.rotateX(.5*-Math.PI),this.scatterGroup=n,this.addObject(n),this.hoverBack=t}initFlywire(e){this.flywireGroup&&(this.flywireGroup=null,this.disposeObj(this.flywireGroup));const t=new C;for(let n=0;n<e.length;n++){const{coords:o,path:a}=e[n],r=Ne(o.map((e=>e.map((e=>e*xe)))));r.name=a,t.add(r)}t.name="飞线集合",t.renderOrder=20,this.flywireGroup=t,this.addObject(t)}resetSceneEle(){const{x:e,y:t,z:n}=qe;if(this.camera.lookAt(e,t,n),new j(this.camera.position).to({x:qe.x,y:40*xe,z:n+40*xe},1e3).easing(X.Quadratic.In).start().onUpdate((()=>{})),this.controls.target=new h(e,t,n),this.grid){this.grid.position.set(e,0,n);this.scene.getObjectByName("辅助交点").position.set(e,0,n)}}modelAnimate(){let e=this.clock.getDelta();this.corrugatedPlate&&je(this.corrugatedPlate,e),this.outline&&Ge(this.outline),this.css3DRender&&this.css3DRender.render(this.scene,this.camera),Ke.offset.y+=.005,this.outRingMesh&&(this.outRingMesh.rotation.z+=5e-4),this.innerRingMesh&&(this.innerRingMesh.rotation.z-=5e-4),this.flywireGroup&&Ae()}resize(){if(super.resize(),this.css3DRender){const{width:e,height:t}=this.options;this.css3DRender.setSize(e,t)}}}const st=["src"],lt=r(te({__name:"index",setup(e){const{show:t,options:a}=(e=>{const t=Y({show:!1,...e});return{options:t,show:K(t.show),filters:Y({})}})({style:{left:"0px",top:"0px"},list:[],extend:{isScatter:!1,city:"",title:"",total:0}}),{load:r}=(()=>{const e=Q(0);return{load:t=>{const n=new ee;return new Promise(((o,a)=>{n.load(t,(e=>{let t={};try{t=JSON.parse(e)}catch(n){}o(t)}),(t=>{let{loaded:n,total:o}=t;e.value=Number((n/o*100).toFixed(0))}),a)}))},progress:e}})(),{transformGeoJSON:i}={transformGeoJSON:e=>{let t=e.features;for(let n=0;n<t.length;n++){const e=t[n];"Polygon"===e.geometry.type&&(e.geometry.coordinates=[e.geometry.coordinates])}return e}},s=Q(),l={bgColor:464681,camera:{position:[0,100,200]},fog:{visible:!1,near:2e3,far:3e3},grid:{visible:!0},controls:{maxDistance:5e3},axes:{visible:!1}};let c;const u=()=>{n.get(o.d3.map).then((e=>{const t=[],n=[];return e.list.forEach((e=>{const o=e.projects.length;let a=e.province;["重庆","北京","天津","上海"].includes(a)&&(a+="市"),["台湾"].includes(a)&&(a+="省"),e.projects.forEach((n=>{t.push({coord:[n.lng,n.lat],name:n.name,carbon:n.carbon,use:n.use,total:o,city:e.province,id:n.id})}));const r=e.total;-1===n.findIndex((e=>e.name===a))&&n.push({id:e.code,name:a,code:e.code,total:o,city:e.province,use:r})})),{citys:n,projects:t,lines:e.lines}})).then((e=>{const{projects:n,citys:o}=e;null==c||c.initScatter(n,((e,n)=>{let r=!!e;if(r){a.style&&(a.style.left=n.left+"px",a.style.top=n.top+"px");const t=e.isScatter,i=e.data;let s="",l="",c=0,u=[];if(t)s=i.city,l=i.name,c=i.total,u=[{name:"今日用电量",value:i.use,unit:"kWh"},{name:"今日碳排放",value:i.carbon,unit:"kgCO₂"}];else{const t=o.find((t=>t.name==e.name));t?(s=null==t?void 0:t.city,c=(null==t?void 0:t.total)??0,u=[{name:"今日用电量",value:null==t?void 0:t.use,unit:"kWh"}]):r=!1}a.list=u,a.extend.city=s,a.extend.title=l,a.extend.total=c,a.extend.isScatter=t}t.value=r})),null==c||c.initMapBar(o),null==c||c.initFlywire(e.lines)}))};return ne((()=>{l.container=s.value,c=new it(l),c.run(),r("/oss/map/china.json").then((e=>{c.initMap(i(e)),u()})),r("/oss/map/china-outline.json").then((e=>{c.initMapOutLine(i(e))})),fe(c).resize()})),(e,n)=>(oe(),ae("div",{class:se([e.$style.page,"h-100 o-h"])},[re("div",{class:"h-100",ref_key:"containerRef",ref:s},null,512),ie(t)?(oe(),ae("div",{key:0,class:se(e.$style["dialog-view"]),style:le(ie(a).style)},[ie(a).extend.city?(oe(),ae("div",{key:0,class:se([e.$style.city,"flex"])},[re("span",{class:se(e.$style.name)},ce(ie(a).extend.city),3),re("span",{class:se(e.$style.total)},ce(ie(a).extend.total)+"个项目",3)],2)):ue("",!0),ie(a).extend.title?(oe(),ae("div",{key:1,class:se([e.$style.project,"flex flex-ac"])},[re("img",{src:`${ie("")}oss/img/map/pos.png`,alt:""},null,8,st),re("span",{class:se(e.$style.name)},ce(ie(a).extend.title),3)],2)):ue("",!0),re("div",{class:se(e.$style.count)},[(oe(!0),ae(de,null,pe(ie(a).list,(t=>(oe(),ae("div",{class:se(e.$style.item)},[re("span",null,ce(t.name),1),re("span",null,ce(t.value),1),re("span",null,ce(t.unit),1)],2)))),256))],2)],6)):ue("",!0)],2))}}),[["__cssModules",{$style:{page:"_page_1vsmu_2","dialog-view":"_dialog-view_1vsmu_6",city:"_city_1vsmu_15",name:"_name_1vsmu_15",total:"_total_1vsmu_23",project:"_project_1vsmu_28",count:"_count_1vsmu_43",item:"_item_1vsmu_47"}}]]);export{lt as default};
