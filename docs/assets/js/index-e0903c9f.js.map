{"version":3,"file":"index-e0903c9f.js","sources":["../../../code/src/pages/webgpu/effect/fog/methods.ts","../../../code/src/pages/webgpu/effect/fog/index.vue"],"sourcesContent":["import * as THREE from 'three/webgpu'\n\nimport * as ThreeScene from 'three-scene'\n\nimport { GUI } from 'dat.gui'\n\nconst { color, positionView, float, positionWorld, uniform, triNoise3D, fog, normalWorld } =\n  THREE.TSL\n\n// 雾化高度\nconst height = uniform(40)\n\nexport class FogScene extends ThreeScene.Scene {\n  gui: InstanceType<typeof GUI>\n\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    // 颜色\n    const skyColor = color(0xf0f5f5)\n    const groundColor = color(0xdee3e6)\n\n    // 噪波距离\n    const fogNoiseDistance = positionView.z.negate().smoothstep(0, this.camera.far) // smoothstep 平滑阶梯\n\n    const distance = fogNoiseDistance.mul(20).max(height) // 乘、最大\n    const alpha = 0.98\n    const groundFogArea = float(distance)\n      .sub(positionWorld.y)\n      .div(distance)\n      .pow(3)\n      .saturate()\n      .mul(alpha) // 浮动、替补、分区、次方、渗透、乘\n\n    // 时间节点\n    const timer = uniform(0).onFrameUpdate(frame => frame.time) // 统一、边框更新\n\n    // 大小 调整 mul 参数\n    const fogNoiseA = triNoise3D(positionWorld.mul(0.0005), 1, timer)\n    const fogNoiseB = triNoise3D(positionWorld.mul(0.001), 1, timer.mul(0.5))\n\n    const fogNoise = fogNoiseA.add(fogNoiseB).mul(groundColor)\n\n    // 雾化、背景\n    this.scene.fogNode = fog(fogNoiseDistance.oneMinus().mix(groundColor, fogNoise), groundFogArea) // 一减、混合\n    this.scene.backgroundNode = normalWorld.y.max(0).mix(groundColor, skyColor)\n\n    // 半球环境光\n    // this.addObject(new THREE.HemisphereLight(skyColor.value, groundColor.value, 0.5))\n\n    const buildColor = positionWorld.y\n      .mul(5)\n      .floor()\n      .mod(50)\n      .sign()\n      .mix(color(0x000066).add(fogNoiseDistance), color(0xffffff))\n\n    const buildGeometry = new THREE.BoxGeometry(1, 1, 1)\n    const buildmaterial = new THREE.MeshPhongNodeMaterial({\n      colorNode: buildColor\n    })\n\n    // 实例化网格\n    const buildMesh = new THREE.InstancedMesh(buildGeometry, buildmaterial, 1000)\n    this.addObject(buildMesh)\n\n    const dummy = new THREE.Object3D()\n    const center = new THREE.Vector3()\n\n    for (let i = 0; i < buildMesh.count; i++) {\n      const scaleY = Math.random() * 7 + 5\n      dummy.position.x = Math.random() * 2000 - 1000\n      dummy.position.z = Math.random() * 2000 - 1000\n\n      const distance = Math.max(dummy.position.distanceTo(center) * 0.012, 5)\n      dummy.position.y = 0.5 * scaleY * distance\n\n      dummy.scale.x = dummy.scale.z = Math.random() * 30 + 10\n      dummy.scale.y = scaleY * distance\n\n      // 更新局部变换。\n      dummy.updateMatrix()\n\n      // 设置给定的本地变换矩阵到已定义的实例\n      buildMesh.setMatrixAt(i, dummy.matrix)\n    }\n\n    this.gui = new GUI()\n    this.addGui()\n\n    console.log(this)\n  }\n\n  createAmbientLight(color: string | number, intensity: number) {\n    return new THREE.AmbientLight(color, intensity)\n  }\n\n  createDirectionalLight(color: string | number, intensity: number) {\n    return new THREE.DirectionalLight(color, intensity)\n  }\n\n  render() {\n    this.renderer.renderAsync(this.scene, this.camera)\n  }\n\n  createRender() {\n    return new THREE.WebGPURenderer(this.options.render)\n  }\n\n  initModel(): void {\n    const planeGeometry = new THREE.PlaneGeometry(200, 200)\n    const planeMaterial = new THREE.MeshPhongMaterial({\n      color: 0x999999\n    })\n\n    const ground = new THREE.Mesh(planeGeometry, planeMaterial)\n    ground.rotation.x = -Math.PI / 2\n    ground.scale.setScalar(20)\n    ground.castShadow = true\n    ground.receiveShadow = true\n    this.addObject(ground)\n  }\n\n  addGui() {\n    const gui = this.gui\n\n    gui.add(height, 'value', 20, 300).name('雾化高度')\n\n    gui.domElement.className += ' gui-wrap'\n    this.container.parentNode?.appendChild(gui.domElement)\n  }\n}\n","<template>\n  <div class=\"three-page\">\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { FogScene } from './methods'\n\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof FogScene>[0] = {\n  axes: {\n    visible: true\n  },\n  camera: {\n    // near: 1,\n    far: 2000\n    // fov: 45,\n    // position: [30, 15, 30]\n  },\n  directionalLight: {\n    visible: false\n  },\n  render: {\n    logarithmicDepthBuffer: false\n  },\n  ambientLight: {\n    // visible: false\n    // intensity: 0.5\n  },\n  controls: {\n    maxPolarAngle: Math.PI * 0.48,\n    minDistance: 7,\n    maxDistance: 1000\n  }\n}\nlet scene: InstanceType<typeof FogScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new FogScene(options).run()\n\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["color","positionView","float","positionWorld","uniform","triNoise3D","fog","normalWorld","THREE.TSL","height","FogScene","ThreeScene.Scene","constructor","options","super","__publicField","this","skyColor","groundColor","fogNoiseDistance","z","negate","smoothstep","camera","far","distance","mul","max","groundFogArea","sub","y","div","pow","saturate","timer","onFrameUpdate","frame","time","fogNoiseA","fogNoiseB","fogNoise","add","scene","fogNode","oneMinus","mix","backgroundNode","buildColor","floor","mod","sign","buildGeometry","THREE.BoxGeometry","buildmaterial","THREE.MeshPhongNodeMaterial","colorNode","buildMesh","THREE.InstancedMesh","addObject","dummy","THREE.Object3D","center","THREE.Vector3","i","count","scaleY","Math","random","position","x","distanceTo","scale","updateMatrix","setMatrixAt","matrix","gui","GUI","addGui","console","log","createAmbientLight","intensity","THREE.AmbientLight","createDirectionalLight","THREE.DirectionalLight","render","renderer","renderAsync","createRender","THREE.WebGPURenderer","initModel","planeGeometry","THREE.PlaneGeometry","planeMaterial","THREE.MeshPhongMaterial","ground","THREE.Mesh","rotation","PI","setScalar","castShadow","receiveShadow","name","domElement","className","_a","container","parentNode","appendChild","containerRef","ref","axes","visible","directionalLight","logarithmicDepthBuffer","ambientLight","controls","maxPolarAngle","minDistance","maxDistance","onMounted","value","run","useResize","resize"],"mappings":"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"}