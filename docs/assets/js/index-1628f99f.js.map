{"version":3,"file":"index-1628f99f.js","sources":["../../../code/src/pages/webgl/csg/hollow/methods.ts","../../../code/src/pages/webgl/csg/hollow/index.vue"],"sourcesContent":["import * as THREE from 'three'\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js'\nimport {\n  Brush,\n  Evaluator,\n  // @ts-ignore\n  HOLLOW_SUBTRACTION,\n  // @ts-ignore\n  HOLLOW_INTERSECTION\n} from 'three-bvh-csg'\nimport * as ThreeScene from 'three-scene'\n\nlet csgEvaluator = new Evaluator()\ncsgEvaluator.attributes = ['position', 'normal', 'color']\ncsgEvaluator.useGroups = false\n\nconst params = {\n  displayBrush: true,\n  operation: HOLLOW_INTERSECTION\n}\n\nconst createBufferGeometry = () => {\n  // 三角形数量\n  const triangles = 5000\n\n  // 几何缓冲器\n  let geometry = new THREE.BufferGeometry()\n\n  // 位置\n  const positions = new Float32Array(triangles * 3 * 3)\n  // 顶点法线\n  const normals = new Float32Array(triangles * 3 * 3)\n  // 顶点颜色\n  const colors = new Float32Array(triangles * 3 * 3)\n\n  const color = new THREE.Color()\n\n  // 立方体大小\n  const n = 500,\n    n2 = n / 2\n  // 大小\n  const d = 80,\n    d2 = d / 2\n\n  // 三维向量\n  const pA = new THREE.Vector3()\n  const pB = new THREE.Vector3()\n  const pC = new THREE.Vector3()\n\n  const cb = new THREE.Vector3()\n  const ab = new THREE.Vector3()\n\n  // 随机生成\n  for (let i = 0; i < positions.length; i += 9) {\n    // 位置\n    // 单个三角形坐标位置\n    const x = Math.random() * n - n2\n    const y = Math.random() * n - n2\n    const z = Math.random() * n - n2\n\n    // 顶点坐标\n    const ax = x + Math.random() * d - d2\n    const ay = y + Math.random() * d - d2\n    const az = z + Math.random() * d - d2\n\n    const bx = x + Math.random() * n - n2\n    const by = y + Math.random() * n - n2\n    const bz = z + Math.random() * n - n2\n\n    const cx = x + Math.random() * n - n2\n    const cy = y + Math.random() * n - n2\n    const cz = z + Math.random() * n - n2\n\n    positions[i] = ax\n    positions[i + 1] = ay\n    positions[i + 2] = az\n\n    positions[i + 3] = bx\n    positions[i + 4] = by\n    positions[i + 5] = bz\n\n    positions[i + 6] = cx\n    positions[i + 7] = cy\n    positions[i + 8] = cz\n\n    // 顶点法线\n    pA.set(ax, ay, az)\n    pB.set(bx, by, bz)\n    pC.set(cx, cy, cz)\n\n    // 子向量\n    cb.subVectors(pC, pB)\n    ab.subVectors(pA, pB)\n    // 判断左右\n    cb.cross(ab)\n\n    // 向量方向归一化\n    cb.normalize()\n\n    const nx = cb.x\n    const ny = cb.y\n    const nz = cb.z\n\n    normals[i] = nx\n    normals[i + 1] = ny\n    normals[i + 2] = nz\n\n    normals[i + 3] = nx\n    normals[i + 4] = ny\n    normals[i + 5] = nz\n\n    normals[i + 6] = nx\n    normals[i + 6] = ny\n    normals[i + 7] = nz\n\n    // 颜色\n    const vx = x / n + 0.5\n    const vy = y / n + 0.5\n    const vz = z / n + 0.5\n\n    color.setRGB(vx, vy, vz)\n\n    colors[i] = color.r\n    colors[i + 1] = color.g\n    colors[i + 2] = color.b\n\n    colors[i + 3] = color.r\n    colors[i + 4] = color.g\n    colors[i + 5] = color.b\n\n    colors[i + 6] = color.r\n    colors[i + 7] = color.g\n    colors[i + 8] = color.b\n  }\n\n  // 创建顶点属性\n  geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3))\n  geometry.setAttribute('normal', new THREE.BufferAttribute(normals, 3))\n  geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3))\n  const s = 0.002\n  geometry.scale(s, s, s)\n  return geometry\n}\n\n// 地面\nconst createGround = () => {\n  // floor\n  const ground = new THREE.Mesh(\n    new THREE.PlaneGeometry(5),\n    new THREE.ShadowMaterial({\n      color: 0xe0f7fa,\n      opacity: 0.05,\n      depthWrite: false,\n      transparent: true\n    })\n  )\n  ground.scale.setScalar(10)\n  ground.rotation.x = -Math.PI / 2\n  ground.receiveShadow = true\n  return ground\n}\n\ntype NewBrush = InstanceType<typeof Brush> & InstanceType<typeof THREE.Mesh>\nexport class NewThreeScene extends ThreeScene.Scene {\n  brush1: NewBrush | undefined\n  brush2: NewBrush | undefined\n  brushResult: InstanceType<typeof THREE.Mesh> | undefined\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    this.addModel()\n  }\n\n  addModel() {\n    let geo = createBufferGeometry()\n    let mat = new THREE.MeshStandardMaterial({\n      vertexColors: true,\n      side: THREE.DoubleSide,\n      roughness: 0.2\n    }) as any\n\n    // @ts-ignore\n    this.brush1 = new Brush(geo, mat)\n    this.brush1.position.y = 1\n    this.brush1.updateMatrixWorld(true)\n\n    // 球体\n    geo = new THREE.SphereGeometry()\n    mat = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      transparent: true,\n      depthWrite: false,\n      opacity: 0.1,\n      side: THREE.BackSide\n    })\n    // @ts-ignore\n    this.brush2 = new Brush(geo, mat)\n    this.addObject(this.brush2)\n\n    this.brushResult = new THREE.Mesh()\n    this.addObject(this.brushResult)\n\n    // 地面\n    const ground = createGround()\n    this.addObject(ground)\n\n    this.createGUI()\n  }\n\n  createGUI() {\n    const gui = new GUI()\n    gui\n      .add(params, 'operation', { NONE: -1, HOLLOW_INTERSECTION, HOLLOW_SUBTRACTION })\n      .name('布尔类型')\n    gui.add(params, 'displayBrush').name('计算元素')\n\n    // @ts-ignore\n    gui.domElement.style = 'position: absolute; top: 10px; right: 10px'\n    this.container?.appendChild(gui.domElement)\n  }\n\n  modelAnimate(): void {\n    const { brush1, brush2, brushResult } = this\n    if (brush2) {\n      brush2.position.y = 1 * Math.sin(window.performance.now() * 0.0025 * 0.5) + 1\n      brush2.position.x = 1 * Math.sin(window.performance.now() * 0.0035 * 0.5)\n      brush2.position.z = 1 * Math.sin(window.performance.now() * 0.002 * 0.5)\n      brush2.visible = params.displayBrush\n      brush2.updateMatrixWorld(true)\n    }\n    if (!brushResult || !brush1 || !brush2 || !brushResult) return\n    if (params.operation === -1) {\n      brushResult.geometry.dispose()\n      brushResult.geometry.copy(brush1?.geometry as any)\n      brushResult.position.y = 1\n    } else {\n      this.brushResult = csgEvaluator.evaluate(brush1, brush2, params.operation, brushResult as any)\n      this.brushResult.position.y = 0\n      this.brushResult.castShadow = true\n    }\n  }\n}\n","<template>\n  <div :class=\"$style.page\" class=\"h-100 o-h\">\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { NewThreeScene } from './methods'\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\n\nconst options: ConstructorParameters<typeof NewThreeScene>[0] = {\n  camera: {\n    position: [0, 3, 5]\n  },\n  render: {\n    alpha: true\n  },\n  grid: {\n    visible: true\n  },\n  axes: {\n    visible: true\n  }\n}\n\nlet scene: InstanceType<typeof NewThreeScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new NewThreeScene(options)\n  scene.run()\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\" module>\n.page {\n  position: relative;\n}\n</style>\n"],"names":["csgEvaluator","Evaluator","attributes","useGroups","params","displayBrush","operation","HOLLOW_INTERSECTION","NewThreeScene","ThreeScene.Scene","constructor","options","super","__publicField","this","addModel","geo","geometry","THREE.BufferGeometry","positions","Float32Array","triangles","normals","colors","color","THREE.Color","n","n2","pA","THREE.Vector3","pB","pC","cb","ab","i","length","x","Math","random","y","z","ax","d","ay","az","bx","by","bz","cx","cy","cz","set","subVectors","cross","normalize","nx","ny","nz","vx","vy","vz","setRGB","r","g","b","setAttribute","THREE.BufferAttribute","s","scale","createBufferGeometry","mat","THREE.MeshStandardMaterial","vertexColors","side","THREE.DoubleSide","roughness","brush1","Brush","position","updateMatrixWorld","THREE.SphereGeometry","THREE.MeshBasicMaterial","transparent","depthWrite","opacity","THREE.BackSide","brush2","addObject","brushResult","THREE.Mesh","ground","THREE.PlaneGeometry","THREE.ShadowMaterial","setScalar","rotation","PI","receiveShadow","createGround","createGUI","gui","GUI","add","NONE","HOLLOW_SUBTRACTION","name","domElement","style","_a","container","appendChild","modelAnimate","sin","window","performance","now","visible","dispose","copy","evaluate","castShadow","containerRef","ref","camera","render","alpha","grid","axes","scene","onMounted","value","run","useResize","resize"],"mappings":"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"}