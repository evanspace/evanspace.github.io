{"version":3,"file":"index-4d1f2a48.js","sources":["../../../code/src/pages/webgl/geometry/template/methods.ts","../../../code/src/pages/webgl/geometry/template/data.ts","../../../code/src/pages/webgl/geometry/template/index.vue"],"sourcesContent":["import * as THREE from 'three'\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js'\n\nimport * as ThreeScene from 'three-scene'\n\nimport { GUI } from 'dat.gui'\n\nconsole.log(THREE)\nconst material = new THREE.MeshPhongMaterial({\n  color: 0xf1f1f1,\n  specular: 0xffffff,\n  flatShading: true,\n  // vertexColors: true,\n  side: THREE.DoubleSide,\n  wireframe: false\n})\n\nlet fontParser\n\nconst createText = (name: string) => {\n  // 文字\n  let textGeo = new TextGeometry(name || '', {\n    font: fontParser,\n    size: 5,\n    depth: 0, // 挤出文本的厚度。默认值为50。\n    curveSegments: 12, // 曲线分段\n    bevelThickness: 0.5, // 斜面厚度\n    bevelSize: 0.1, // 斜角大小\n    bevelEnabled: true, // 斜角\n    bevelSegments: 1 // 斜角的分段数。默认值为3。\n  })\n\n  // 计算边界\n  textGeo.computeBoundingBox()\n  // 计算垂直算法\n  textGeo.computeVertexNormals()\n  // @ts-ignore\n  let offsetX = 0.5 * (textGeo.boundingBox.max.x - textGeo.boundingBox.min.x)\n  // @ts-ignore\n  let offsetZ = 0.5 * (textGeo.boundingBox.max.z - textGeo.boundingBox.min.z)\n\n  let mesh = new THREE.Mesh(textGeo, material)\n  mesh.castShadow = true\n  mesh.position.set(-offsetX, 30, -offsetZ)\n  mesh.name = 'text'\n  // @ts-ignore\n  mesh._isText_ = true\n  return mesh\n}\n\nconst createGroup = (name, geometry, position = { x: 0, y: 0, z: 0 }, Mesh: any = THREE.Mesh) => {\n  const group = new THREE.Group()\n  const mesh = new Mesh(geometry, material)\n  mesh.castShadow = true\n  group.add(mesh)\n  const text = createText(name)\n  group.add(text)\n  const { x, y, z } = position\n  group.position.set(x, y, z)\n  return group\n}\n\nexport class NewScene extends ThreeScene.Scene {\n  gui: InstanceType<typeof GUI>\n\n  /**\n   * 场景构造器\n   * @param { Object } options\n   */\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    this.gui = new GUI()\n    this.addGui()\n  }\n\n  addModel(font) {\n    fontParser = font\n    const size = 50\n\n    // 间距\n    const gap = size * 2.5\n\n    const position = {\n      x: 0,\n      y: size / 2,\n      z: 0\n    }\n\n    let group = createGroup(\n      '立方缓冲几何体(BoxBufferGeometry)',\n      new THREE.BoxGeometry(size, size, size),\n      position\n    )\n    this.addObject(group)\n\n    position.x += gap\n    group = createGroup('圆形几何体(CircleGeometry)', new THREE.CircleGeometry(size / 2), position)\n    this.addObject(group)\n\n    position.z -= gap\n    group = createGroup('圆锥几何体(ConeGeometry)', new THREE.ConeGeometry(size, size), position)\n    this.addObject(group)\n\n    position.x -= gap\n    group = createGroup(\n      '圆柱几何体（(CylinderGeometry)',\n      new THREE.CylinderGeometry(size / 2, size / 3, size),\n      position\n    )\n    this.addObject(group)\n\n    position.x -= gap\n    group = createGroup(\n      '十二面几何体(DodecahedronGeometry)',\n      new THREE.DodecahedronGeometry(size / 2),\n      position\n    )\n    this.addObject(group)\n\n    position.z += gap\n    group = createGroup(\n      '边缘几何体(EdgesGeometry)',\n      new THREE.EdgesGeometry(new THREE.BoxGeometry(size, size, size)),\n      position,\n      THREE.LineSegments\n    )\n    this.addObject(group)\n\n    {\n      position.z += gap\n      const width = size / 5\n      const shape = new THREE.Shape()\n      // 按照特定顺序，依次书写多边形顶点坐标\n      shape.moveTo(-width, -width)\n      shape.lineTo(-width, width)\n      shape.lineTo(width, width)\n      shape.lineTo(width, -width)\n      shape.lineTo(-width, -width)\n\n      group = createGroup(\n        '挤压几何体(ExtrudeGeometry)',\n        new THREE.ExtrudeGeometry(shape, {\n          steps: 100, // 用于沿着挤出样条的深度细分的点的数量，默认值为1\n          depth: 16, // 挤出的形状的深度，默认值为100\n          bevelEnabled: true, // 对挤出的形状应用是否斜角，默认值为true。\n          bevelThickness: 1, // 设置原始形状上斜角的厚度。默认值为6。\n          bevelSize: 1, // 斜角与原始形状轮廓之间的延伸距离，默认值为bevelThickness-2。\n          bevelSegments: 1, // 斜角的分段层数，默认值为3。\n          extrudePath: new THREE.CatmullRomCurve3([\n            new THREE.Vector3(-size, -size, -size),\n            new THREE.Vector3(size / 2, size / 5, size / 2),\n            new THREE.Vector3(-size / 2, size / 3, -size / 2)\n          ]) // THREE.CurvePath 对象。一条沿着被挤出形状的三维样条线。\n          // UVGenerator: {},     // 提供了UV生成器函数的对象\n        }),\n        position\n      )\n    }\n    this.addObject(group)\n\n    position.x += gap\n    group = createGroup(\n      '二十面几何体(IcosahedronGeometry)',\n      new THREE.IcosahedronGeometry(size / 2, 0),\n      position\n    )\n    this.addObject(group)\n\n    position.x += gap\n    group = createGroup(\n      '八面几何体(OctahedronGeometry)',\n      new THREE.OctahedronGeometry(size / 2, 0),\n      position\n    )\n    this.addObject(group)\n\n    position.x += gap\n    let points: any[] = []\n    for (let i = 0; i < 10; i++) {\n      points.push(new THREE.Vector2(Math.sin(i * 0.2) * 10 + 5, (i - 5) * 2))\n    }\n    group = createGroup(\n      '车削几何体(LatheGeometry)',\n      new THREE.LatheGeometry(points, 10, 0, Math.PI * 1.5),\n      position\n    )\n    this.addObject(group)\n\n    position.z -= gap\n    group = createGroup('平面几何体(PlaneGeometry)', new THREE.PlaneGeometry(size, size), position)\n    this.addObject(group)\n\n    position.z -= gap\n    group = createGroup(\n      '多面几何体(PolyhedronGeometry)',\n      new THREE.PolyhedronGeometry(\n        // 顶点\n        [-1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1],\n        // 索引\n        [\n          2, 1, 0, 0, 3, 2, 0, 4, 7, 7, 3, 0, 0, 1, 5, 5, 4, 0, 1, 2, 6, 6, 5, 1, 2, 3, 7, 7, 6, 2,\n          4, 5, 6, 6, 7, 4\n        ],\n        // 半径\n        size / 2,\n        // 细分\n        2\n      ),\n      position\n    )\n    this.addObject(group)\n\n    position.z -= gap\n    group = createGroup(\n      '圆环几何体(RingGeometry)',\n      new THREE.RingGeometry(size / 5, size / 2),\n      position\n    )\n    this.addObject(group)\n\n    {\n      position.x -= gap\n      let x = 0,\n        y = 0\n      const heartShape = new THREE.Shape()\n      heartShape.moveTo(x + 5, y + 5)\n      heartShape.bezierCurveTo(x + 5, y + 5, x + 4, y, x, y)\n      heartShape.bezierCurveTo(x - 6, y, x - 6, y + 7, x - 6, y + 7)\n      heartShape.bezierCurveTo(x - 6, y + 11, x - 3, y + 15.4, x + 5, y + 19)\n      heartShape.bezierCurveTo(x + 12, y + 15.4, x + 16, y + 11, x + 16, y + 7)\n      heartShape.bezierCurveTo(x + 16, y + 7, x + 16, y, x + 10, y)\n      heartShape.bezierCurveTo(x + 7, y, x + 5, y + 5, x + 5, y + 5)\n      group = createGroup(\n        '形状几何体(ShapeGeometry)',\n        new THREE.ShapeGeometry(heartShape),\n        position\n      )\n    }\n    this.addObject(group)\n\n    position.x -= gap\n    group = createGroup(\n      '球几何体(SphereGeometry)',\n      new THREE.SphereGeometry(size / 2, 32, 16),\n      position\n    )\n    this.addObject(group)\n\n    position.x -= gap\n    group = createGroup(\n      '四面几何体(TetrahedronGeometry)',\n      new THREE.TetrahedronGeometry(size / 2, 1),\n      position\n    )\n    this.addObject(group)\n\n    position.x -= gap\n    group = createGroup(\n      '文本几何体(TextGeometry)',\n      new TextGeometry('Hello three.js!', {\n        font: font, // THREE.Font的实例。\n        size: 5, // 字体大小，默认值为100。\n        depth: 0.5, // 挤出文本的厚度。默认值为50。\n        curveSegments: 3, // （表示文本的）曲线上点的数量。默认值为12。\n        bevelEnabled: true, // 是否开启斜角，默认为false\n        bevelThickness: 0.2, // 文本上斜角的深度，默认值为20。\n        bevelSize: 0.5, // 斜角与原始文本轮廓之间的延伸距离。默认值为8。\n        bevelSegments: 1 // 斜角的分段数。默认值为3。\n      }),\n      position\n    )\n    this.addObject(group)\n\n    position.z += gap\n    group = createGroup(\n      '圆环几何体(TorusGeometry)',\n      new THREE.TorusGeometry(size / 3, 5, 12, 48),\n      position\n    )\n    this.addObject(group)\n\n    position.z += gap\n    group = createGroup(\n      '圆环纽结几何体(TorusKnotGeometry)',\n      new THREE.TorusKnotGeometry(size / 3, 5, 64, 16, 2, 3),\n      position\n    )\n    this.addObject(group)\n\n    position.z += gap\n    group = createGroup(\n      '管道几何体(TubeGeometry)',\n      new THREE.TubeGeometry(\n        new THREE.CatmullRomCurve3([\n          new THREE.Vector3(-size, -size, -size),\n          new THREE.Vector3(size / 2, size / 5, size / 2),\n          new THREE.Vector3(-size / 2, size / 3, -size / 2)\n        ]),\n        64,\n        5,\n        16,\n        false\n      ),\n      position\n    )\n    this.addObject(group)\n\n    position.z += gap\n    group = createGroup(\n      '线框几何体(WireframeGeometry)',\n      new THREE.WireframeGeometry(\n        new THREE.TubeGeometry(\n          new THREE.CatmullRomCurve3([\n            new THREE.Vector3(-size, -size, -size),\n            new THREE.Vector3(size / 2, size / 5, size / 2),\n            new THREE.Vector3(-size / 2, size / 3, -size / 2)\n          ]),\n          64,\n          5,\n          16,\n          false\n        )\n      ),\n      position,\n      THREE.LineSegments\n    )\n    this.addObject(group)\n\n    // 阴影地面\n    const ground = new THREE.Mesh(\n      new THREE.PlaneGeometry(5000, 5000),\n      new THREE.ShadowMaterial({ color: 0xa1a1a1 })\n    )\n    ground.receiveShadow = true\n    ground.rotateX(-Math.PI / 2)\n    this.addObject(ground)\n  }\n\n  addGui() {\n    const gui = this.gui\n\n    const params = {\n      color: 0xf1f1f1,\n      specular: 0xffffff\n    }\n    gui\n      .addColor(params, 'color')\n      .name('颜色')\n      .onChange(x => {\n        material.color.set(x)\n      })\n    gui\n      .addColor(params, 'specular')\n      .name('高光')\n      .onChange(x => {\n        material.specular.set(x)\n      })\n\n    gui.add(material, 'wireframe').name('线框')\n\n    gui.domElement.className += ' gui-wrap'\n    this.container.parentNode?.appendChild(gui.domElement)\n  }\n}\n","const base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nexport const getPageOpts = (): {\n  baseUrl: string\n  models: import('three-scene/types/model').ModelItem[]\n} => ({\n  baseUrl: base,\n\n  models: [\n    {\n      key: '',\n      type: 'font',\n      name: '字体',\n      size: 27.6,\n      url: '/oss/font/YaHei_Regular.json'\n    }\n  ]\n})\n","<template>\n  <div class=\"three-page\">\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n\n    <t-loading v-model=\"progress.show\" :progress=\"progress.percentage\"></t-loading>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport tLoading from '@/components/loading/index.vue'\n\nimport { NewScene } from './methods'\nimport { useResize } from '@/hooks/scene-resize'\nimport * as ThreeScene from 'three-scene/build/three-scene.module'\n\nimport { getPageOpts } from './data'\n\nconst Hooks = ThreeScene.Hooks\nconst pageOpts = reactive(getPageOpts())\n\nconst { progress, loadModels, getModel, MODEL_MAP } = Hooks.useModelLoader({\n  baseUrl: pageOpts.baseUrl,\n  indexDB: {\n    cache: true,\n    dbName: 'THREE__OFFICE__DB',\n    tbName: 'TB',\n    version: 40\n  }\n})\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof NewScene>[0] = {\n  grid: {\n    visible: true\n  },\n  axes: {\n    visible: true\n  },\n  camera: {\n    position: [-200, 300, 300]\n  },\n  render: {\n    alpha: true\n  }\n}\nlet scene: InstanceType<typeof NewScene>\n\nconst initPage = () => {\n  loadModels(pageOpts.models, () => {\n    // 加载进度 100\n    progress.percentage = 100\n    progress.show = false\n\n    const fontParser = getModel(MODEL_MAP.font)\n\n    scene.addModel(fontParser)\n  })\n}\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new NewScene(options)\n  scene.run()\n\n  useResize(scene).resize()\n\n  initPage()\n})\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["console","log","THREE","material","THREE.MeshPhongMaterial","color","specular","flatShading","side","THREE.DoubleSide","wireframe","fontParser","createGroup","name","geometry","position","x","y","z","Mesh","THREE.Mesh","group","THREE.Group","mesh","castShadow","add","text","textGeo","TextGeometry","font","size","depth","curveSegments","bevelThickness","bevelSize","bevelEnabled","bevelSegments","computeBoundingBox","computeVertexNormals","offsetX","boundingBox","max","min","offsetZ","set","_isText_","createText","NewScene","ThreeScene.Scene","constructor","options","super","__publicField","this","gui","GUI","addGui","addModel","gap","THREE.BoxGeometry","addObject","THREE.CircleGeometry","THREE.ConeGeometry","THREE.CylinderGeometry","THREE.DodecahedronGeometry","THREE.EdgesGeometry","THREE.LineSegments","width","shape","THREE.Shape","moveTo","lineTo","THREE.ExtrudeGeometry","steps","extrudePath","THREE.CatmullRomCurve3","THREE.Vector3","THREE.IcosahedronGeometry","THREE.OctahedronGeometry","points","i","push","THREE.Vector2","Math","sin","THREE.LatheGeometry","PI","THREE.PlaneGeometry","THREE.PolyhedronGeometry","THREE.RingGeometry","heartShape","bezierCurveTo","THREE.ShapeGeometry","THREE.SphereGeometry","THREE.TetrahedronGeometry","THREE.TorusGeometry","THREE.TorusKnotGeometry","THREE.TubeGeometry","THREE.WireframeGeometry","ground","THREE.ShadowMaterial","receiveShadow","rotateX","params","addColor","onChange","domElement","className","_a","container","parentNode","appendChild","Hooks","ThreeScene.Hooks","pageOpts","reactive","baseUrl","models","key","type","url","progress","loadModels","getModel","MODEL_MAP","useModelLoader","indexDB","cache","dbName","tbName","version","containerRef","ref","grid","visible","axes","camera","render","alpha","scene","onMounted","value","run","useResize","resize","percentage","show"],"mappings":"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"}