{"version":3,"file":"index-e02342d7.js","sources":["../../../code/src/pages/webgl/example/lookat/methods.ts","../../../code/src/pages/webgl/example/lookat/index.vue"],"sourcesContent":["import * as THREE from 'three'\n\nimport * as ThreeScene from 'three-scene'\n\nexport class LookatScene extends ThreeScene.Scene {\n  target: InstanceType<typeof THREE.Mesh>\n  group: InstanceType<typeof THREE.Group>\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    this.target = new THREE.Mesh(\n      new THREE.SphereGeometry(100, 20, 20),\n      new THREE.MeshNormalMaterial()\n    )\n    this.addObject(this.target)\n\n    const group = new THREE.Group()\n    this.group = group\n    this.addObject(group)\n\n    this.addModel()\n  }\n\n  addModel() {\n    const geometry = new THREE.CylinderGeometry(0, 10, 100, 12)\n    geometry.rotateX(Math.PI * 0.5)\n\n    // 法线网格材质\n    const material = new THREE.MeshNormalMaterial()\n\n    for (let i = 0; i < 1000; i++) {\n      const mesh = new THREE.Mesh(geometry, material)\n      mesh.position.x = Math.random() * 4000 - 2000\n      mesh.position.y = Math.random() * 4000 - 2000\n      mesh.position.z = Math.random() * 4000 - 2000\n      mesh.scale.setScalar(Math.random() * 2 + 1)\n      this.group.add(mesh)\n    }\n  }\n\n  modelAnimate(): void {\n    const time = Date.now() * 0.0005\n\n    const target = this.target\n    target.position.set(\n      Math.sin(time * 0.7) * 1000,\n      Math.cos(time * 0.5) * 1000,\n      Math.cos(time * 0) * 1000\n    )\n\n    this.group.children.forEach(el => {\n      const pos = new THREE.Vector3().copy(target.position)\n      // pos.setY(el.position.y)\n      el.lookAt(pos)\n    })\n  }\n}\n","<template>\n  <div class=\"three-page\">\n    <div class=\"h-100\" ref=\"containerRef\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { LookatScene } from './methods'\n\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\nconst options: ConstructorParameters<typeof LookatScene>[0] = {\n  axes: {\n    visible: true\n  },\n  controls: {\n    maxDistance: 5000\n  }\n}\nlet scene: InstanceType<typeof LookatScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new LookatScene(options).run()\n\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["LookatScene","ThreeScene.Scene","constructor","options","super","__publicField","this","target","THREE.Mesh","THREE.SphereGeometry","THREE.MeshNormalMaterial","addObject","group","THREE.Group","addModel","geometry","THREE.CylinderGeometry","rotateX","Math","PI","material","i","mesh","position","x","random","y","z","scale","setScalar","add","modelAnimate","time","Date","now","set","sin","cos","children","forEach","el","pos","THREE.Vector3","copy","lookAt","containerRef","ref","axes","visible","controls","maxDistance","scene","onMounted","container","value","run","useResize","resize"],"mappings":"yWAIa,MAAAA,UAAoBC,EAG/B,WAAAC,CAAYC,GACVC,MAAMD,GAHRE,EAAAC,KAAA,UACAD,EAAAC,KAAA,SAIOA,KAAAC,OAAS,IAAIC,EAChB,IAAIC,EAAqB,IAAK,GAAI,IAClC,IAAIC,GAEDJ,KAAAK,UAAUL,KAAKC,QAEd,MAAAK,EAAQ,IAAIC,EAClBP,KAAKM,MAAQA,EACbN,KAAKK,UAAUC,GAEfN,KAAKQ,UACP,CAEA,QAAAA,GACE,MAAMC,EAAW,IAAIC,EAAuB,EAAG,GAAI,IAAK,IAC/CD,EAAAE,QAAkB,GAAVC,KAAKC,IAGhB,MAAAC,EAAW,IAAIV,EAErB,IAAA,IAASW,EAAI,EAAGA,EAAI,IAAMA,IAAK,CAC7B,MAAMC,EAAO,IAAId,EAAWO,EAAUK,GACtCE,EAAKC,SAASC,EAAoB,IAAhBN,KAAKO,SAAkB,IACzCH,EAAKC,SAASG,EAAoB,IAAhBR,KAAKO,SAAkB,IACzCH,EAAKC,SAASI,EAAoB,IAAhBT,KAAKO,SAAkB,IACzCH,EAAKM,MAAMC,UAA0B,EAAhBX,KAAKO,SAAe,GACpCnB,KAAAM,MAAMkB,IAAIR,EACjB,CACF,CAEA,YAAAS,GACQ,MAAAC,EAAoB,KAAbC,KAAKC,MAEZ3B,EAASD,KAAKC,OACpBA,EAAOgB,SAASY,IACS,IAAvBjB,KAAKkB,IAAW,GAAPJ,GACc,IAAvBd,KAAKmB,IAAW,GAAPL,GACY,IAArBd,KAAKmB,IAAW,EAAPL,IAGN1B,KAAAM,MAAM0B,SAASC,SAAcC,IAChC,MAAMC,GAAM,IAAIC,GAAgBC,KAAKpC,EAAOgB,UAE5CiB,EAAGI,OAAOH,EAAG,GAEjB,4DC5CF,MAAAI,EAAAC,IACA3C,EAAA,CAA8D4C,KAAA,CACtDC,SAAA,GAENC,SAAA,CACUC,YAAA,MAIZ,IAAAC,SAEAC,GAAA,KACEjD,EAAAkD,UAAAR,EAAAS,MACAH,EAAA,IAAAnD,EAAAG,GAAAoD,MAEAC,EAAAL,GAAAM"}