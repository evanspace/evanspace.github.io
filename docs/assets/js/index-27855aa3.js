var e=Object.defineProperty,t=(t,n,o)=>(((t,n,o)=>{n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[n]=o})(t,"symbol"!=typeof n?n+"":n,o),o);import{l as n,A as o,_ as a}from"./common-9b4b1eeb.js";import{cv as r,cw as i,bb as s,bG as l,b4 as c,c0 as u,ca as d,bd as p,cc as h,cb as v,bs as m,b$ as g,cx as f,cy as y,bt as w,cz as x,b5 as b,cA as S,cB as C,cC as M,cj as P,cD as z,ck as I,bx as _,br as O,a$ as L,bm as j,bl as G,bo as T,bv as k,cE as E,cd as F,by as B,bk as R,aZ as U,bw as D,bp as W,b0 as $,cF as X,cG as q,cH as A,b3 as N,cI as H,cJ as V,bq as J,_ as Z,cK as Y,j as K,cL as Q,e as ee,m as te,o as ne,g as oe,h as ae,u as re,n as ie,ab as se,t as le,D as ce,F as ue,r as de}from"./vendor-8d16b5c9.js";import{d as pe,r as he,T as ve,u as me}from"./resize-38e235fa.js";const ge=.5,fe=40,ye=7450082,we=9633791,xe=7698562,be=9633791,Se=10805495,Ce=6421501,Me=11856636,Pe=7450082,{createCorrugatedPlate:ze,update:Ie}={createCorrugatedPlate:e=>{const{range:t=500,interval:n,size:o,color:a=47273,light:m=881527}=e,g=((e=500,t=5,n=3)=>{const o=[],a=Math.floor(e/t);for(let r=-a;r<=a;r++)for(let e=-a;e<=a;e++){const a=new u(n,n),i=r*t,s=e*t,l=new d,c=new p(i,-n,s),m=new v,g=new h,f=new p(1,1,1);m.setFromEuler(g),l.compose(c,m,f),a.applyMatrix4(l),o.push(a)}return o})(t,n,o),f=r(g),y=new i({uniforms:{color:{value:new s(m)},tcolor:{value:new s(a)},radius:{value:1.25},length:{value:t/10},range:{value:t}},vertexShader:"\n        varying vec3 vp;\n        void main(){\n          vp = position;\n          gl_Position\t= projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        varying vec3 vp;\n        uniform vec3 color;\n        uniform vec3 tcolor;\n        uniform float radius;\n        uniform float length;\n        uniform float range;\n        float getLeng(float x, float y){\n          return  sqrt((x-0.0)*(x-0.0)+(y-0.0)*(y-0.0));\n        }\n        void main(){\n          float uOpacity = 0.8;\n          vec3 vColor = color;\n          float uLength = getLeng(vp.x,vp.z);\n          if ( uLength <= radius && uLength > radius - length ) {\n            float op = sin( (radius - uLength) / length ) ;\n            uOpacity = op;\n            if ( vp.y < 0.0 ) {\n              vColor = color * op;\n            } else {\n              vColor = tcolor;\n            };\n            vColor = tcolor;\n          }\n          gl_FragColor = vec4(vColor,uOpacity);\n        }\n      ",transparent:!0,depthWrite:!0,side:l}),w=new c(f,y);return w.name="波纹板",w.renderOrder=0,w},update:(e,t)=>{const n=e.material,o=n.uniforms.range.value,a=n.uniforms.length.value;n.uniforms.radius.value+=t*(o/4),n.uniforms.radius.value>=o+a&&(n.uniforms.radius.value=0)}},{createOutline:_e,update:Oe}=((e={})=>{const t=pe({size:1,color:16085360,range:500,factor:1},e);return{createOutline:e=>{const n=new Float32Array(e),o=new m;o.setAttribute("position",new g(n,3));const a=new Float32Array(Math.floor(n.length/3)).map(((e,t)=>t));o.setAttribute("aIndex",new g(a,1));const r=new i({vertexShader:"\n        attribute float aOpacity;\n        uniform float uSize;\n\n        attribute float aIndex;\n        varying vec3 vp;\n        varying float vertexIndex;\n\n        void main(){\n          gl_Position = projectionMatrix*modelViewMatrix*vec4(position,1.0);\n          gl_PointSize = uSize;\n\n          vp = position;\n          vertexIndex = aIndex;\n        }\n      ",fragmentShader:"\n        varying float vertexIndex;\n        uniform vec3 uColor;\n        uniform float uIndex;\n        uniform float uRange;\n\n        float invert(float n){\n          return 1.-n;\n        }\n\n        void main(){\n          float uOpacity = 1.0;\n          if(vertexIndex <= uIndex || vertexIndex >= (uRange + uIndex)){\n              discard;\n          }\n          uOpacity = (vertexIndex - uIndex)/uRange;\n          if ( uOpacity < 0.2) {\n            discard;\n          }\n          vec2 uv=vec2(gl_PointCoord.x,invert(gl_PointCoord.y));\n          vec2 cUv=2.*uv-1.;\n          vec4 color=vec4(1./length(cUv));\n          color*=uOpacity;\n          color.rgb*=uColor;\n          gl_FragColor=color;\n        }\n      ",transparent:!0,depthTest:!0,uniforms:{uSize:{value:t.size},uIndex:{value:0},uLength:{value:a.length},uRange:{value:t.range},uColor:{value:new s(t.color)}}}),l=new f(o,r);return l.name="轮廓",l},update:e=>{const n=e.material,o=n.uniforms.uLength.value;n.uniforms.uIndex.value+=4*t.factor,n.uniforms.uIndex.value>=o&&(n.uniforms.uIndex.value=0)}}})({size:.1*fe,color:Me}),{getBoundingBox:Le}={getBoundingBox:e=>{var t=new y;t.expandByObject(e);var n=new p;t.getSize(n);var o=new p;return t.getCenter(o),{box3:t,center:o,size:n}}},{createCountryFlatLine:je,getPoints:Ge}=(()=>{const e=(e,t,n="LineLoop")=>{let o;if("Line2"===n){const n=new S;n.setPositions(e),o=new C(n,t),o.name="countryLine2",o.computeLineDistances()}else{const a=new m;a.setFromPoints(e),o=new M[n](a,t),o.name="countryLine"}return o};return{createCountryFlatLine:(t,n={},o="LineLoop")=>{let a={color:65535};a=pe(a,n);let r=new w(a);"Line2"===o&&(r=new x(a));let i=t.features,s=new b;for(let l=0;l<i.length;l++){const t=i[l].geometry.coordinates;for(let n=0;n<t.length;n++){const a=t[n],i=[];"Line2"===o?a.forEach((e=>{e.forEach((e=>{i.push(e[0],0,-e[1])}))})):a.forEach((e=>{e.forEach((e=>{i.push(new p(e[0],e[1],0))}))}));let l=e(i,r,o);s.add(l)}}return s},getPoints:(e,t=0,n)=>{let o=e.features;const a=[];for(let r=0;r<o.length;r++){const e=o[r].geometry.coordinates;for(let o=0;o<e.length;o++)e[o].forEach((e=>{e.forEach((e=>{n?a.push(new p(e[0],t,-e[1])):a.push(e[0],t,-e[1])}))}))}return a}}})(),{initCSS3DRender:Te,createCSS3DDom:ke}={initCSS3DRender:(e,t)=>{const{width:n,height:o}=e,a=new P;return a.setSize(n,o),a.domElement.style.position="absolute",a.domElement.style.left="0px",a.domElement.style.top="0px",a.domElement.style.pointerEvents="none",t.appendChild(a.domElement),a},createCSS3DDom:e=>{const{name:t,className:n="",onClick:o,position:a,sprite:r}=e,i=document.createElement("div");i.innerHTML=t,i.className=n;const s=r?new z(i):new I(i);return i.style.pointerEvents=o?"auto":"none",i.style.position="absolute","function"==typeof o&&i.addEventListener("click",o),a&&s.position.set(...a),s}},{createMarkLight:Ee}=(e=>{const t=pe({pointTextureUrl:"/oss/textures/map/point.png",circleTextureUrl:"/oss/textures/map/circle.png",lightTextureUrl:"/oss/textures/map/light.png",scaleFactor:1,color:65535},e),n=new _;return{createMarkLight:(e,o,a)=>{const r=new b,i=new u(a/6.219,a);i.rotateX(-Math.PI/2),i.translate(0,0,a/2);const s=new O({map:n.load(t.lightTextureUrl),color:t.color,transparent:!0,depthWrite:!1,side:l});let d=new c(i,s);d.rotateX(Math.PI),d.position.z=a,d.renderOrder=99,d.name="光柱 01";let p=d.clone();p.name="光柱 02",p.rotateZ(Math.PI/2);const h=(()=>{const e=new u(3,3),o=new O({map:n.load(t.pointTextureUrl),color:t.color,side:l,transparent:!0,depthWrite:!1});let a=new c(e,o);a.renderOrder=97,a.name="底部光点";const r=.3*t.scaleFactor;return a.scale.setScalar(r),a})(),v=(()=>{const e=new u(3,3),o=new O({map:n.load(t.circleTextureUrl),color:t.color,side:l,opacity:0,transparent:!0,depthWrite:!1});let a=new c(e,o);a.renderOrder=98,a.name="createLightHalo";const r=.5*t.scaleFactor;a.scale.setScalar(r);const i=he(0,2e3);return a.tween1=new L({scale:r,opacity:0}).to({scale:1.5*r,opacity:1},1e3).delay(i).onUpdate((e=>{let{scale:t,opacity:n}=e;a.scale.setScalar(t),a.material.opacity=n})),a.tween2=new L({scale:1.5*r,opacity:1}).to({scale:2*r,opacity:0},1e3).onUpdate((e=>{let{scale:t,opacity:n}=e;a.scale.setScalar(t),a.material.opacity=n})),a.tween1.chain(a.tween2),a.tween2.chain(a.tween1),a.tween1.start(),a})();return r.add(d,p,h,v),r.position.set(e,o,0),r.rotateX(.5*Math.PI),r.name="光柱标记",r}}})({pointTextureUrl:"/oss/textures/map/point.png",circleTextureUrl:"/oss/textures/map/circle.png",lightTextureUrl:"/oss/textures/map/light.png",scaleFactor:fe,color:Pe}),{raycaster:Fe,pointer:Be,style:Re,update:Ue}=(()=>{const e=new j,t=new G,n={left:0,top:0};return{raycaster:e,pointer:t,style:n,update:(e,o,a=1)=>{const r=o.getBoundingClientRect()||{left:0,top:0};t.x=(e.clientX-r.left)/(o.clientWidth*a)*2-1,t.y=-(e.clientY-r.top)/(o.clientHeight*a)*2+1;const i=o.clientWidth/2,s=o.clientHeight/2;n.left=t.x*i+i,n.top=-t.y*s+s}}})(),{createFlywire:De,update:We}=((e={})=>{const t=pe({depth:0,height:8,divisions:1e3,color:16777215,flyColor:16761095,pointColor:16715760,pointWidth:30,tubularSegments:256,radius:1,radialSegments:8,closed:!1,length:100,factor:1},e),n=new i({depthTest:!1,uniforms:{uColor:{value:new s(t.flyColor)},uIndex:{value:0},uTotal:{value:t.divisions},uWidth:{value:3*t.radius},uLength:{value:t.length}},vertexShader:"\n      attribute float aIndex;\n      uniform float uIndex;\n      uniform float uWidth;\n      uniform vec3 uColor;\n      varying float vSize;\n      uniform float uLength;\n\n      void main(){\n          vec4 viewPosition = viewMatrix * modelMatrix * vec4(position,1);\n          gl_Position = projectionMatrix * viewPosition;\n\n          if(aIndex >= uIndex - uLength && aIndex < uIndex){\n            vSize = uWidth * ((aIndex - uIndex + uLength) / uLength);\n          }\n          gl_PointSize = vSize;\n      }\n    ",side:l,fragmentShader:"\n      varying float vSize;\n      uniform vec3 uColor;\n      void main(){\n          if(vSize<=0.0){\n            gl_FragColor = vec4(1,0,0,0);\n          }else{\n            gl_FragColor = vec4(uColor,1);\n          }\n      }\n    ",transparent:!0,vertexColors:!1}),o=new i({uniforms:{uColor:{value:new s(t.pointColor)},uOpacity:{value:1},uSpeed:{value:.1},uSge:{value:4},uRadius:{value:t.pointWidth/2},time:{value:0}},transparent:!0,depthTest:!1,vertexShader:"\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        // 最终顶点位置信息=投影矩阵*模型视图矩阵*每个顶点坐标\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n      }\n    ",fragmentShader:"\n      varying vec2 vUv;\n      uniform vec3 uColor;\n      uniform float uOpacity;\n      uniform float uSpeed;\n      uniform float uSge;\n      uniform float time;\n      float PI = 3.14159265;\n      float drawCircle(float index, float range) {\n        float opacity = 1.0;\n        if (index >= 1.0 - range) {\n          opacity = 1.0 - (index - (1.0 - range)) / range;\n        } else if(index <= range) {\n          opacity = index / range;\n        }\n        return opacity;\n      }\n      float distanceTo(vec2 src, vec2 dst) {\n        float dx = src.x - dst.x;\n        float dy = src.y - dst.y;\n        float dv = dx * dx + dy * dy;\n        return sqrt(dv);\n      }\n      void main() {\n        float iTime = -time * uSpeed;\n        float opacity = 0.0;\n        float len = distanceTo(vec2(0.5, 0.5), vec2(vUv.x, vUv.y));\n\n        float size = 1.0 / uSge;\n        vec2 range = vec2(0.65, 0.75);\n        float index = mod(iTime + len, size);\n        // 中心圆\n        vec2 cRadius = vec2(0.06, 0.12);\n\n        if (index < size && len <= 0.5) {\n          float i = sin(index / size * PI);\n\n          // 处理边缘锯齿\n          if (i >= range.x && i <= range.y){\n            // 归一\n            float t = (i - range.x) / (range.y - range.x);\n            // 边缘锯齿范围\n            float r = 0.3;\n            opacity = drawCircle(t, r);\n          }\n          // 渐变\n          opacity *=  1.0 - len / 0.5;\n        };\n        gl_FragColor = vec4(uColor, uOpacity * opacity);\n      }\n    ",side:l}),a=(e,n=1)=>{const[a,r]=e,i=t.pointWidth,s=new u(i,i,1,1),l=new c(s,o);return l.position.set(a*n,t.depth*n,-r*n),l.rotateX(.5*-Math.PI),l};return{createFlywire:(e,o=1)=>{const r=new b,i=a(e[0],o),s=a(e[1],o);r.add(i,s);const l=((e,n=1)=>{const[o,a]=e[0].map((e=>e*n)),[r,i]=e[1].map((e=>e*n)),s=(t.depth+t.height)*n,l=new p(o,t.depth*n,-a),c=new p(o+(r-o)/4,s,-(a+(i-a)/4)),u=new p(o+3*(r-o)/4,s,-(a+3*(i-a)/4)),d=new p(r,t.depth*n,-i);return new E(l,c,u,d).getPoints(t.divisions)})(e,o),u=new T(l,!1,"centripetal",.5),d=new k(u,t.tubularSegments,t.radius,t.radialSegments,t.closed),h=new O({color:t.color,transparent:!0,opacity:.75,depthTest:!0}),v=new c(d,h),y=(e=>{const t=new Float32Array(e.map(((e,t)=>t))),o=(new m).setFromPoints(e);return o.setAttribute("aIndex",new g(t,1)),new f(o,n)})(l);return r.add(v,y),r},update:()=>{const e=n,a=e.uniforms.uTotal.value;e.uniforms.uIndex.value+=4*t.factor,e.uniforms.uIndex.value>=a&&(e.uniforms.uIndex.value=0);const r=.001*performance.now();o.uniforms.time.value=r}}})({depth:ge,color:Se,flyColor:Ce,pointColor:Se,height:4,pointWidth:2.5*fe}),{createBar:$e}=((e={})=>{const t=pe({height:10,size:2,factor:1,color1:1048575,color2:16777215},e);return{createBar:(e={})=>{let{size:n,height:o,factor:a,color1:r,color2:l}=t;a=e.factor??a,o*=a;const[u,d,p]=e.position||[0,0,0],h=new F(n,n,o),v=new i({depthTest:!1,transparent:!0,opacity:.6,vertexColors:!1,uniforms:{uColor1:{value:new s(r)},uColor2:{value:new s(l)}},vertexShader:"\n        varying vec3 vColor;\n        uniform vec3 uColor1;\n        uniform vec3 uColor2;\n        void main() {\n          float percent = (position.z + 0.0) / 100.0; // 计算当前像素点在立方体高度上的百分比\n          vColor = mix(uColor1.rgb, uColor2.rgb, percent);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        varying vec3 vColor;\n        void main() {\n          gl_FragColor = vec4(vColor, 1.0);\n        }\n      "}),m=new c(h,v);return m.position.set(u,d,p+o/2),m.renderOrder=99,m}}})({height:5*fe,size:.2*fe}),Xe=new X;Xe.setURLModifier((e=>"/oss/textures/map"+e));const qe=new _(Xe),Ae={x:105.06,y:0,z:32.93},Ne=qe.load("/gz-map.jpg"),He=qe.load("/gz-map-fx.jpg"),Ve=qe.load("/border.png");Ne.wrapS=He.wrapS=Ve.wrapS=B,Ne.wrapT=He.wrapT=Ve.wrapT=B,Ne.flipY=!1;const Je=.0128;Ne.repeat.set(Je,Je),He.repeat.set(Je,Je);const Ze=e=>{const t=new q(e),n=new A(t,{depth:ge,bevelEnabled:!0,bevelSegments:1,bevelThickness:0,steps:0,bevelSize:0}),o=new N({map:Ne,color:ye,normalMap:He,combine:H,transparent:!0,opacity:1}),a=new D({color:xe,map:Ve,transparent:!0,opacity:.9}),r=new c(n,[o,a]);return r.scale.setScalar(fe),r},Ye=(e,t)=>{if(!e.centroid&&!e.center)return!1;const[n,o]=e.centroid||e.center,a=ke({name:`\n      <img src="/oss/img/map/label.png" />\n      <div class="name">${e.name}</div>\n    `,className:"map-3D-label",position:[n*fe,o*fe*.995,ge*fe]});a.rotateX(.5*Math.PI),a.name=e.name+"_CSS3D_label",a.isLabel=!0,t.add(a)},Ke=(e,t)=>{if(!e.centroid&&!e.center)return!1;const n=1+(o=5,a=10,(Math.floor(Math.random()*(a-o+1))+o)/4);var o,a;const[r,i]=e.centroid||e.center,s=Ee(r*fe,i*fe,n*fe);s.position.z=ge*fe*1.01,s.rotateX(-Math.PI/2),t.add(s)},Qe=(e,t)=>{const n=new b,o=.2*fe,a=new V(o,32),r=new O({color:ye,transparent:!0,opacity:1}),i=new c(a,r),s=new J(.8*o,32,32,0,Math.PI),l=new O({color:Ce,transparent:!0,opacity:1}),u=new c(s,l);return n.add(i,u),n.position.set(e*fe,t*fe,ge*fe*1.005),n},et=qe.load("/out-circle2.png"),tt=qe.load("/inner-circle2.png");class nt extends ve{constructor(e){super(e),t(this,"corrugatedPlate"),t(this,"clock"),t(this,"mapGroup"),t(this,"scatterGroup"),t(this,"flywireGroup"),t(this,"css3DRender"),t(this,"outline"),t(this,"hoverBack"),t(this,"outRingMesh"),t(this,"innerRingMesh"),this.clock=new R,this.css3DRender=Te(this.options,this.container),this.addModel(),this.bindEvent()}addModel(){const e=ze({range:100*fe,interval:.8*fe,size:.2*fe,color:ye,light:xe});this.corrugatedPlate=e,this.addObject(e)}bindEvent(){this.renderer.domElement.addEventListener("pointermove",this.onPointerMove.bind(this))}onPointerMove(e){const t=this.container,n=this.options.scale;if(Ue(e,t,n),this.mapGroup){Fe.setFromCamera(Be,this.camera);const e=[this.mapGroup];this.scatterGroup&&e.push(this.scatterGroup);const t=Fe.intersectObjects(e);if(this.container.style.cursor=t.length?"pointer":"auto",t.length>0){const e=t[0].object;let n;const o=this.findParentProvinceGroupGroupUuid(e);o&&(n=o.uuid,this.hoverProvince(o)),this.setMapBlockColor(n)}else this.hoverProvince(),this.setMapBlockColor()}}findParentProvinceGroupGroupUuid(e){const t=e=>{let n=e.parent;if(n)return n&&n.isProvinceGroup||n.isScatter?n:t(n)};return t(e)}hoverProvince(e){"function"==typeof this.hoverBack&&this.hoverBack(e,Re)}setMapBlockColor(e){this.mapGroup.traverse((t=>{if(t.isProvinceBlock)t.material[0].color.set(t.parent.uuid===e?we:ye),t.material[1].color.set(t.parent.uuid===e?be:xe);else if(t.isLabel){const n=t.parent.uuid===e;t.element.className="map-3D-label"+(n?" is-active":"")}}))}initGrid(){const e=200*fe,t=1.4*fe,n=e/20,o=-e/2;let a=new U(e,20,xe,xe);this.grid=a;const r=new b;for(let i=0;i<=20;i++)for(let e=0;e<=20;e++){const a=o+i*n,s=o+e*n,l=new u(t,t/5),d=new D({color:xe,transparent:!0,opacity:.9}),p=new c(l,d);p.rotateX(.5*-Math.PI),p.position.set(a,0,s);const h=p.clone();h.rotateZ(.5*Math.PI),r.add(p,h)}r.name="辅助交点",this.addObject(a,r)}initMap(e){this.mapGroup&&(this.mapGroup=null,this.disposeObj(this.mapGroup));const t=new b;t.name="地图";const n=e.features,o=n.length;for(let c=0;c<o;c++){const e=n[c],o=new W,a=e.geometry.coordinates,r=e.properties;for(let t=0;t<a.length;t++)a[t].forEach((e=>{const t=e.map((e=>new G(e[0],e[1]))),n=Ze(t);n.isProvinceBlock=!0,o.add(n)}));Ye(r,o),Ke(r,o),o.rotateX(-Math.PI/2),o.isProvinceGroup=!0,o.name=r.name,o.data=r,t.add(o)}((e,t)=>{let n=je(e,{color:Se,linewidth:1,transparent:!0,depthTest:!1},"Line2");n.name="地图上边框",n.position.y+=ge*fe;let o=je(e,{color:Ce,linewidth:1,depthTest:!1},"Line2");o.name="地图下边框",n.scale.setScalar(fe),o.scale.setScalar(fe),t.add(n),t.add(o)})(e,this.scene);const a=Le(t);let{size:r,center:{x:i,y:s,z:l}}=a;this.mapGroup=t,Ae.x=i,Ae.y=s,Ae.z=l,this.corrugatedPlate.position.set(i,0-.1*fe,l),this.resetSceneEle();const d=r.x<r.y?r.y+1:r.x+1;this.outRingMesh=((e,t)=>{let n=new u(t,t),o=new O({map:et,transparent:!0,opacity:1,depthTest:!0}),a=new c(n,o);const{x:r,z:i}=Ae;return a.position.set(r,-1,i),a.scale.setScalar(1.2),a.rotateX(.5*-Math.PI),e.add(a),a})(this.scene,d),this.innerRingMesh=((e,t)=>{let n=new u(t,t),o=new O({map:tt,transparent:!0,opacity:1,depthTest:!0}),a=new c(n,o);const{x:r,z:i}=Ae;return a.position.set(r,-2,i),a.scale.setScalar(1.2),a.rotateX(.5*-Math.PI),e.add(a),a})(this.scene,.9*d),this.addObject(t)}initMapBar(e){if(!this.mapGroup)return;this.clearMapBar();const t=Math.max(...e.map((e=>e.value)));for(let n=0;n<e.length;n++){const{name:o,value:a}=e[n],r=this.mapGroup.getObjectByName(o);if(r){const e=a/t,{centroid:n,center:o}=r.data,i=n||o,s=$e({position:[i[0]*fe,i[1]*fe,ge*fe],factor:e});r.add(s)}else;}}clearMapBar(){this.mapGroup.traverse((e=>{e.isBar&&this.disposeObj(e)}))}initMapOutLine(e){this.outline&&(this.outline=null,this.disposeObj(this.outline));const t=Ge(e,ge,!1),n=_e(t);n.scale.setScalar(fe),this.outline=n,this.addObject(n)}initScatter(e,t){this.scatterGroup&&(this.scatterGroup=null,this.disposeObj(this.scatterGroup));const n=new b;n.name="散点集合";for(let o=0;o<e.length;o++){const t=e[o],[a,r]=t.value,i=Qe(a,r);i.name=t.name,i.data=t,i.isScatter=!0,n.add(i)}n.rotateX(.5*-Math.PI),this.scatterGroup=n,this.addObject(n),this.hoverBack=t}initFlywire(e){this.flywireGroup&&(this.flywireGroup=null,this.disposeObj(this.flywireGroup));const t=new b;for(let n=0;n<e.length;n++){const{coords:o,path:a}=e[n],r=De(o,fe);r.name=a,t.add(r)}t.name="飞线集合",this.flywireGroup=t,this.addObject(t)}resetSceneEle(){const{x:e,y:t,z:n}=Ae;if(this.camera.lookAt(e,t,n),new L(this.camera.position).to({x:Ae.x,y:40*fe,z:n+40*fe},1e3).easing($.Quadratic.In).start().onUpdate((()=>{})),this.controls.target=new p(e,t,n),this.grid){this.grid.position.set(e,0,n);this.scene.getObjectByName("辅助交点").position.set(e,0,n)}}modelAnimate(){let e=this.clock.getDelta();this.corrugatedPlate&&Ie(this.corrugatedPlate,e),this.outline&&Oe(this.outline),this.css3DRender&&this.css3DRender.render(this.scene,this.camera),Ve.offset.y+=.005,this.outRingMesh&&(this.outRingMesh.rotation.z+=5e-4),this.innerRingMesh&&(this.innerRingMesh.rotation.z-=5e-4),this.flywireGroup&&We()}resize(){if(super.resize(),this.css3DRender){const{width:e,height:t}=this.options;this.css3DRender.setSize(e,t)}}}const ot=["src"],at=a(ee({__name:"index",setup(e){const{show:t,options:a}=(e=>{const t=Z({show:!1,...e});return{options:t,show:Y(t.show),filters:Z({})}})({style:{left:"0px",top:"0px"},list:[],extend:{isScatter:!1,city:"",title:"",total:0}}),{load:r}=(()=>{const e=K(0);return{load:t=>{const n=new Q;return new Promise(((o,a)=>{n.load(t,(e=>{let t={};try{t=JSON.parse(e)}catch(n){}o(t)}),(t=>{let{loaded:n,total:o}=t;e.value=Number((n/o*100).toFixed(0))}),a)}))},progress:e}})(),{transformGeoJSON:i}={transformGeoJSON:e=>{let t=e.features;for(let n=0;n<t.length;n++){const e=t[n];"Polygon"===e.geometry.type&&(e.geometry.coordinates=[e.geometry.coordinates])}return e}},s=K(),l={camera:{position:[0,100,200]},fog:{visible:!1,near:2e3,far:3e3},grid:{visible:!0},controls:{maxDistance:5e3},axes:{visible:!1}};let c;const u=()=>{n.get(o.d3.map).then((e=>{const t=[];return{citys:e.list.map((e=>{const n=e.projects.length;let o=e.province;["重庆","北京","天津","上海"].includes(o)&&(o+="市"),["台湾"].includes(o)&&(o+="省"),e.projects.forEach((o=>{t.push({value:[o.lng,o.lat],name:o.name,carbon:o.carbon,use:o.use,total:n,city:e.province,id:o.id})}));const a=e.total;return{name:o,code:e.code,total:n,city:e.province,value:a}})),projects:t,lines:e.lines}})).then((e=>{const{projects:n,citys:o}=e;null==c||c.initScatter(n,((e,n)=>{let r=!!e;if(r){a.style&&(a.style.left=n.left+"px",a.style.top=n.top+"px");const t=e.isScatter,i=e.data;let s="",l="",c=0,u=[];if(t)s=i.city,l=i.name,c=i.total,u=[{name:"今日用电量",value:i.use,unit:"kWh"},{name:"今日碳排放",value:i.carbon,unit:"kgCO₂"}];else{const t=o.find((t=>t.name==e.name));t?(s=null==t?void 0:t.city,c=null==t?void 0:t.total,u=[{name:"今日用电量",value:null==t?void 0:t.value,unit:"kWh"}]):r=!1}a.list=u,a.extend.city=s,a.extend.title=l,a.extend.total=c,a.extend.isScatter=t}t.value=r})),null==c||c.initMapBar(o),null==c||c.initFlywire(e.lines)}))};return te((()=>{l.container=s.value,c=new nt(l),c.run(),r("/oss/map/china.json").then((e=>{c.initMap(i(e)),u()})),r("/oss/map/china-outline.json").then((e=>{c.initMapOutLine(i(e))})),me(c).resize()})),(e,n)=>(ne(),oe("div",{class:ie([e.$style.page,"h-100 o-h"])},[ae("div",{class:"h-100",ref_key:"containerRef",ref:s},null,512),re(t)?(ne(),oe("div",{key:0,class:ie(e.$style["dialog-view"]),style:se(re(a).style)},[re(a).extend.city?(ne(),oe("div",{key:0,class:ie([e.$style.city,"flex"])},[ae("span",{class:ie(e.$style.name)},le(re(a).extend.city),3),ae("span",{class:ie(e.$style.total)},le(re(a).extend.total)+"个项目",3)],2)):ce("",!0),re(a).extend.title?(ne(),oe("div",{key:1,class:ie([e.$style.project,"flex flex-ac"])},[ae("img",{src:`${re("")}oss/img/map/pos.png`,alt:""},null,8,ot),ae("span",{class:ie(e.$style.name)},le(re(a).extend.title),3)],2)):ce("",!0),ae("div",{class:ie(e.$style.count)},[(ne(!0),oe(ue,null,de(re(a).list,(t=>(ne(),oe("div",{class:ie(e.$style.item)},[ae("span",null,le(t.name),1),ae("span",null,le(t.value),1),ae("span",null,le(t.unit),1)],2)))),256))],2)],6)):ce("",!0)],2))}}),[["__cssModules",{$style:{page:"_page_xd45q_2","dialog-view":"_dialog-view_xd45q_6",city:"_city_xd45q_14",name:"_name_xd45q_14",total:"_total_xd45q_22",project:"_project_xd45q_26",count:"_count_xd45q_41",item:"_item_xd45q_45"}}]]);export{at as default};
