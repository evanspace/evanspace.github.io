{"version":3,"file":"index-464754ff.js","sources":["../../../code/src/views/change-password/index.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"clearfix\">\n          <span>修改密码</span>\n        </div>\n      </template>\n      <div class=\"change-pwd\">\n        <el-form ref=\"formRef\" :model=\"formData\" :rules=\"rules\" status-icon label-position=\"top\">\n          <el-form-item label=\"旧密码\" prop=\"password\">\n            <el-input v-model=\"formData.password\" type=\"password\" placeholder=旧密码 clearable show-password autocomplete=\"off\" />\n          </el-form-item>\n          <el-form-item label=\"新密码\" prop=\"newPassword\">\n            <el-input v-model=\"formData.newPassword\" type=\"password\" placeholder=新密码 clearable show-password autocomplete=\"off\" />\n          </el-form-item>\n          <el-form-item label=\"确认新密码\" prop=\"confirmNewPassword\">\n            <el-input v-model=\"formData.confirmNewPassword\" type=\"password\" placeholder=确认密码 clearable show-password autocomplete=\"off\" />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" :loading=\"loading\" @click=\"submitForm\">提交</el-button>\n            <el-button @click=\"resetForm\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useUserStore } from '@/stores'\nimport { ElNotification } from 'element-plus'\nimport { base } from '@/router/utils'\n\nconst formRef = ref( null )\n\nconst formData = reactive( {\n  password: '',\n  newPassword: '',\n  confirmNewPassword: ''\n} )\n\nconst loading = ref( false )\n\nconst validatePass = ( _rule, value, callback ) => {\n  if ( value === '' ) {\n    callback( new Error( '请输入密码' ) )\n  } else {\n    const form: any = formRef.value\n    if ( formData.confirmNewPassword !== '' ) {\n      form.validateField( 'confirmNewPassword' )\n    }\n    if ( value.length < 6 || value.length > 24 ) {\n      callback( new Error( '确保至少包含6个或最多24个字符' ) )\n    }\n    const regex = /^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_!@#$%^&*`~()-+=]+$)(?![a-z0-9]+$)(?![a-z\\W_!@#$%^&*`~()-+=]+$)(?![0-9\\W_!@#$%^&*`~()-+=]+$)[a-zA-Z0-9\\W_!@#$%^&*`~()-+=]/\n\n    if ( !regex.test( value ) ) {\n      callback( new Error( '密码必须包含数字，特殊字符，小写字母，大写字母其中三项' ) )\n    }\n    if ( value === formData.password ) {\n      callback( new Error( '新密码不能与旧密码相同' ) )\n    }\n    callback()\n  }\n}\n\nconst validatePass2 = ( _rule, value, callback ) => {\n  if ( value === '' ) {\n    callback( new Error( '请再次输入密码' ) )\n  } else if ( value !== formData.newPassword ) {\n    callback( new Error( '两个输入不匹配！' ) )\n  } else {\n    callback()\n  }\n}\nconst rules = {\n  password: [ { required: true, trigger: 'blur', message: '请输入旧密码。' } ],\n  newPassword: [ { trigger: 'blur', required: true, validator: validatePass } ],\n  confirmNewPassword: [ { trigger: 'blur', required: true, validator: validatePass2 } ]\n}\n\nconst userStore = useUserStore()\nconst router = useRouter()\nconst submitForm = () => {\n  const form: any = formRef.value\n  form.validate( ( valid ) => {\n    if ( !valid ) { return false }\n\n    loading.value = true\n\n    const params = { ...formData }\n    console.log( params )\n    userStore.changePwd( params )\n    .then( async () => {\n      ElNotification( {\n        type: 'success',\n        title: '提示',\n        message: '密码修改成功！',\n      } )\n      // 重新登录\n      await userStore.logout()\n      router.push( `${ base }/login` )\n    } )\n  } )\n}\n\nconst resetForm = () => {\n  const form: any = formRef.value\n  form.resetFields()\n}\n</script>\n\n<style scoped>\n.content {\n  padding: 10px;\n}\n\n.box-card {\n  margin: 0 auto;\n  max-width: 400px;\n}\n</style>\n\n\n"],"names":["__name","setup","__props","formRef","ref","formData","reactive","password","newPassword","confirmNewPassword","loading","rules","required","trigger","message","validator","_rule","value","callback","Error","form","validateField","length","test","userStore","useUserStore","router","useRouter","submitForm","validate","valid","params","console","log","changePwd","then","async","ElNotification","type","title","logout","push","base","resetForm"],"mappings":"6PAkCAA,OAAA,QAEA,KAAAC,CAAAC,GAA2B,MAAAC,EAAAC,EAAA,MACfC,EAAAC,EAAA,CACGC,SAAA,GACOC,YAAA,GAGtBC,mBAAA,KAGEC,EAAAN,GAAA,GAgCoEO,EAAA,CACQJ,SAAA,CAAA,CAAAK,UAAA,EAAAC,QAAA,OAAAC,QAAA,YACQN,YAAA,CAAA,CAAAK,QAAA,OAAAD,UAAA,EAAAG,UAjClF,CAAAC,EAAAC,EAAAC,KAA+B,GAAA,KAAAD,EAE/BC,EAAA,IAAAC,MAAA,cACA,CACE,MAAAC,EAAAjB,EAAAc,MAAyC,KAAAZ,EAAAI,oBAE3CW,EAAAC,cAAA,uBAC4CJ,EAAAK,OAAA,GAAAL,EAAAK,OAAA,KAE5CJ,EAAA,IAAAC,MAAA,qBAGE,kKAAqDI,KAAAN,IAEvDC,EAAA,IAAAC,MAAA,gCACuCF,IAAAZ,EAAAE,UAEvCW,EAAA,IAAAC,MAAA,mBAIJ,KAeAV,mBAAA,CAAA,CAAAI,QAAA,OAAAD,UAAA,EAAAG,UAbI,CAAAC,EAAAC,EAAAC,KAAiC,KAAAD,EAEjCC,EAAA,IAAAC,MAAA,YAAkCF,IAAAZ,EAAAG,YAElCU,EAAA,IAAAC,MAAA,gBAGJ,KAQAK,EAAAC,IACEC,EAAAC,IACAC,EAAA,KACEzB,EAAAc,MAAgBY,UAAAC,IAAO,IAAAA,EAEvB,OAAA,EAGApB,EAAAO,OAAA,EACA,MAAAc,EAAA,IAAA1B,GAEE2B,QAAAC,IAAAF,GAAgBP,EAAAU,UAAAH,GAAAI,MAAAC,UACRC,EAAA,CACCC,KAAA,UACEC,MAAA,KAGXzB,QAAA,kBAC+BU,EAAAgB,SAC/Bd,EAAAe,KAAA,GAAAC,UAAA,GACF,GAGJ,EAEEC,EAAA,KAAiBxC,EAAAc"}