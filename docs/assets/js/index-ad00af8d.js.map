{"version":3,"file":"index-ad00af8d.js","sources":["../../../code/src/pages/webgl/csg/simple/methods.ts","../../../code/src/pages/webgl/csg/simple/index.vue"],"sourcesContent":["import * as THREE from 'three'\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js'\nimport { SUBTRACTION, INTERSECTION, ADDITION, Brush, Evaluator } from 'three-bvh-csg'\nimport * as ThreeScene from 'three-scene'\n\nconst params = {\n  operation: SUBTRACTION,\n  useGroups: true,\n  wireframe: false\n}\n\nlet brushResult\n\nconst createBaseBrush = () => {\n  // 20 边形\n  const geo = new THREE.IcosahedronGeometry(20, 3)\n  const mat = new THREE.MeshStandardMaterial({\n    // 平面着色\n    flatShading: true,\n\n    // 多边形偏移\n    polygonOffset: true,\n    // 偏移单位\n    polygonOffsetUnits: 1,\n    // 偏移系数\n    polygonOffsetFactor: 1\n  })\n  // @ts-ignore\n  return new Brush(geo, mat)\n}\n\nconst createBrush = () => {\n  // 圆柱体(顶部半径、底部半径、高度、侧面周围分段，侧面高度分段)\n  const geo = new THREE.CylinderGeometry(10, 10, 50, 45, 1)\n  const mat = new THREE.MeshStandardMaterial({\n    // 平面着色\n    flatShading: true,\n    color: 0xff9800,\n    // 自发光\n    emissive: 0xff9800,\n    // 发光强度\n    emissiveIntensity: 0.35,\n\n    // 多边形偏移\n    polygonOffset: true,\n    // 偏移单位\n    polygonOffsetUnits: 10,\n    // 偏移系数\n    polygonOffsetFactor: 10\n  })\n  // @ts-ignore\n  return new Brush(geo, mat)\n}\n\nconst createGUI = container => {\n  const gui = new GUI()\n  gui.add(params, 'operation', { SUBTRACTION, INTERSECTION, ADDITION }).name('布尔类型')\n  gui.add(params, 'wireframe').name('线框材质')\n  gui.add(params, 'useGroups').name('使用组合')\n\n  // @ts-ignore\n  gui.domElement.style = 'position: absolute; top: 10px; right: 10px'\n  container?.appendChild(gui.domElement)\n}\n\nexport class NewThreeScene extends ThreeScene.Scene {\n  evaluator: InstanceType<typeof Evaluator>\n  baseBrush: InstanceType<typeof Brush>\n  brush: InstanceType<typeof Brush>\n  wireframe: InstanceType<typeof THREE.Mesh>\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n    this.evaluator = new Evaluator()\n\n    // 主体\n    this.baseBrush = createBaseBrush()\n    //布尔运算物体\n    this.brush = createBrush()\n\n    this.wireframe = new THREE.Mesh(\n      new THREE.BoxGeometry(1, 1, 1),\n      new THREE.MeshBasicMaterial({ color: 0x009688, wireframe: true })\n    )\n    this.addModel()\n  }\n\n  initModel(): void {\n    const plane = new THREE.Mesh(\n      new THREE.PlaneGeometry(1000, 1000),\n      // 阴影材质\n      new THREE.ShadowMaterial({\n        color: 0xfae3d9,\n        transparent: true,\n        opacity: 0.35,\n        side: THREE.DoubleSide\n      })\n    )\n    plane.rotation.x = -Math.PI / 2\n    plane.scale.setScalar(10)\n    plane.receiveShadow = true\n    this.addObject(plane)\n\n    createGUI(this.container)\n  }\n\n  addModel() {\n    const wireframe = this.wireframe\n    wireframe.position.set(0, 50, 0)\n    this.addObject(wireframe)\n  }\n\n  updateCSG() {\n    this.evaluator.useGroups = params.useGroups\n    brushResult = this.evaluator.evaluate(this.baseBrush, this.brush, params.operation, brushResult)\n    brushResult.castShadow = true\n    brushResult.position.set(0, 50, 0)\n    brushResult.receiveShadow = true\n    this.addObject(brushResult)\n  }\n\n  modelAnimate(): void {\n    // 测量web应用性能\n    const t = window.performance.now() + 9000\n\n    const brush: InstanceType<typeof THREE.Mesh> = this.brush\n    brush.rotation.x = t * -0.0002\n    brush.rotation.y = t * -0.0005\n    brush.rotation.z = t * -0.001\n\n    const s = 0.5 + 0.5 * (1 + Math.sin(t * 0.001))\n    brush.scale.set(s, 1, s)\n    brush.updateMatrixWorld()\n\n    this.updateCSG()\n\n    this.wireframe.geometry = brushResult.geometry\n    this.wireframe.visible = params.wireframe\n  }\n}\n","<template>\n  <div :class=\"$style.page\" class=\"h-100 o-h\">\n    <div ref=\"containerRef\" class=\"h-100\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { NewThreeScene } from './methods'\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\n\nconst options: ConstructorParameters<typeof NewThreeScene>[0] = {\n  camera: {\n    position: [0, 100, 260]\n  },\n  render: {\n    alpha: true\n  },\n  grid: {\n    visible: true\n  },\n  axes: {\n    visible: true\n  }\n}\n\nlet scene: InstanceType<typeof NewThreeScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new NewThreeScene(options)\n  scene.run()\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\" module>\n.page {\n  position: relative;\n}\n</style>\n"],"names":["params","operation","SUBTRACTION","useGroups","wireframe","brushResult","NewThreeScene","ThreeScene.Scene","constructor","options","super","__publicField","this","evaluator","Evaluator","baseBrush","geo","THREE.IcosahedronGeometry","mat","THREE.MeshStandardMaterial","flatShading","polygonOffset","polygonOffsetUnits","polygonOffsetFactor","Brush","createBaseBrush","brush","THREE.CylinderGeometry","color","emissive","emissiveIntensity","createBrush","THREE.Mesh","THREE.BoxGeometry","THREE.MeshBasicMaterial","addModel","initModel","plane","THREE.PlaneGeometry","THREE.ShadowMaterial","transparent","opacity","side","THREE.DoubleSide","rotation","x","Math","PI","scale","setScalar","receiveShadow","addObject","container","gui","GUI","add","INTERSECTION","ADDITION","name","domElement","style","appendChild","createGUI","position","set","updateCSG","evaluate","castShadow","modelAnimate","t","window","performance","now","y","z","s","sin","updateMatrixWorld","geometry","visible","containerRef","ref","camera","render","alpha","grid","axes","scene","onMounted","value","run","useResize","resize"],"mappings":"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"}