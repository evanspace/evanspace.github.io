{"version":3,"file":"index-9f5c840e.js","sources":["../../../code/src/views/login/title.vue","../../../code/src/views/login/index.vue"],"sourcesContent":["<template>\n  <canvas ref=\"canvasRef\" id=\"WORD_CANVAS\" style=\"position: relative; z-index: 2;\"></canvas>\n</template>\n\n<script lang=\"ts\" setup>\nconst RAF = ( function() {\n  return window.requestAnimationFrame || window.requestAnimationFrame || window.requestAnimationFrame || window.requestAnimationFrame || window.requestAnimationFrame || function( callback) {\n    window.setTimeout( callback, 1000 / 60)\n  }\n})()\n\nconst props = defineProps( {\n  // 名字\n  name: String,\n  // 画布高度\n  height: Number,\n  // 字体颜色\n  color: {\n    type: String,\n    default: '#ffffff'\n  },\n  // 字体大小\n  size: {\n    type: Number,\n    default: 80\n  },\n  // 鼠标半径\n  mouseRadius: {\n    type: Number,\n    default: 30,\n  }\n} )\n\nconst canvasRef = ref( 'canvasRef' )\n\nconst mouse: any =( {\n  x: null,\n  y: null\n} )\n\ntype particle = {\n  sizeX: number,\n  sizeY: number,\n  oldColor: string,\n}\nconst particle: particle = reactive( {\n  sizeX: 2,\n  sizeY: 2,\n  oldColor: '',\n} )\n\ntype pr = {\n  x: number,\n  y: number,\n  ex: number,\n  ey: number,\n  vx: number,\n  vy: number,\n  color: string,\n  a: number,\n  width: number,\n  height: number,\n  stop: boolean,\n  checkLength: number,\n  maxCheckTimes: number,\n  checkTimes: number,\n  recordX?: number,\n  recordY?: number,\n}\nconst particleList: Array<pr> = reactive( [] )\nconst animateList: any =  ref( [] )\n\n// 创建图片\nlet canvasEl: any\nlet canvasCtx: any\nlet canvasImg: any\nconst initCreateImg = () => {\n  let canvas: any = canvasRef.value\n  canvasEl = canvas\n  canvasCtx = canvas.getContext('2d')\n\n  canvasEl.width = window.innerWidth\n  canvasEl.height = props.height || window.innerHeight\n\n  let _img = document.createElement( 'canvas' )\n  _img.width = 600\n  _img.height = 200\n  let imgctx: any = _img.getContext('2d')\n  imgctx.textAlign = 'center'\n  imgctx.textBaseline = 'middle'\n  imgctx.font = `bold ${ props.size }px 微软雅黑`\n  imgctx.fillStyle = props.color\n  imgctx.fillText( props.name || '平台', _img.width / 2, _img.height / 2 )\n  \n  canvasImg = _img\n  initCanvas()\n}\n\n// 初始化\nconst initCanvas = () => {\n  resetCanvas()\n  initImageData()\n  execAnimate()\n}\n\n\ntype pos = {\n  ite: number,\n  start: number,\n  end: number,\n}\nconst position: pos = reactive( {\n  ite: 0,\n  start: 0,\n  end: 0,\n} )\n// 重制画布\nconst resetCanvas = () => {\n  particleList.length = 0\n\n  // ref 声明的数组\n  animateList.length = 0\n  animateList.values = []\n\n\n  position.ite = 100\n  position.start = 0\n  position.end = position.start + position.ite\n}\n\n// 初始化图片数据\nconst initImageData = () => {\n  let canvas = canvasEl, _img = canvasImg\n  let width = ( canvas.width - _img.width ) / 2\n  let height = ( canvas.height - _img.height ) / 2\n  \n  canvasCtx.clearRect( 0, 0, canvas.width, canvas.height )\n  canvasCtx.drawImage( _img, width, height, _img.width, _img.height )\n\n  const imgData = canvasCtx.getImageData( width, height, _img.width, _img.height )\n\n  for ( let x = 0; x < _img.width; x += particle.sizeX ) {\n    for ( let y = 0; y < _img.height; y += particle.sizeY ) {\n      const i = (y * imgData.width + x) * 4\n\n      if ( imgData.data[i + 3] >= 125 ) {\n        const color = `rgba(${ imgData.data[ i ] } , ${ imgData.data[ i + 1 ] } ,  ${ imgData.data[ i + 2 ] } , ${ imgData.data[i + 3] })`\n\n        let x_random = x + Math.random() * 20,\n            vx = -Math.random() * 200 + 400,\n            y_random = _img.height / 2 - Math.random() * 40 + 20,\n            vy\n\n        if ( y_random < height + _img.height / 2 ) {\n          vy = Math.random() * 300\n        } else {\n          vy = -Math.random() * 300\n        }\n\n        particleList.push( {\n          x: x_random + width,\n          y: y_random + height,\n          ex: x + width,\n          ey: y + height,\n          vx: vx,\n          vy: vy,\n          color: color,\n\n          a: 1500,\n          width: particle.sizeX,\n          height: particle.sizeY,\n          stop: false,\n          checkLength: 5,\n          maxCheckTimes: 10,\n          checkTimes: 0,\n        } )\n\n        let obj = particleList[ particleList.length - 1 ]\n        draw( obj )\n      }\n    }\n  }\n}\n\n// 画\nconst draw = ( obj: pr ) => {\n  if ( particle.oldColor != obj.color ) {\n    canvasCtx.fillStyle = obj.color\n    particle.oldColor = obj.color\n  }\n  canvasCtx.fillRect( obj.x - obj.width / 2, obj.y - obj.height / 2, obj.width, obj.height )\n}\n\n// 鼠标移动\nconst mousemove = ( e: any ) => {\n  if (e.target.id == 'WORD_CANVAS') {\n    mouse.x = e.clientX - e.target.getBoundingClientRect().left\n    mouse.y = e.clientY - e.target.getBoundingClientRect().top\n  } else {\n    mouse.x = null\n    mouse.y = null\n  }\n}\n\n// 执行动画\nlet isInit: boolean = false\nconst execAnimate = () => {\n  particleList.sort( ( a, b ) => a.ex - b.ex )\n\n  if ( !isInit ) {\n    isInit = true\n    animate( ( tickTime: any ) => {\n      if ( animateList.length < particleList.length ) {\n        if ( position.end > ( particleList.length - 1 ) ) {\n          position.end = ( particleList.length - 1 )\n        }\n        let list = particleList.slice( position.start, position.end )\n        animateList.values = animateList.values.concat( list )\n\n        position.start += position.ite\n        position.end += position.ite\n      }\n\n      animateList.values.forEach( ( it: any ) => {\n        update( it, tickTime )\n      } )\n    })\n  }\n}\n\n// 动画\nconst animate = ( tick: { ( tickTime: any ): void; ( arg0: number ): void; } ) => {\n  if ( typeof tick == 'function' ) {\n    let tickTime = 16\n\n    canvasCtx.clearRect( 0, 0, canvasEl.width, canvasEl.height )\n\n    tick( tickTime )\n\n    RAF( () => {\n      animate( tick )\n    } )\n  }\n}\n\n// 更新\nconst update = ( obj: pr, tickTime: any ) => {\n  move( obj, tickTime )\n  draw( obj )\n  checkMouse( obj )\n}\n\n\n// 移动\nconst move = ( obj: pr, tickTime: number ) => {\n  if ( obj.stop ) {\n    obj.x = obj.ex\n    obj.y = obj.ey\n  } else {\n    tickTime = tickTime / 1000\n\n  const cx = obj.ex - obj.x\n  const cy = obj.ey - obj.y\n\n  const angle = Math.atan( cy / cx )\n  let ax = Math.abs(obj.a * Math.cos( angle ) )\n    ax = obj.x > obj.ex ? -ax : ax\n\n  let ay = Math.abs( obj.a * Math.sin( angle ) )\n    ay = obj.y > obj.ey ? -ay : ay\n\n    obj.vx += ax * tickTime\n    obj.vy += ay * tickTime\n    obj.vx *= 0.95\n    obj.vy *= 0.95\n    obj.x += obj.vx * tickTime\n    obj.y += obj.vy * tickTime\n\n    if ( Math.abs( obj.x - obj.ex ) <= obj.checkLength && Math.abs( obj.y - obj.ey ) <= obj.checkLength ) {\n      obj.checkTimes++\n      if ( obj.checkTimes >= obj.maxCheckTimes ) {\n        obj.stop = true\n      }\n    } else {\n      obj.checkTimes = 0\n    }\n  }\n}\n\n\n// 检测鼠标位置\nconst checkMouse = ( obj: any ) => {\n  if ( !mouse.x ) {\n    goback()\n    return\n  }\n  const mouseRadius = props.mouseRadius\n  const distance = Math.sqrt( Math.pow( mouse.x - obj.x, 2 ) + Math.pow( mouse.y - obj.y, 2 ) )\n  const angle = Math.atan( ( mouse.y - obj.y) / ( mouse.x - obj.x ) )\n  if ( distance < mouseRadius ) {\n    obj.stop = false\n    obj.checkTimes = 0\n\n    if ( !obj.recordX ) {\n      obj.recordX = obj.ex\n      obj.recordY = obj.ey\n    }\n\n    obj.a = 2000 + 1000 * ( 1 - distance / mouseRadius )\n\n    let xc = Math.abs( ( mouseRadius - distance ) * Math.cos( angle ) )\n    let yc = Math.abs( ( mouseRadius - distance ) * Math.sin( angle ) )\n    xc = mouse.x > obj.x ? -xc : xc\n    yc = mouse.y > obj.y ? -yc : yc\n    obj.ex = obj.x + xc\n    obj.ey = obj.y + yc\n  } else {\n    goback()\n  }\n\n  function goback() {\n    if ( obj.recordX ) {\n      obj.stop = false\n      obj.checkTimes = 0\n\n      obj.a = 1500;\n      obj.ex = obj.recordX\n      obj.ey = obj.recordY\n\n      obj.recordX = null\n      obj.recordY = null\n    }\n  }\n}\n\n// 监听\nwatch( props, () => {\n  initCreateImg()\n} )\n\n// 装载完成\nonMounted( () => {\n  window.addEventListener('mousemove', mousemove, false)\n  initCreateImg()\n  window.addEventListener('resize', initCreateImg, false)\n} )\n\n// 卸载前\nonBeforeUnmount( () => {\n  window.removeEventListener( 'mousemove', mousemove )\n  window.removeEventListener( 'resize', initCreateImg )\n} )\n\n</script>\n\n<style>\n\n</style>\n","<template>\n  <div class=\"login-page\">\n    <top-title :name=\"title\" :height=\"200\" color=\"#ffffff\" :size=\"35\" :mouse-radius=\"50\" />\n\n    <div class=\"login-page__panel flex flex-ac\">\n      <div class=\"login-page__left f-x\">\n        <img :src=\"loginBg\" alt=\"\" />\n      </div>\n\n      <div class=\"login-page__right\">\n        <div class=\"login-page--right_form\" ref=\"loadingRef\">\n          <div class=\"bg\"></div>\n          <h1 class=\"title\">\n            <span>请登录！</span>\n          </h1>\n\n          <el-form class=\"form\" ref=\"loginRef\" :model=\"loginForm\" :rules=\"loginRules\">\n            <el-form-item prop=\"username\" key=\"username\">\n              <el-input\n                v-focus\n                clearable\n                v-model=\"loginForm.username\"\n                placeholder=\"账户\"\n                tabindex=\"1\"\n                size=\"large\"\n                :prefix-icon=\"User\"\n                @keyup.enter=\"handleSubmitLogin\"\n              >\n              </el-input>\n            </el-form-item>\n\n            <el-tooltip :visible=\"capsTooltip\" content=\"大小写锁定\" placement=\"right\" manual>\n              <el-form-item prop=\"password\" key=\"password\">\n                <el-input\n                  clearable\n                  placeholder=\"密码\"\n                  tabindex=\"2\"\n                  v-model=\"loginForm.password\"\n                  type=\"password\"\n                  show-password\n                  size=\"large\"\n                  :prefix-icon=\"Lock\"\n                  @keyup=\"checkCapslock\"\n                  @blur=\"capsTooltip = false\"\n                >\n                </el-input>\n              </el-form-item>\n            </el-tooltip>\n\n            <el-form-item prop=\"code\" key=\"code\">\n              <el-input\n                v-model=\"loginForm.code\"\n                clearable\n                placeholder=\"验证码\"\n                maxlength=\"6\"\n                tabindex=\"3\"\n                size=\"large\"\n                :prefix-icon=\"Key\"\n                @keyup.enter=\"handleSubmitLogin\"\n              >\n              </el-input>\n            </el-form-item>\n\n            <div class=\"btn-wrap\">\n              <div class=\"btn\" @click=\"handleSubmitLogin\">login</div>\n            </div>\n          </el-form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { User, Lock, Key } from '@element-plus/icons-vue'\nimport { useUserStore } from '@/stores'\nimport { Api } from '@/config'\nimport topTitle from './title.vue'\nimport { base } from '@/router/utils'\n\ndefineComponent({\n  User,\n  Lock,\n  Key,\n  topTitle\n})\n\n//\t指令 v-focus\nconst vFocus = {\n  mounted: el => {\n    // 聚焦元素\n    el.querySelector('input').focus()\n  }\n}\n\n// 登录背景\nconst loginBg = new URL('/imgs/login-icon.png', import.meta.url).href\n\nconst env = import.meta.env\nlet isDev = env.VITE_MODE == 'dev'\n\ntype loginForm = {\n  username: string\n  password: string\n  code: string\n  randomStr: string\n}\n\nconst date = new Date()\nconst year = date.getFullYear() + ''\nconst month = date.getMonth() + 1 + ''\nconst day = date.getDate() + ''\n\nconst loginForm = reactive<loginForm>({\n  username: isDev ? year : '',\n  password: isDev ? month : '',\n  code: isDev ? day : '',\n  randomStr: ''\n})\n\nconst loginRules = reactive({\n  username: [{ required: true, message: '请输入账号', trigger: 'blur' }],\n  password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n  code: [\n    {\n      required: true,\n      validator: (_rule: any, value: String, callback: Function) => {\n        !value && (value = '')\n        if (value == '') {\n          callback(new Error('请输入验证码!'))\n        } else {\n          callback()\n        }\n      },\n      trigger: 'blur'\n    }\n  ]\n})\n\n// 大小写提示\nconst capsTooltip = ref(false)\n// 重定向地址\nconst redirect = ref<any>('')\n// 路由参数\nconst otherQuery = ref({})\n\n// 登录\nconst loginRef = ref(null)\nconst loadingRef = ref(null)\n\nconst userStore = useUserStore()\nconst route = useRoute()\nconst router = useRouter()\n\n// 平台标题\nconst title = computed(() => Api.base.title)\n\n// 获取路由参数除重定向字段\nconst getOtherQuery = (query: any) => {\n  return Object.keys(query).reduce((acc: any, cur: string) => {\n    if (cur !== 'redirect') {\n      acc[cur] = query[cur]\n    }\n    return acc\n  }, {})\n}\n\n// 监听\nwatch(\n  route,\n  ({ query }) => {\n    if (query) {\n      redirect.value = query.redirect != 'error' ? query.redirect || '' : ''\n      otherQuery.value = getOtherQuery(query)\n    }\n  },\n  { immediate: true }\n)\n\n// 登录\nconst handleSubmitLogin = () => {\n  const loginInstance: any = loginRef.value\n  if (!loginInstance) return\n\n  loginInstance.validate((valid: any) => {\n    if (!valid) return\n\n    userStore.login(loginForm, loadingRef.value).then(_ => {\n      // 判断重定向地址是否在当前域名下\n      if (redirect.value.indexOf(Api.base.domian) < 0) {\n        router.push({ path: redirect.value || `${base}/`, query: otherQuery.value })\n      } else {\n        // 跳转地址\n        window.location.href = decodeURIComponent(redirect.value)\n      }\n    })\n  })\n}\n\n// 检测键盘是否开启大写\nconst checkCapslock = ({ shiftKey, key, keyCode }: any = {}) => {\n  if (keyCode == 13) {\n    handleSubmitLogin()\n    return\n  }\n  if (key && key.length === 1) {\n    if ((shiftKey && key >= 'a' && key <= 'z') || (!shiftKey && key >= 'A' && key <= 'Z')) {\n      capsTooltip.value = true\n    } else {\n      capsTooltip.value = false\n    }\n  }\n  if (key === 'CapsLock' && capsTooltip.value === true) {\n    capsTooltip.value = false\n  }\n}\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\"></style>\n"],"names":["RAF","window","requestAnimationFrame","callback","setTimeout","props","__props","canvasRef","ref","mouse","x","y","particle","reactive","sizeX","sizeY","oldColor","particleList","animateList","canvasEl","canvasCtx","canvasImg","initCreateImg","canvas","value","getContext","width","innerWidth","height","innerHeight","_img","document","createElement","imgctx","textAlign","textBaseline","font","size","fillStyle","color","fillText","name","initCanvas","position","ite","start","end","resetCanvas","length","values","initImageData","clearRect","drawImage","imgData","getImageData","i","data","vy","x_random","Math","random","vx","y_random","push","ex","ey","a","stop","checkLength","maxCheckTimes","checkTimes","obj","draw","fillRect","mousemove","e","target","id","clientX","getBoundingClientRect","left","clientY","top","isInit","execAnimate","sort","b","animate","tickTime","list","slice","concat","forEach","it","update","tick","move","checkMouse","cx","cy","angle","atan","ax","abs","cos","ay","sin","mouseRadius","distance","sqrt","pow","recordX","recordY","xc","yc","goback","watch","onMounted","addEventListener","onBeforeUnmount","removeEventListener","vFocus","mounted","el","querySelector","focus","loginBg","URL","self","location","href","date","Date","getFullYear","getMonth","getDate","loginForm","username","password","code","randomStr","loginRules","required","message","trigger","validator","_rule","Error","capsTooltip","redirect","otherQuery","loginRef","loadingRef","userStore","useUserStore","route","useRoute","router","useRouter","title","computed","Api","base","query","Object","keys","reduce","acc","cur","getOtherQuery","immediate","handleSubmitLogin","loginInstance","validate","valid","login","then","_","indexOf","domian","path","decodeURIComponent","checkCapslock","shiftKey","key","keyCode"],"mappings":"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"}