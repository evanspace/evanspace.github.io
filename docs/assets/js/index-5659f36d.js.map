{"version":3,"file":"index-5659f36d.js","sources":["../../../code/src/pages/webgl/effect/unreal-bloom/methods.ts","../../../code/src/pages/webgl/effect/unreal-bloom/index.vue"],"sourcesContent":["import * as THREE from 'three'\nimport * as ThreeScene from 'three-scene'\n\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass'\n\nconst Hooks = ThreeScene.Hooks\n\nconst base = import.meta.env.VITE_BEFORE_STATIC_PATH\n\nconst { loadModel } = Hooks.useModelLoader({\n  baseUrl: base,\n  indexDB: {\n    cache: false,\n    dbName: 'THREE__BLOOM__DB',\n    tbName: 'TB',\n    version: 1\n  }\n})\n\nconst params = {\n  glb: `${base}/oss/model/gltf/PrimaryIonDrive.glb`,\n  // glb: `${base}/oss/model/station/楼宇.glb`,\n  threshold: 0,\n  strength: 1,\n  radius: 0,\n  exposure: 1\n}\n\nexport class NewThreeScene extends ThreeScene.Scene {\n  bloomPass: InstanceType<typeof UnrealBloomPass> | undefined\n  composer: InstanceType<typeof EffectComposer> | undefined\n  mixer: InstanceType<typeof THREE.AnimationMixer> | undefined\n  clock: InstanceType<typeof THREE.Clock>\n  constructor(options: ConstructorParameters<typeof ThreeScene.Scene>[0]) {\n    super(options)\n\n    // 通道：它只会渲染场景，但不会把结果输出到场景\n    const renderScene = new RenderPass(this.scene, this.camera)\n    const { width, height } = this.options\n    // 发光效果(覆盖场景大小 Vector2类型向量，泛光强度，散发半径， 限制物体开始发光的亮度值)\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(width, height), 1.5, 0.4, 0.85)\n    // 限制物体开始发光的亮度值\n    bloomPass.threshold = params.threshold\n    // 泛光强度\n    bloomPass.strength = params.strength\n    // 散发半径\n    bloomPass.radius = params.radius\n    this.bloomPass = bloomPass\n\n    // 输出通道\n    const outputPass = new OutputPass()\n\n    this.clock = new THREE.Clock()\n\n    // 物体的发光效果\n    const composer = new EffectComposer(this.renderer)\n    composer.addPass(renderScene)\n    composer.addPass(bloomPass)\n    composer.addPass(outputPass)\n    this.composer = composer\n\n    // 色调映射 (THREE.ReinhardToneMapping 曝光值)\n    this.renderer.toneMapping = THREE.ReinhardToneMapping\n    this.createGUI()\n  }\n\n  initModel() {\n    loadModel({\n      url: params.glb,\n      key: '',\n      name: ''\n    }).then(model => {\n      model.scale.setScalar(50)\n      this.addObject(model)\n\n      // 动画\n      const mixer = new THREE.AnimationMixer(model)\n      const clip = model.animations[0]\n      // 优化,播放\n      mixer.clipAction(clip.optimize()).play()\n      this.mixer = mixer\n    })\n  }\n\n  createGUI() {\n    const gui = new GUI()\n    const bloomFolder = gui.addFolder('泛光')\n    bloomFolder\n      .add(params, 'threshold', 0, 1)\n      .name('限制发光值')\n      .onChange(v => {\n        if (!this.bloomPass) return\n        this.bloomPass.threshold = Number(v)\n      })\n    bloomFolder\n      .add(params, 'strength', 0, 3)\n      .name('强度')\n      .onChange(v => {\n        if (!this.bloomPass) return\n        this.bloomPass.strength = Number(v)\n      })\n    bloomFolder\n      .add(params, 'radius', 0, 1)\n      .step(0.01)\n      .name('半径')\n      .onChange(v => {\n        if (!this.bloomPass) return\n        this.bloomPass.radius = Number(v)\n      })\n\n    const toneMappingFolder = gui.addFolder('渲染器')\n    toneMappingFolder\n      .add(params, 'exposure', 0.1, 2)\n      .name('亮度')\n      .onChange(v => {\n        // Math.pow 指数幂\n        this.renderer.toneMappingExposure = Math.pow(v, 4)\n      })\n\n    // @ts-ignore\n    gui.domElement.style = 'position: absolute; top: 10px; right: 10px'\n    this.container?.appendChild(gui.domElement)\n  }\n\n  animate() {\n    if (this.composer) {\n      this.composer.render()\n    }\n    if (this.mixer) {\n      const delta = this.clock.getDelta()\n      this.mixer.update(delta)\n    }\n  }\n}\n","<template>\n  <div :class=\"$style.page\" class=\"h-100 o-h\">\n    <div ref=\"containerRef\" class=\"h-100\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { NewThreeScene } from './methods'\nimport { useResize } from '@/hooks/scene-resize'\n\nconst containerRef = ref()\n\nconst options: ConstructorParameters<typeof NewThreeScene>[0] = {\n  camera: {\n    position: [0, 80, 300]\n  },\n  grid: {\n    visible: false\n  },\n  axes: {\n    visible: false\n  }\n}\n\nlet scene: InstanceType<typeof NewThreeScene>\n\nonMounted(() => {\n  options.container = containerRef.value\n  scene = new NewThreeScene(options)\n  scene.run()\n  useResize(scene).resize()\n})\n</script>\n\n<style lang=\"scss\" module>\n.page {\n  position: relative;\n}\n</style>\n"],"names":["Hooks","ThreeScene.Hooks","loadModel","useModelLoader","baseUrl","indexDB","cache","dbName","tbName","version","params","glb","threshold","strength","radius","exposure","NewThreeScene","ThreeScene.Scene","constructor","options","super","__publicField","this","renderScene","RenderPass","scene","camera","width","height","bloomPass","UnrealBloomPass","THREE.Vector2","outputPass","OutputPass","clock","THREE.Clock","composer","EffectComposer","renderer","addPass","toneMapping","THREE.ReinhardToneMapping","createGUI","initModel","url","key","name","then","model","scale","setScalar","addObject","mixer","THREE.AnimationMixer","clip","animations","clipAction","optimize","play","gui","GUI","bloomFolder","addFolder","add","onChange","v","Number","step","toneMappingExposure","Math","pow","domElement","style","_a","container","appendChild","animate","render","delta","getDelta","update","containerRef","ref","position","grid","visible","axes","onMounted","value","run","useResize","resize"],"mappings":"gaASA,MAAMA,EAAQC,GAIRC,UAAEA,GAAcF,EAAMG,eAAe,CACzCC,QAHW,GAIXC,QAAS,CACPC,OAAO,EACPC,OAAQ,mBACRC,OAAQ,KACRC,QAAS,KAIPC,EAAS,CACbC,IAAK,sCAELC,UAAW,EACXC,SAAU,EACVC,OAAQ,EACRC,SAAU,GAGC,MAAAC,UAAsBC,EAKjC,WAAAC,CAAYC,GACVC,MAAMD,GALRE,EAAAC,KAAA,aACAD,EAAAC,KAAA,YACAD,EAAAC,KAAA,SACAD,EAAAC,KAAA,SAKE,MAAMC,EAAc,IAAIC,EAAWF,KAAKG,MAAOH,KAAKI,SAC9CC,MAAEA,EAAAC,OAAOA,GAAWN,KAAKH,QAEzBU,EAAY,IAAIC,EAAgB,IAAIC,EAAcJ,EAAOC,GAAS,IAAK,GAAK,KAElFC,EAAUjB,UAAYF,EAAOE,UAE7BiB,EAAUhB,SAAWH,EAAOG,SAE5BgB,EAAUf,OAASJ,EAAOI,OAC1BQ,KAAKO,UAAYA,EAGX,MAAAG,EAAa,IAAIC,EAElBX,KAAAY,MAAQ,IAAIC,EAGjB,MAAMC,EAAW,IAAIC,EAAef,KAAKgB,UACzCF,EAASG,QAAQhB,GACjBa,EAASG,QAAQV,GACjBO,EAASG,QAAQP,GACjBV,KAAKc,SAAWA,EAGXd,KAAAgB,SAASE,YAAcC,EAC5BnB,KAAKoB,WACP,CAEA,SAAAC,GACYzC,EAAA,CACR0C,IAAKlC,EAAOC,IACZkC,IAAK,GACLC,KAAM,KACLC,MAAcC,IACTA,EAAAC,MAAMC,UAAU,IACtB5B,KAAK6B,UAAUH,GAGT,MAAAI,EAAQ,IAAIC,EAAqBL,GACjCM,EAAON,EAAMO,WAAW,GAE9BH,EAAMI,WAAWF,EAAKG,YAAYC,OAClCpC,KAAK8B,MAAQA,CAAA,GAEjB,CAEA,SAAAV,SACQ,MAAAiB,EAAM,IAAIC,EACVC,EAAcF,EAAIG,UAAU,MAE/BD,EAAAE,IAAIrD,EAAQ,YAAa,EAAG,GAC5BoC,KAAK,SACLkB,UAAcC,IACR3C,KAAKO,YACLP,KAAAO,UAAUjB,UAAYsD,OAAOD,GAAC,IAGpCJ,EAAAE,IAAIrD,EAAQ,WAAY,EAAG,GAC3BoC,KAAK,MACLkB,UAAcC,IACR3C,KAAKO,YACLP,KAAAO,UAAUhB,SAAWqD,OAAOD,GAAC,IAEtCJ,EACGE,IAAIrD,EAAQ,SAAU,EAAG,GACzByD,KAAK,KACLrB,KAAK,MACLkB,UAAcC,IACR3C,KAAKO,YACLP,KAAAO,UAAUf,OAASoD,OAAOD,GAAC,IAGVN,EAAIG,UAAU,OAErCC,IAAIrD,EAAQ,WAAY,GAAK,GAC7BoC,KAAK,MACLkB,UAAcC,IAEb3C,KAAKgB,SAAS8B,oBAAsBC,KAAKC,IAAIL,EAAG,EAAC,IAIrDN,EAAIY,WAAWC,MAAQ,6CAClB,OAAAC,EAAAnD,KAAAoD,YAAWD,EAAAE,YAAYhB,EAAIY,WAClC,CAEA,OAAAK,GAIE,GAHItD,KAAKc,UACPd,KAAKc,SAASyC,SAEZvD,KAAK8B,MAAO,CACR,MAAA0B,EAAQxD,KAAKY,MAAM6C,WACpBzD,KAAA8B,MAAM4B,OAAOF,EACpB,CACF,uCC9HF,MAAAG,EAAAC,IAEA/D,EAAA,CAAgEO,OAAA,CACtDyD,SAAA,CAAA,EAAA,GAAA,MAERC,KAAA,CACMC,SAAA,GAENC,KAAA,CACMD,SAAA,IAKR,IAAA5D,SAEA8D,GAAA,KACEpE,EAAAuD,UAAAO,EAAAO,MACA/D,EAAA,IAAAT,EAAAG,GACAM,EAAAgE,MACAC,EAAAjE,GAAAkE"}